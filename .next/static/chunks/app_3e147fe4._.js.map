{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/order.js"],"sourcesContent":["// app/actions/order.js\r\n\r\nexport const addOrder = async (body) => {\r\n  const response = await fetch(\"/api/order/checkout\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(body),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"送出訂單失敗\");\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// 其他函式目前先保留 null，未來可以實作\r\nexport const getCustomerOrder = async (customerId) => {\r\n  return null;\r\n};\r\nexport const editOrderStatus = async (body, orderId) => {\r\n  return null;\r\n};\r\nexport const getPendingOrders = async () => {\r\n  return null;\r\n};\r\nexport const getKitchenOrders = async () => {\r\n  return null;\r\n};\r\nexport const getReadyOrders = async () => {\r\n  return null;\r\n};\r\nexport const getOrderById = async () => {\r\n  return null;\r\n};\r\n  "],"names":[],"mappings":"AAAA,uBAAuB;;;;;;;;;;AAEhB,MAAM,WAAW,OAAO;IAC7B,MAAM,WAAW,MAAM,MAAM,uBAAuB;QAClD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,mBAAmB,OAAO;IACrC,OAAO;AACT;AACO,MAAM,kBAAkB,OAAO,MAAM;IAC1C,OAAO;AACT;AACO,MAAM,mBAAmB;IAC9B,OAAO;AACT;AACO,MAAM,mBAAmB;IAC9B,OAAO;AACT;AACO,MAAM,iBAAiB;IAC5B,OAAO;AACT;AACO,MAAM,eAAe;IAC1B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/notification.js"],"sourcesContent":["// app/actions/notification.js (修正後)\r\n\"use server\"; // ✨ 必須有這行，將其標記為 Server Actions\r\n\r\nimport { prisma } from '@/lib/prisma'; // ✨ 導入具名導出的 prisma 客戶端\r\n\r\nexport const addNotification = async (body, userId) => {\r\n    try {\r\n        // ✨ 這裡應該是添加通知到資料庫的邏輯\r\n        if (!userId || !body || !body.message || !body.orderId || !body.title || !body.type) {\r\n            throw new Error(\"Missing notification data or userId.\");\r\n        }\r\n        const newNotification = await prisma.notification.create({\r\n            data: {\r\n                userId: userId,\r\n                orderId: body.orderId, // 假設 body 包含 orderId\r\n                message: body.message,\r\n                // 其他欄位如 isRead 會有 default 值\r\n                // title 和 type 需要在你的 Notification model 中定義或處理\r\n            }\r\n        });\r\n        return { success: true, notification: newNotification };\r\n    } catch (error) {\r\n        console.error(\"Failed to add notification (Server Action):\", error);\r\n        return { error: error.message };\r\n    }\r\n};\r\n\r\nexport const getUserNotification = async (userId) => {\r\n    try {\r\n        // ✨ 這裡應該是從資料庫獲取使用者通知的邏輯\r\n        if (!userId) {\r\n            throw new Error(\"User ID is required for fetching notifications.\");\r\n        }\r\n        const notifications = await prisma.notification.findMany({\r\n            where: { userId: userId },\r\n            orderBy: { createdAt: 'desc' }, // 按最新排序\r\n        });\r\n        return notifications;\r\n    } catch (error) {\r\n        console.error(\"Failed to get user notifications (Server Action):\", error);\r\n        return { error: error.message }; // 返回錯誤訊息，以便前端處理\r\n    }\r\n};\r\n\r\nexport const deleteNotification = async (notificationId) => {\r\n    try {\r\n        // ✨ 這裡應該是從資料庫刪除通知的邏輯\r\n        if (!notificationId) {\r\n            throw new Error(\"Notification ID is required for deleting.\");\r\n        }\r\n        await prisma.notification.delete({\r\n            where: { id: notificationId },\r\n        });\r\n        return { success: true };\r\n    } catch (error) {\r\n        console.error(\"Failed to delete notification (Server Action):\", error);\r\n        // 如果是找不到通知的錯誤，可以更精確地處理\r\n        if (error.code === 'P2025') {\r\n            return { error: \"Notification not found.\" };\r\n        }\r\n        return { error: error.message };\r\n    }\r\n};"],"names":[],"mappings":";;;;;;IAKa,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}}]
}