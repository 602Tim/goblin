{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/src/index.ts"],"sourcesContent":["export { default as Stack } from '@/container/OtherContainer/Stack';\nexport { default as Queue } from '@/container/OtherContainer/Queue';\nexport { default as PriorityQueue } from '@/container/OtherContainer/PriorityQueue';\nexport { default as Vector } from '@/container/SequentialContainer/Vector';\nexport { default as LinkList } from '@/container/SequentialContainer/LinkList';\nexport { default as Deque } from '@/container/SequentialContainer/Deque';\nexport { default as OrderedSet } from '@/container/TreeContainer/OrderedSet';\nexport { default as OrderedMap } from '@/container/TreeContainer/OrderedMap';\nexport { default as HashSet } from '@/container/HashContainer/HashSet';\nexport { default as HashMap } from '@/container/HashContainer/HashMap';\nexport type { VectorIterator } from '@/container/SequentialContainer/Vector';\nexport type { LinkListIterator } from '@/container/SequentialContainer/LinkList';\nexport type { DequeIterator } from '@/container/SequentialContainer/Deque';\nexport type { OrderedSetIterator } from '@/container/TreeContainer/OrderedSet';\nexport type { OrderedMapIterator } from '@/container/TreeContainer/OrderedMap';\nexport type { HashSetIterator } from '@/container/HashContainer/HashSet';\nexport type { HashMapIterator } from '@/container/HashContainer/HashMap';\nexport type { IteratorType, Container, ContainerIterator } from '@/container/ContainerBase';\nexport type { default as SequentialContainer } from '@/container/SequentialContainer/Base';\nexport type { default as TreeContainer } from '@/container/TreeContainer/Base';\nexport type { HashContainer } from '@/container/HashContainer/Base';\n"],"names":["default"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/ContainerBase/container/ContainerBase/index.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/ContainerBase/index.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ContainerIterator = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function ContainerIterator(iteratorType) {\n        if (iteratorType === void 0) { iteratorType = 0 /* IteratorType.NORMAL */; }\n        this.iteratorType = iteratorType;\n    }\n    /**\n     * @param iter - The other iterator you want to compare.\n     * @returns Whether this equals to obj.\n     * @example\n     * container.find(1).equals(container.end());\n     */\n    ContainerIterator.prototype.equals = function (iter) {\n        return this._node === iter._node;\n    };\n    return ContainerIterator;\n}());\nexport { ContainerIterator };\nvar Base = /** @class */ (function () {\n    function Base() {\n        /**\n         * @description Container's size.\n         * @internal\n         */\n        this._length = 0;\n    }\n    Object.defineProperty(Base.prototype, \"length\", {\n        /**\n         * @returns The size of the container.\n         * @example\n         * const container = new Vector([1, 2]);\n         * console.log(container.length); // 2\n         */\n        get: function () {\n            return this._length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @returns The size of the container.\n     * @example\n     * const container = new Vector([1, 2]);\n     * console.log(container.size()); // 2\n     */\n    Base.prototype.size = function () {\n        return this._length;\n    };\n    /**\n     * @returns Whether the container is empty.\n     * @example\n     * container.clear();\n     * console.log(container.empty());  // true\n     */\n    Base.prototype.empty = function () {\n        return this._length === 0;\n    };\n    return Base;\n}());\nexport { Base };\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Container;\n}(Base));\nexport { Container };\n","/**\n * @description The iterator type including `NORMAL` and `REVERSE`.\n */\nexport const enum IteratorType {\n  NORMAL = 0,\n  REVERSE = 1\n}\n\nexport abstract class ContainerIterator<T> {\n  /**\n   * @description The container pointed to by the iterator.\n   */\n  abstract readonly container: Container<T>;\n  /**\n   * @internal\n   */\n  abstract _node: unknown;\n  /**\n   * @description Iterator's type.\n   * @example\n   * console.log(container.end().iteratorType === IteratorType.NORMAL);  // true\n   */\n  readonly iteratorType: IteratorType;\n  /**\n   * @internal\n   */\n  protected constructor(iteratorType = IteratorType.NORMAL) {\n    this.iteratorType = iteratorType;\n  }\n  /**\n   * @param iter - The other iterator you want to compare.\n   * @returns Whether this equals to obj.\n   * @example\n   * container.find(1).equals(container.end());\n   */\n  equals(iter: ContainerIterator<T>) {\n    return this._node === iter._node;\n  }\n  /**\n   * @description Pointers to element.\n   * @returns The value of the pointer's element.\n   * @example\n   * const val = container.begin().pointer;\n   */\n  abstract get pointer(): T;\n  /**\n   * @description Set pointer's value (some containers are unavailable).\n   * @param newValue - The new value you want to set.\n   * @example\n   * (<LinkList<number>>container).begin().pointer = 1;\n   */\n  abstract set pointer(newValue: T);\n  /**\n   * @description Move `this` iterator to pre.\n   * @returns The iterator's self.\n   * @example\n   * const iter = container.find(1);  // container = [0, 1]\n   * const pre = iter.pre();\n   * console.log(pre === iter);  // true\n   * console.log(pre.equals(iter));  // true\n   * console.log(pre.pointer, iter.pointer); // 0, 0\n   */\n  abstract pre(): this;\n  /**\n   * @description Move `this` iterator to next.\n   * @returns The iterator's self.\n   * @example\n   * const iter = container.find(1);  // container = [1, 2]\n   * const next = iter.next();\n   * console.log(next === iter);  // true\n   * console.log(next.equals(iter));  // true\n   * console.log(next.pointer, iter.pointer); // 2, 2\n   */\n  abstract next(): this;\n  /**\n   * @description Get a copy of itself.\n   * @returns The copy of self.\n   * @example\n   * const iter = container.find(1);  // container = [1, 2]\n   * const next = iter.copy().next();\n   * console.log(next === iter);  // false\n   * console.log(next.equals(iter));  // false\n   * console.log(next.pointer, iter.pointer); // 2, 1\n   */\n  abstract copy(): ContainerIterator<T>;\n}\n\nexport abstract class Base {\n  /**\n   * @description Container's size.\n   * @internal\n   */\n  protected _length = 0;\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.length); // 2\n   */\n  get length() {\n    return this._length;\n  }\n  /**\n   * @returns The size of the container.\n   * @example\n   * const container = new Vector([1, 2]);\n   * console.log(container.size()); // 2\n   */\n  size() {\n    return this._length;\n  }\n  /**\n   * @returns Whether the container is empty.\n   * @example\n   * container.clear();\n   * console.log(container.empty());  // true\n   */\n  empty() {\n    return this._length === 0;\n  }\n  /**\n   * @description Clear the container.\n   * @example\n   * container.clear();\n   * console.log(container.empty());  // true\n   */\n  abstract clear(): void;\n}\n\nexport abstract class Container<T> extends Base {\n  /**\n   * @returns Iterator pointing to the beginning element.\n   * @example\n   * const begin = container.begin();\n   * const end = container.end();\n   * for (const it = begin; !it.equals(end); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract begin(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the super end like c++.\n   * @example\n   * const begin = container.begin();\n   * const end = container.end();\n   * for (const it = begin; !it.equals(end); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract end(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the end element.\n   * @example\n   * const rBegin = container.rBegin();\n   * const rEnd = container.rEnd();\n   * for (const it = rBegin; !it.equals(rEnd); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract rBegin(): ContainerIterator<T>;\n  /**\n   * @returns Iterator pointing to the super begin like c++.\n   * @example\n   * const rBegin = container.rBegin();\n   * const rEnd = container.rEnd();\n   * for (const it = rBegin; !it.equals(rEnd); it.next()) {\n   *   doSomething(it.pointer);\n   * }\n   */\n  abstract rEnd(): ContainerIterator<T>;\n  /**\n   * @returns The first element of the container.\n   */\n  abstract front(): T | undefined;\n  /**\n   * @returns The last element of the container.\n   */\n  abstract back(): T | undefined;\n  /**\n   * @param element - The element you want to find.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   * @example\n   * container.find(1).equals(container.end());\n   */\n  abstract find(element: T): ContainerIterator<T>;\n  /**\n   * @description Iterate over all elements in the container.\n   * @param callback - Callback function like Array.forEach.\n   * @example\n   * container.forEach((element, index) => console.log(element, index));\n   */\n  abstract forEach(callback: (element: T, index: number, container: Container<T>) => void): void;\n  /**\n   * @description Gets the value of the element at the specified position.\n   * @example\n   * const val = container.getElementByPos(-1); // throw a RangeError\n   */\n  abstract getElementByPos(pos: number): T;\n  /**\n   * @description Removes the element at the specified position.\n   * @param pos - The element's position you want to remove.\n   * @returns The container length after erasing.\n   * @example\n   * container.eraseElementByPos(-1); // throw a RangeError\n   */\n  abstract eraseElementByPos(pos: number): number;\n  /**\n   * @description Removes element by iterator and move `iter` to next.\n   * @param iter - The iterator you want to erase.\n   * @returns The next iterator.\n   * @example\n   * container.eraseElementByIterator(container.begin());\n   * container.eraseElementByIterator(container.end()); // throw a RangeError\n   */\n  abstract eraseElementByIterator(\n    iter: ContainerIterator<T>\n  ): ContainerIterator<T>;\n  /**\n   * @description Using for `for...of` syntax like Array.\n   * @example\n   * for (const element of container) {\n   *   console.log(element);\n   * }\n   */\n  abstract [Symbol.iterator](): Generator<T, void>;\n}\n\n/**\n * @description The initial data type passed in when initializing the container.\n */\nexport type initContainer<T> = {\n  size?: number | (() => number);\n  length?: number;\n  forEach: (callback: (el: T) => void) => void;\n}\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","ContainerIterator","iteratorType","equals","iter","_node","Base","_length","defineProperty","get","enumerable","configurable","size","empty","Container","_super","apply","arguments"],"mappings":";;;;;AAAA,IAAIA,YAAaC,IAAAA,IAAQA,IAAAA,CAAKD,CAAAA,IAAe;IACzC,IAAIE,gBAAgB,SAAUC,CAAAA,EAAGC,CAAAA;QAC7BF,gBAAgBG,OAAOC,cAAAA,KAClB;YAAEC,WAAW,EAAA;sBAAgBC,SAAS,SAAUL,CAAAA,EAAGC,CAAAA;YAAKD,EAAEI,SAAAA,GAAYH;QAAG,KAC1E,SAAUD,CAAAA,EAAGC,CAAAA;YAAK,IAAK,IAAIK,KAAKL,EAAG,IAAIC,OAAOK,SAAAA,CAAUC,cAAAA,CAAeC,IAAAA,CAAKR,GAAGK,IAAIN,CAAAA,CAAEM,EAAAA,GAAKL,CAAAA,CAAEK,EAAAA;QAAI;QACpG,OAAOP,cAAcC,GAAGC;IAC5B;IACA,OAAO,SAAUD,CAAAA,EAAGC,CAAAA;QAChB,IAAA,OAAWA,MAAM,cAAcA,MAAM,MACjC,MAAM,IAAIS,UAAU,yBAAyBC,OAAOV,KAAK;QAC7DF,cAAcC,GAAGC;QACjB,SAASW;YAAOd,IAAAA,CAAKe,WAAAA,GAAcb;QAAG;QACtCA,EAAEO,SAAAA,GAAYN,MAAM,OAAOC,OAAOY,MAAAA,CAAOb,KAAAA,CAAMW,GAAGL,SAAAA,GAAYN,EAAEM,SAAAA,EAAW,IAAIK,EAAAA;IACnF;AACJ,CAd6C;ACQ7C,IAAAG,oBAAA;IAkBE,SAAAA,kBAAsBC,CAAAA;QAAA,IAAAA,MAAAA,KAAA,GAAA;YAAAA,IAAA;QAAkC;QACtDlB,IAAAA,CAAKkB,YAAAA,GAAeA;IDLpB;ICaFD,kBAAAR,SAAAA,CAAAU,MAAAA,GAAA,SAAOC,CAAAA;QACL,OAAOpB,IAAAA,CAAKqB,CAAAA,KAAUD,EAAKC,CAAAA;IDL3B;ICsDJ,OAAAJ;AAAA,CA7EA;;AA+EA,IAAAK,OAAA;IAAA,SAAAA;QAKYtB,IAAAA,CAAAuB,CAAAA,GAAU;IAmCtB;IA5BEnB,OAAAoB,cAAAA,CAAIF,KAAAb,SAAAA,EAAA,UAAM;QDjDJgB,KCiDN;YACE,OAAOzB,IAAAA,CAAKuB,CAAAA;QDhDR;QACAG,YAAY;QACZC,cAAc;;ICsDpBL,KAAAb,SAAAA,CAAAmB,IAAAA,GAAA;QACE,OAAO5B,IAAAA,CAAKuB,CAAAA;ID7CZ;ICqDFD,KAAAb,SAAAA,CAAAoB,KAAAA,GAAA;QACE,OAAO7B,IAAAA,CAAKuB,CAAAA,KAAY;ID7CxB;ICsDJ,OAAAD;AAAA,CAxCA;;AA0CA,IAAAQ,YAAA,SAAAC,CAAAA;IAA2ChC,UAAA+B,WAAAC;IAA3C,SAAAD;QDjDQ,OAAOC,MAAW,QAAQA,EAAOC,KAAAA,CAAMhC,IAAAA,EAAMiC,cAAcjC,IAAAA;ICiJnE;IAAA,OAAA8B;AAAA,CAhGA,CAA2CR","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"file":"Stack.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/OtherContainer/container/OtherContainer/Stack.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/OtherContainer/Stack.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Base } from \"../ContainerBase\";\nvar Stack = /** @class */ (function (_super) {\n    __extends(Stack, _super);\n    function Stack(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        /**\n         * @internal\n         */\n        _this._stack = [];\n        var self = _this;\n        container.forEach(function (el) {\n            self.push(el);\n        });\n        return _this;\n    }\n    Stack.prototype.clear = function () {\n        this._length = 0;\n        this._stack = [];\n    };\n    /**\n     * @description Insert element to stack's end.\n     * @description The element you want to push to the back.\n     * @returns The container length after erasing.\n     */\n    Stack.prototype.push = function (element) {\n        this._stack.push(element);\n        this._length += 1;\n        return this._length;\n    };\n    /**\n     * @description Removes the end element.\n     * @returns The element you popped.\n     */\n    Stack.prototype.pop = function () {\n        if (this._length === 0)\n            return;\n        this._length -= 1;\n        return this._stack.pop();\n    };\n    /**\n     * @description Accesses the end element.\n     * @returns The last element.\n     */\n    Stack.prototype.top = function () {\n        return this._stack[this._length - 1];\n    };\n    return Stack;\n}(Base));\nexport default Stack;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nclass Stack<T> extends Base {\n  /**\n   * @internal\n   */\n  private _stack: T[] = [];\n  constructor(container: initContainer<T> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.push(el);\n    });\n  }\n  clear() {\n    this._length = 0;\n    this._stack = [];\n  }\n  /**\n   * @description Insert element to stack's end.\n   * @description The element you want to push to the back.\n   * @returns The container length after erasing.\n   */\n  push(element: T) {\n    this._stack.push(element);\n    this._length += 1;\n    return this._length;\n  }\n  /**\n   * @description Removes the end element.\n   * @returns The element you popped.\n   */\n  pop() {\n    if (this._length === 0) return;\n    this._length -= 1;\n    return this._stack.pop();\n  }\n  /**\n   * @description Accesses the end element.\n   * @returns The last element.\n   */\n  top(): T | undefined {\n    return this._stack[this._length - 1];\n  }\n}\n\nexport default Stack;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Base","Stack","_super","container","_this","_stack","self","forEach","el","push","clear","_length","element","pop","top"],"mappings":";;;SCASkB,YAAqB;ADA9B,IAAIlB,YAAaC,IAAAA,IAAQA,IAAAA,CAAKD,CAAAA,IAAe;IACzC,IAAIE,gBAAgB,SAAUC,CAAAA,EAAGC,CAAAA;QAC7BF,gBAAgBG,OAAOC,cAAAA,KAClB;YAAEC,WAAW,EAAA;sBAAgBC,SAAS,SAAUL,CAAAA,EAAGC,CAAAA;YAAKD,EAAEI,SAAAA,GAAYH;QAAG,KAC1E,SAAUD,CAAAA,EAAGC,CAAAA;YAAK,IAAK,IAAIK,KAAKL,EAAG,IAAIC,OAAOK,SAAAA,CAAUC,cAAAA,CAAeC,IAAAA,CAAKR,GAAGK,IAAIN,CAAAA,CAAEM,EAAAA,GAAKL,CAAAA,CAAEK,EAAAA;QAAI;QACpG,OAAOP,cAAcC,GAAGC;IAC5B;IACA,OAAO,SAAUD,CAAAA,EAAGC,CAAAA;QAChB,IAAA,OAAWA,MAAM,cAAcA,MAAM,MACjC,MAAM,IAAIS,UAAU,yBAAyBC,OAAOV,KAAK;QAC7DF,cAAcC,GAAGC;QACjB,SAASW;YAAOd,IAAAA,CAAKe,WAAAA,GAAcb;QAAG;QACtCA,EAAEO,SAAAA,GAAYN,MAAM,OAAOC,OAAOY,MAAAA,CAAOb,KAAAA,CAAMW,GAAGL,SAAAA,GAAYN,EAAEM,SAAAA,EAAW,IAAIK,EAAAA;IACnF;AACJ,CAd6C;;ACE7C,IAAAI,QAAA,SAAAC,CAAAA;IAAuBpB,UAAAmB,OAAAC;IAKrB,SAAAD,MAAYE,CAAAA;QAAA,IAAAA,MAAAA,KAAA,GAAA;YAAAA,IAAA,EAAA;QAAgC;QAA5C,IAAAC,IACEF,EAAAR,IAAAA,CAAAX,IAAAA,KAAOA,IAAAA;QAFDqB,EAAAC,EAAAA,GAAc,EAAA;QAGpB,IAAMC,IAAOF;QACbD,EAAUI,OAAAA,CAAQ,SAAUC,CAAAA;YAC1BF,EAAKG,IAAAA,CAAKD;QDiBR;QACA,OAAOJ;IACX;IChBFH,MAAAT,SAAAA,CAAAkB,KAAAA,GAAA;QACE3B,IAAAA,CAAK4B,CAAAA,GAAU;QACf5B,IAAAA,CAAKsB,EAAAA,GAAS,EAAA;IDkBd;ICXFJ,MAAAT,SAAAA,CAAAiB,IAAAA,GAAA,SAAKG,CAAAA;QACH7B,IAAAA,CAAKsB,EAAAA,CAAOI,IAAAA,CAAKG;QACjB7B,IAAAA,CAAK4B,CAAAA,IAAW;QAChB,OAAO5B,IAAAA,CAAK4B,CAAAA;IDkBZ;ICZFV,MAAAT,SAAAA,CAAAqB,GAAAA,GAAA;QACE,IAAI9B,IAAAA,CAAK4B,CAAAA,KAAY,GAAG;QACxB5B,IAAAA,CAAK4B,CAAAA,IAAW;QAChB,OAAO5B,IAAAA,CAAKsB,EAAAA,CAAOQ,GAAAA;IDmBnB;ICbFZ,MAAAT,SAAAA,CAAAsB,GAAAA,GAAA;QACE,OAAO/B,IAAAA,CAAKsB,EAAAA,CAAOtB,IAAAA,CAAK4B,CAAAA,GAAU,EAAA;IDmBlC;ICjBJ,OAAAV;AAAA,CA1CA,oLAAuBD,OAAAA;uCA4CRC","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"file":"Queue.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/OtherContainer/container/OtherContainer/Queue.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/OtherContainer/Queue.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Base } from \"../ContainerBase\";\nvar Queue = /** @class */ (function (_super) {\n    __extends(Queue, _super);\n    function Queue(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        /**\n         * @internal\n         */\n        _this._first = 0;\n        /**\n         * @internal\n         */\n        _this._queue = [];\n        var self = _this;\n        container.forEach(function (el) {\n            self.push(el);\n        });\n        return _this;\n    }\n    Queue.prototype.clear = function () {\n        this._queue = [];\n        this._length = this._first = 0;\n    };\n    /**\n     * @description Inserts element to queue's end.\n     * @param element - The element you want to push to the front.\n     * @returns The container length after pushing.\n     */\n    Queue.prototype.push = function (element) {\n        var capacity = this._queue.length;\n        if ((this._first / capacity) > 0.5 /* QUEUE_CONSTANT.ALLOCATE_SIGMA */ &&\n            (this._first + this._length) >= capacity &&\n            capacity > 4096 /* QUEUE_CONSTANT.MIN_ALLOCATE_SIZE */) {\n            var length_1 = this._length;\n            for (var i = 0; i < length_1; ++i) {\n                this._queue[i] = this._queue[this._first + i];\n            }\n            this._first = 0;\n            this._queue[this._length] = element;\n        }\n        else\n            this._queue[this._first + this._length] = element;\n        return ++this._length;\n    };\n    /**\n     * @description Removes the first element.\n     * @returns The element you popped.\n     */\n    Queue.prototype.pop = function () {\n        if (this._length === 0)\n            return;\n        var el = this._queue[this._first++];\n        this._length -= 1;\n        return el;\n    };\n    /**\n     * @description Access the first element.\n     * @returns The first element.\n     */\n    Queue.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        return this._queue[this._first];\n    };\n    return Queue;\n}(Base));\nexport default Queue;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nconst enum QUEUE_CONSTANT {\n  ALLOCATE_SIGMA = 0.5,\n  MIN_ALLOCATE_SIZE = (1 << 12)\n}\n\nclass Queue<T> extends Base {\n  /**\n   * @internal\n   */\n  private _first = 0;\n  /**\n   * @internal\n   */\n  private _queue: T[] = [];\n  constructor(container: initContainer<T> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.push(el);\n    });\n  }\n  clear() {\n    this._queue = [];\n    this._length = this._first = 0;\n  }\n  /**\n   * @description Inserts element to queue's end.\n   * @param element - The element you want to push to the front.\n   * @returns The container length after pushing.\n   */\n  push(element: T) {\n    const capacity = this._queue.length;\n    if (\n      (this._first / capacity) > QUEUE_CONSTANT.ALLOCATE_SIGMA &&\n      (this._first + this._length) >= capacity &&\n      capacity > QUEUE_CONSTANT.MIN_ALLOCATE_SIZE\n    ) {\n      const length = this._length;\n      for (let i = 0; i < length; ++i) {\n        this._queue[i] = this._queue[this._first + i];\n      }\n      this._first = 0;\n      this._queue[this._length] = element;\n    } else this._queue[this._first + this._length] = element;\n    return ++this._length;\n  }\n  /**\n   * @description Removes the first element.\n   * @returns The element you popped.\n   */\n  pop() {\n    if (this._length === 0) return;\n    const el = this._queue[this._first++];\n    this._length -= 1;\n    return el;\n  }\n  /**\n   * @description Access the first element.\n   * @returns The first element.\n   */\n  front(): T | undefined {\n    if (this._length === 0) return;\n    return this._queue[this._first];\n  }\n}\n\nexport default Queue;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Base","Queue","_super","container","_this","_first","_queue","self","forEach","el","push","clear","_length","element","capacity","length","length_1","i","pop","front"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"file":"PriorityQueue.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/OtherContainer/container/OtherContainer/PriorityQueue.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/OtherContainer/PriorityQueue.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Base } from \"../ContainerBase\";\nvar PriorityQueue = /** @class */ (function (_super) {\n    __extends(PriorityQueue, _super);\n    /**\n     * @description PriorityQueue's constructor.\n     * @param container - Initialize container, must have a forEach function.\n     * @param cmp - Compare function.\n     * @param copy - When the container is an array, you can choose to directly operate on the original object of\n     *               the array or perform a shallow copy. The default is shallow copy.\n     * @example\n     * new PriorityQueue();\n     * new PriorityQueue([1, 2, 3]);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n     * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n     */\n    function PriorityQueue(container, cmp, copy) {\n        if (container === void 0) { container = []; }\n        if (cmp === void 0) { cmp = function (x, y) {\n            if (x > y)\n                return -1;\n            if (x < y)\n                return 1;\n            return 0;\n        }; }\n        if (copy === void 0) { copy = true; }\n        var _this = _super.call(this) || this;\n        _this._cmp = cmp;\n        if (Array.isArray(container)) {\n            _this._priorityQueue = copy ? __spreadArray([], __read(container), false) : container;\n        }\n        else {\n            _this._priorityQueue = [];\n            var self_1 = _this;\n            container.forEach(function (el) {\n                self_1._priorityQueue.push(el);\n            });\n        }\n        _this._length = _this._priorityQueue.length;\n        var halfLength = _this._length >> 1;\n        for (var parent_1 = (_this._length - 1) >> 1; parent_1 >= 0; --parent_1) {\n            _this._pushDown(parent_1, halfLength);\n        }\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    PriorityQueue.prototype._pushUp = function (pos) {\n        var item = this._priorityQueue[pos];\n        while (pos > 0) {\n            var parent_2 = (pos - 1) >> 1;\n            var parentItem = this._priorityQueue[parent_2];\n            if (this._cmp(parentItem, item) <= 0)\n                break;\n            this._priorityQueue[pos] = parentItem;\n            pos = parent_2;\n        }\n        this._priorityQueue[pos] = item;\n    };\n    /**\n     * @internal\n     */\n    PriorityQueue.prototype._pushDown = function (pos, halfLength) {\n        var item = this._priorityQueue[pos];\n        while (pos < halfLength) {\n            var left = pos << 1 | 1;\n            var right = left + 1;\n            var minItem = this._priorityQueue[left];\n            if (right < this._length &&\n                this._cmp(minItem, this._priorityQueue[right]) > 0) {\n                left = right;\n                minItem = this._priorityQueue[right];\n            }\n            if (this._cmp(minItem, item) >= 0)\n                break;\n            this._priorityQueue[pos] = minItem;\n            pos = left;\n        }\n        this._priorityQueue[pos] = item;\n    };\n    PriorityQueue.prototype.clear = function () {\n        this._length = 0;\n        this._priorityQueue.length = 0;\n    };\n    /**\n     * @description Push element into a container in order.\n     * @param item - The element you want to push.\n     * @returns The size of heap after pushing.\n     * @example\n     * queue.push(1);\n     */\n    PriorityQueue.prototype.push = function (item) {\n        this._priorityQueue.push(item);\n        this._pushUp(this._length);\n        this._length += 1;\n    };\n    /**\n     * @description Removes the top element.\n     * @returns The element you popped.\n     * @example\n     * queue.pop();\n     */\n    PriorityQueue.prototype.pop = function () {\n        if (this._length === 0)\n            return;\n        var value = this._priorityQueue[0];\n        var last = this._priorityQueue.pop();\n        this._length -= 1;\n        if (this._length) {\n            this._priorityQueue[0] = last;\n            this._pushDown(0, this._length >> 1);\n        }\n        return value;\n    };\n    /**\n     * @description Accesses the top element.\n     * @example\n     * const top = queue.top();\n     */\n    PriorityQueue.prototype.top = function () {\n        return this._priorityQueue[0];\n    };\n    /**\n     * @description Check if element is in heap.\n     * @param item - The item want to find.\n     * @returns Whether element is in heap.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * console.log(que.find(obj));  // true\n     */\n    PriorityQueue.prototype.find = function (item) {\n        return this._priorityQueue.indexOf(item) >= 0;\n    };\n    /**\n     * @description Remove specified item from heap.\n     * @param item - The item want to remove.\n     * @returns Whether remove success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * que.remove(obj);\n     */\n    PriorityQueue.prototype.remove = function (item) {\n        var index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        if (index === 0) {\n            this.pop();\n        }\n        else if (index === this._length - 1) {\n            this._priorityQueue.pop();\n            this._length -= 1;\n        }\n        else {\n            this._priorityQueue.splice(index, 1, this._priorityQueue.pop());\n            this._length -= 1;\n            this._pushUp(index);\n            this._pushDown(index, this._length >> 1);\n        }\n        return true;\n    };\n    /**\n     * @description Update item and it's pos in the heap.\n     * @param item - The item want to update.\n     * @returns Whether update success.\n     * @example\n     * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n     * const obj = { id: 1 };\n     * que.push(obj);\n     * obj.id = 2;\n     * que.updateItem(obj);\n     */\n    PriorityQueue.prototype.updateItem = function (item) {\n        var index = this._priorityQueue.indexOf(item);\n        if (index < 0)\n            return false;\n        this._pushUp(index);\n        this._pushDown(index, this._length >> 1);\n        return true;\n    };\n    /**\n     * @returns Return a copy array of heap.\n     * @example\n     * const arr = queue.toArray();\n     */\n    PriorityQueue.prototype.toArray = function () {\n        return __spreadArray([], __read(this._priorityQueue), false);\n    };\n    return PriorityQueue;\n}(Base));\nexport default PriorityQueue;\n","import { Base, initContainer } from '@/container/ContainerBase';\n\nclass PriorityQueue<T> extends Base {\n  /**\n   * @internal\n   */\n  private readonly _priorityQueue: T[];\n  /**\n   * @internal\n   */\n  private readonly _cmp: (x: T, y: T) => number;\n  /**\n   * @description PriorityQueue's constructor.\n   * @param container - Initialize container, must have a forEach function.\n   * @param cmp - Compare function.\n   * @param copy - When the container is an array, you can choose to directly operate on the original object of\n   *               the array or perform a shallow copy. The default is shallow copy.\n   * @example\n   * new PriorityQueue();\n   * new PriorityQueue([1, 2, 3]);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y);\n   * new PriorityQueue([1, 2, 3], (x, y) => x - y, false);\n   */\n  constructor(\n    container: initContainer<T> = [],\n    cmp: (x: T, y: T) => number =\n    function (x: T, y: T) {\n      if (x > y) return -1;\n      if (x < y) return 1;\n      return 0;\n    },\n    copy = true\n  ) {\n    super();\n    this._cmp = cmp;\n    if (Array.isArray(container)) {\n      this._priorityQueue = copy ? [...container] : container;\n    } else {\n      this._priorityQueue = [];\n      const self = this;\n      container.forEach(function (el) {\n        self._priorityQueue.push(el);\n      });\n    }\n    this._length = this._priorityQueue.length;\n    const halfLength = this._length >> 1;\n    for (let parent = (this._length - 1) >> 1; parent >= 0; --parent) {\n      this._pushDown(parent, halfLength);\n    }\n  }\n  /**\n   * @internal\n   */\n  private _pushUp(pos: number) {\n    const item = this._priorityQueue[pos];\n    while (pos > 0) {\n      const parent = (pos - 1) >> 1;\n      const parentItem = this._priorityQueue[parent];\n      if (this._cmp(parentItem, item) <= 0) break;\n      this._priorityQueue[pos] = parentItem;\n      pos = parent;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  /**\n   * @internal\n   */\n  private _pushDown(pos: number, halfLength: number) {\n    const item = this._priorityQueue[pos];\n    while (pos < halfLength) {\n      let left = pos << 1 | 1;\n      const right = left + 1;\n      let minItem = this._priorityQueue[left];\n      if (\n        right < this._length &&\n        this._cmp(minItem, this._priorityQueue[right]) > 0\n      ) {\n        left = right;\n        minItem = this._priorityQueue[right];\n      }\n      if (this._cmp(minItem, item) >= 0) break;\n      this._priorityQueue[pos] = minItem;\n      pos = left;\n    }\n    this._priorityQueue[pos] = item;\n  }\n  clear() {\n    this._length = 0;\n    this._priorityQueue.length = 0;\n  }\n  /**\n   * @description Push element into a container in order.\n   * @param item - The element you want to push.\n   * @returns The size of heap after pushing.\n   * @example\n   * queue.push(1);\n   */\n  push(item: T) {\n    this._priorityQueue.push(item);\n    this._pushUp(this._length);\n    this._length += 1;\n  }\n  /**\n   * @description Removes the top element.\n   * @returns The element you popped.\n   * @example\n   * queue.pop();\n   */\n  pop() {\n    if (this._length === 0) return;\n    const value = this._priorityQueue[0];\n    const last = this._priorityQueue.pop()!;\n    this._length -= 1;\n    if (this._length) {\n      this._priorityQueue[0] = last;\n      this._pushDown(0, this._length >> 1);\n    }\n    return value;\n  }\n  /**\n   * @description Accesses the top element.\n   * @example\n   * const top = queue.top();\n   */\n  top(): T | undefined {\n    return this._priorityQueue[0];\n  }\n  /**\n   * @description Check if element is in heap.\n   * @param item - The item want to find.\n   * @returns Whether element is in heap.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * console.log(que.find(obj));  // true\n   */\n  find(item: T) {\n    return this._priorityQueue.indexOf(item) >= 0;\n  }\n  /**\n   * @description Remove specified item from heap.\n   * @param item - The item want to remove.\n   * @returns Whether remove success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * que.remove(obj);\n   */\n  remove(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    if (index === 0) {\n      this.pop();\n    } else if (index === this._length - 1) {\n      this._priorityQueue.pop();\n      this._length -= 1;\n    } else {\n      this._priorityQueue.splice(index, 1, this._priorityQueue.pop()!);\n      this._length -= 1;\n      this._pushUp(index);\n      this._pushDown(index, this._length >> 1);\n    }\n    return true;\n  }\n  /**\n   * @description Update item and it's pos in the heap.\n   * @param item - The item want to update.\n   * @returns Whether update success.\n   * @example\n   * const que = new PriorityQueue([], (x, y) => x.id - y.id);\n   * const obj = { id: 1 };\n   * que.push(obj);\n   * obj.id = 2;\n   * que.updateItem(obj);\n   */\n  updateItem(item: T) {\n    const index = this._priorityQueue.indexOf(item);\n    if (index < 0) return false;\n    this._pushUp(index);\n    this._pushDown(index, this._length >> 1);\n    return true;\n  }\n  /**\n   * @returns Return a copy array of heap.\n   * @example\n   * const arr = queue.toArray();\n   */\n  toArray() {\n    return [...this._priorityQueue];\n  }\n}\n\nexport default PriorityQueue;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","i","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","slice","concat","Base","PriorityQueue","_super","container","cmp","copy","x","y","_this","_cmp","isArray","_priorityQueue","self_1","forEach","el","_length","halfLength","parent_1","_pushDown","_pushUp","pos","item","parent_2","parentItem","left","right","minItem","clear","pop","last","top","find","indexOf","remove","index","splice","updateItem","toArray"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/SequentialContainer/Base/container/SequentialContainer/Base/index.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/src/container/SequentialContainer/Base/index.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from \"../../ContainerBase\";\nvar SequentialContainer = /** @class */ (function (_super) {\n    __extends(SequentialContainer, _super);\n    function SequentialContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SequentialContainer;\n}(Container));\nexport default SequentialContainer;\n","import { Container } from '@/container/ContainerBase';\n\nabstract class SequentialContainer<T> extends Container<T> {\n  /**\n   * @description Push the element to the back.\n   * @param element - The element you want to push.\n   * @returns The size of container after pushing.\n   */\n  abstract pushBack(element: T): number;\n  /**\n   * @description Removes the last element.\n   * @returns The element you popped.\n   */\n  abstract popBack(): T | undefined;\n  /**\n   * @description Sets element by position.\n   * @param pos - The position you want to change.\n   * @param element - The element's value you want to update.\n   * @example\n   * container.setElementByPos(-1, 1); // throw a RangeError\n   */\n  abstract setElementByPos(pos: number, element: T): void;\n  /**\n   * @description Removes the elements of the specified value.\n   * @param value - The value you want to remove.\n   * @returns The size of container after erasing.\n   * @example\n   * container.eraseElementByValue(-1);\n   */\n  abstract eraseElementByValue(value: T): number;\n  /**\n   * @description Insert several elements after the specified position.\n   * @param pos - The position you want to insert.\n   * @param element - The element you want to insert.\n   * @param num - The number of elements you want to insert (default 1).\n   * @returns The size of container after inserting.\n   * @example\n   * const container = new Vector([1, 2, 3]);\n   * container.insert(1, 4);  // [1, 4, 2, 3]\n   * container.insert(1, 5, 3); // [1, 5, 5, 5, 4, 2, 3]\n   */\n  abstract insert(pos: number, element: T, num?: number): number;\n  /**\n   * @description Reverses the container.\n   * @example\n   * const container = new Vector([1, 2, 3]);\n   * container.reverse(); // [3, 2, 1]\n   */\n  abstract reverse(): void;\n  /**\n   * @description Removes the duplication of elements in the container.\n   * @returns The size of container after inserting.\n   * @example\n   * const container = new Vector([1, 1, 3, 2, 2, 5, 5, 2]);\n   * container.unique(); // [1, 3, 2, 5, 2]\n   */\n  abstract unique(): number;\n  /**\n   * @description Sort the container.\n   * @param cmp - Comparison function to sort.\n   * @example\n   * const container = new Vector([3, 1, 10]);\n   * container.sort();  // [1, 10, 3]\n   * container.sort((x, y) => x - y); // [1, 3, 10]\n   */\n  abstract sort(cmp?: (x: T, y: T) => number): void;\n}\n\nexport default SequentialContainer;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Container","SequentialContainer","_super","apply","arguments"],"mappings":";;;SCASkB,iBAAW;ADApB,IAAIlB,YAAaC,IAAAA,IAAQA,IAAAA,CAAKD,CAAAA,IAAe;IACzC,IAAIE,gBAAgB,SAAUC,CAAAA,EAAGC,CAAAA;QAC7BF,gBAAgBG,OAAOC,cAAAA,IAClB;YAAEC,WAAW,EAAA;sBAAgBC,SAAS,SAAUL,CAAAA,EAAGC,CAAAA;YAAKD,EAAEI,SAAAA,GAAYH;QAAG,KAC1E,SAAUD,CAAAA,EAAGC,CAAAA;YAAK,IAAK,IAAIK,KAAKL,EAAG,IAAIC,OAAOK,SAAAA,CAAUC,cAAAA,CAAeC,IAAAA,CAAKR,GAAGK,IAAIN,CAAAA,CAAEM,EAAAA,GAAKL,CAAAA,CAAEK,EAAAA;QAAI;QACpG,OAAOP,cAAcC,GAAGC;IAC5B;IACA,OAAO,SAAUD,CAAAA,EAAGC,CAAAA;QAChB,IAAA,OAAWA,MAAM,cAAcA,MAAM,MACjC,MAAM,IAAIS,UAAU,yBAAyBC,OAAOV,KAAK;QAC7DF,cAAcC,GAAGC;QACjB,SAASW;YAAOd,IAAAA,CAAKe,WAAAA,GAAcb;QAAG;QACtCA,EAAEO,SAAAA,GAAYN,MAAM,OAAOC,OAAOY,MAAAA,CAAOb,KAAAA,CAAMW,GAAGL,SAAAA,GAAYN,EAAEM,SAAAA,EAAW,IAAIK,EAAAA;IACnF;AACJ,CAd6C;;ACE7C,IAAAI,sBAAA,SAAAC,CAAAA;IAA8CpB,UAAAmB,qBAAAC;IAA9C,SAAAD;QDiBQ,OAAOC,MAAW,QAAQA,EAAOC,KAAAA,CAAMpB,IAAAA,EAAMqB,cAAcrB,IAAAA;IC+CnE;IAAA,OAAAkB;AAAA,CAhEA,oLAA8CD,YAAAA;uCAkE/BC","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"file":"throwError.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/src/utils/throwError.ts","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/utils/utils/throwError.js"],"sourcesContent":["/**\n * @description Throw an iterator access error.\n * @internal\n */\nexport function throwIteratorAccessError() {\n  throw new RangeError('Iterator access denied!');\n}\n","/**\n * @description Throw an iterator access error.\n * @internal\n */\nexport function throwIteratorAccessError() {\n    throw new RangeError('Iterator access denied!');\n}\n"],"names":["throwIteratorAccessError","RangeError"],"mappings":";;;AAIM,SAAUA;IACd,MAAM,IAAIC,WAAW;ACCvB","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"file":"RandomIterator.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/SequentialContainer/Base/container/SequentialContainer/Base/RandomIterator.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/src/container/SequentialContainer/Base/RandomIterator.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ContainerIterator } from \"../../ContainerBase\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nvar RandomIterator = /** @class */ (function (_super) {\n    __extends(RandomIterator, _super);\n    /**\n     * @internal\n     */\n    function RandomIterator(index, iteratorType) {\n        var _this = _super.call(this, iteratorType) || this;\n        _this._node = index;\n        if (_this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            _this.pre = function () {\n                if (this._node === 0) {\n                    throwIteratorAccessError();\n                }\n                this._node -= 1;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this.container.size()) {\n                    throwIteratorAccessError();\n                }\n                this._node += 1;\n                return this;\n            };\n        }\n        else {\n            _this.pre = function () {\n                if (this._node === this.container.size() - 1) {\n                    throwIteratorAccessError();\n                }\n                this._node += 1;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === -1) {\n                    throwIteratorAccessError();\n                }\n                this._node -= 1;\n                return this;\n            };\n        }\n        return _this;\n    }\n    Object.defineProperty(RandomIterator.prototype, \"pointer\", {\n        get: function () {\n            return this.container.getElementByPos(this._node);\n        },\n        set: function (newValue) {\n            this.container.setElementByPos(this._node, newValue);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RandomIterator;\n}(ContainerIterator));\nexport { RandomIterator };\n","import { ContainerIterator, IteratorType } from '@/container/ContainerBase';\nimport SequentialContainer from '@/container/SequentialContainer/Base/index';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nexport abstract class RandomIterator<T> extends ContainerIterator<T> {\n  abstract readonly container: SequentialContainer<T>;\n  /**\n   * @internal\n   */\n  _node: number;\n  /**\n   * @internal\n   */\n  protected constructor(\n    index: number,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = index;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node === 0) {\n          throwIteratorAccessError();\n        }\n        this._node -= 1;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this.container.size()) {\n          throwIteratorAccessError();\n        }\n        this._node += 1;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node === this.container.size() - 1) {\n          throwIteratorAccessError();\n        }\n        this._node += 1;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === -1) {\n          throwIteratorAccessError();\n        }\n        this._node -= 1;\n        return this;\n      };\n    }\n  }\n  get pointer() {\n    return this.container.getElementByPos(this._node);\n  }\n  set pointer(newValue: T) {\n    this.container.setElementByPos(this._node, newValue);\n  }\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","ContainerIterator","throwIteratorAccessError","RandomIterator","_super","index","iteratorType","_this","_node","pre","next","container","size","defineProperty","get","getElementByPos","set","newValue","setElementByPos","enumerable","configurable"],"mappings":";;;SCASkB,yBAAiC;SAEjCC,gCAA0B;ADFnC,IAAInB,YAAaC,IAAAA,IAAQA,IAAAA,CAAKD,CAAAA,IAAe;IACzC,IAAIE,gBAAgB,SAAUC,CAAAA,EAAGC,CAAAA;QAC7BF,gBAAgBG,OAAOC,cAAAA,KAClB;YAAEC,WAAW,EAAA;sBAAgBC,SAAS,SAAUL,CAAAA,EAAGC,CAAAA;YAAKD,EAAEI,SAAAA,GAAYH;QAAG,KAC1E,SAAUD,CAAAA,EAAGC,CAAAA;YAAK,IAAK,IAAIK,KAAKL,EAAG,IAAIC,OAAOK,SAAAA,CAAUC,cAAAA,CAAeC,IAAAA,CAAKR,GAAGK,IAAIN,CAAAA,CAAEM,EAAAA,GAAKL,CAAAA,CAAEK,EAAAA;QAAI;QACpG,OAAOP,cAAcC,GAAGC;IAC5B;IACA,OAAO,SAAUD,CAAAA,EAAGC,CAAAA;QAChB,IAAA,OAAWA,MAAM,cAAcA,MAAM,MACjC,MAAM,IAAIS,UAAU,yBAAyBC,OAAOV,KAAK;QAC7DF,cAAcC,GAAGC;QACjB,SAASW;YAAOd,IAAAA,CAAKe,WAAAA,GAAcb;QAAG;QACtCA,EAAEO,SAAAA,GAAYN,MAAM,OAAOC,OAAOY,MAAAA,CAAOb,KAAAA,CAAMW,GAAGL,SAAAA,GAAYN,EAAEM,SAAAA,EAAW,IAAIK,EAAAA;IACnF;AACJ,CAd6C;;;ACI7C,IAAAK,iBAAA,SAAAC,CAAAA;IAAgDrB,UAAAoB,gBAAAC;IAS9C,SAAAD,eACEE,CAAAA,EACAC,CAAAA;QAFF,IAAAC,IAIEH,EAAAT,IAAAA,CAAAX,IAAAA,EAAMsB,MAAatB,IAAAA;QACnBuB,EAAKC,CAAAA,GAAQH;QACb,IAAIE,EAAKD,YAAAA,KAAY,GAA0B;YAC7CC,EAAKE,GAAAA,GAAM;gBACT,IAAIzB,IAAAA,CAAKwB,CAAAA,KAAU,GAAG;2LACpBN,2BAAAA;gBDOM;gBCLRlB,IAAAA,CAAKwB,CAAAA,IAAS;gBACd,OAAOxB,IAAAA;YDOH;YCLNuB,EAAKG,IAAAA,GAAO;gBACV,IAAI1B,IAAAA,CAAKwB,CAAAA,KAAUxB,IAAAA,CAAK2B,SAAAA,CAAUC,IAAAA,IAAQ;2LACxCV,2BAAAA;gBDOM;gBCLRlB,IAAAA,CAAKwB,CAAAA,IAAS;gBACd,OAAOxB,IAAAA;YDOH;QACJ,OCNG;YACLuB,EAAKE,GAAAA,GAAM;gBACT,IAAIzB,IAAAA,CAAKwB,CAAAA,KAAUxB,IAAAA,CAAK2B,SAAAA,CAAUC,IAAAA,KAAS,GAAG;2LAC5CV,2BAAAA;gBDQM;gBCNRlB,IAAAA,CAAKwB,CAAAA,IAAS;gBACd,OAAOxB,IAAAA;YDQH;YCNNuB,EAAKG,IAAAA,GAAO;gBACV,IAAI1B,IAAAA,CAAKwB,CAAAA,KAAAA,CAAW,GAAG;qBACrBN,iMAAAA;gBDQM;gBCNRlB,IAAAA,CAAKwB,CAAAA,IAAS;gBACd,OAAOxB,IAAAA;YDQH;QACJ;QACA,OAAOuB;IACX;ICPFnB,OAAAyB,cAAAA,CAAIV,eAAAV,SAAAA,EAAA,WAAO;QDSLqB,KCTN;YACE,OAAO9B,IAAAA,CAAK2B,SAAAA,CAAUI,eAAAA,CAAgB/B,IAAAA,CAAKwB,CAAAA;QDUvC;QACAQ,KCTN,SAAYC,CAAAA;YACVjC,IAAAA,CAAK2B,SAAAA,CAAUO,eAAAA,CAAgBlC,IAAAA,CAAKwB,CAAAA,EAAOS;QDUvC;QACAE,YAAY;QACZC,cAAc;;ICNtB,OAAAjB;AAAA,CAzDA,oLAAgDF,oBAAAA","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"file":"Vector.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/SequentialContainer/container/SequentialContainer/Vector.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/SequentialContainer/Vector.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport SequentialContainer from './Base';\nimport { RandomIterator } from \"./Base/RandomIterator\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nvar VectorIterator = /** @class */ (function (_super) {\n    __extends(VectorIterator, _super);\n    function VectorIterator(node, container, iteratorType) {\n        var _this = _super.call(this, node, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    VectorIterator.prototype.copy = function () {\n        return new VectorIterator(this._node, this.container, this.iteratorType);\n    };\n    return VectorIterator;\n}(RandomIterator));\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    /**\n     * @param container - Initialize container, must have a forEach function.\n     * @param copy - When the container is an array, you can choose to directly operate on the original object of\n     *               the array or perform a shallow copy. The default is shallow copy.\n     */\n    function Vector(container, copy) {\n        if (container === void 0) { container = []; }\n        if (copy === void 0) { copy = true; }\n        var _this = _super.call(this) || this;\n        if (Array.isArray(container)) {\n            _this._vector = copy ? __spreadArray([], __read(container), false) : container;\n            _this._length = container.length;\n        }\n        else {\n            _this._vector = [];\n            var self_1 = _this;\n            container.forEach(function (el) {\n                self_1.pushBack(el);\n            });\n        }\n        return _this;\n    }\n    Vector.prototype.clear = function () {\n        this._length = 0;\n        this._vector.length = 0;\n    };\n    Vector.prototype.begin = function () {\n        return new VectorIterator(0, this);\n    };\n    Vector.prototype.end = function () {\n        return new VectorIterator(this._length, this);\n    };\n    Vector.prototype.rBegin = function () {\n        return new VectorIterator(this._length - 1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Vector.prototype.rEnd = function () {\n        return new VectorIterator(-1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Vector.prototype.front = function () {\n        return this._vector[0];\n    };\n    Vector.prototype.back = function () {\n        return this._vector[this._length - 1];\n    };\n    Vector.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        return this._vector[pos];\n    };\n    Vector.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        this._vector.splice(pos, 1);\n        this._length -= 1;\n        return this._length;\n    };\n    Vector.prototype.eraseElementByValue = function (value) {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (this._vector[i] !== value) {\n                this._vector[index++] = this._vector[i];\n            }\n        }\n        this._length = this._vector.length = index;\n        return this._length;\n    };\n    Vector.prototype.eraseElementByIterator = function (iter) {\n        var _node = iter._node;\n        iter = iter.next();\n        this.eraseElementByPos(_node);\n        return iter;\n    };\n    Vector.prototype.pushBack = function (element) {\n        this._vector.push(element);\n        this._length += 1;\n        return this._length;\n    };\n    Vector.prototype.popBack = function () {\n        if (this._length === 0)\n            return;\n        this._length -= 1;\n        return this._vector.pop();\n    };\n    Vector.prototype.setElementByPos = function (pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        this._vector[pos] = element;\n    };\n    Vector.prototype.insert = function (pos, element, num) {\n        var _a;\n        if (num === void 0) { num = 1; }\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        (_a = this._vector).splice.apply(_a, __spreadArray([pos, 0], __read(new Array(num).fill(element)), false));\n        this._length += num;\n        return this._length;\n    };\n    Vector.prototype.find = function (element) {\n        for (var i = 0; i < this._length; ++i) {\n            if (this._vector[i] === element) {\n                return new VectorIterator(i, this);\n            }\n        }\n        return this.end();\n    };\n    Vector.prototype.reverse = function () {\n        this._vector.reverse();\n    };\n    Vector.prototype.unique = function () {\n        var index = 1;\n        for (var i = 1; i < this._length; ++i) {\n            if (this._vector[i] !== this._vector[i - 1]) {\n                this._vector[index++] = this._vector[i];\n            }\n        }\n        this._length = this._vector.length = index;\n        return this._length;\n    };\n    Vector.prototype.sort = function (cmp) {\n        this._vector.sort(cmp);\n    };\n    Vector.prototype.forEach = function (callback) {\n        for (var i = 0; i < this._length; ++i) {\n            callback(this._vector[i], i, this);\n        }\n    };\n    Vector.prototype[Symbol.iterator] = function () {\n        return function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [5 /*yield**/, __values(this._vector)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return Vector;\n}(SequentialContainer));\nexport default Vector;\n","import SequentialContainer from './Base';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { RandomIterator } from '@/container/SequentialContainer/Base/RandomIterator';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\n\nclass VectorIterator<T> extends RandomIterator<T> {\n  container: Vector<T>;\n  constructor(node: number, container: Vector<T>, iteratorType?: IteratorType) {\n    super(node, iteratorType);\n    this.container = container;\n  }\n  copy() {\n    return new VectorIterator<T>(this._node, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: VectorIterator<T>): boolean;\n}\n\nexport type { VectorIterator };\n\nclass Vector<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private readonly _vector: T[];\n  /**\n   * @param container - Initialize container, must have a forEach function.\n   * @param copy - When the container is an array, you can choose to directly operate on the original object of\n   *               the array or perform a shallow copy. The default is shallow copy.\n   */\n  constructor(container: initContainer<T> = [], copy = true) {\n    super();\n    if (Array.isArray(container)) {\n      this._vector = copy ? [...container] : container;\n      this._length = container.length;\n    } else {\n      this._vector = [];\n      const self = this;\n      container.forEach(function (el) {\n        self.pushBack(el);\n      });\n    }\n  }\n  clear() {\n    this._length = 0;\n    this._vector.length = 0;\n  }\n  begin() {\n    return new VectorIterator<T>(0, this);\n  }\n  end() {\n    return new VectorIterator<T>(this._length, this);\n  }\n  rBegin() {\n    return new VectorIterator<T>(this._length - 1, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new VectorIterator<T>(-1, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    return this._vector[0];\n  }\n  back(): T | undefined {\n    return this._vector[this._length - 1];\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    return this._vector[pos];\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    this._vector.splice(pos, 1);\n    this._length -= 1;\n    return this._length;\n  }\n  eraseElementByValue(value: T) {\n    let index = 0;\n    for (let i = 0; i < this._length; ++i) {\n      if (this._vector[i] !== value) {\n        this._vector[index++] = this._vector[i];\n      }\n    }\n    this._length = this._vector.length = index;\n    return this._length;\n  }\n  eraseElementByIterator(iter: VectorIterator<T>) {\n    const _node = iter._node;\n    iter = iter.next();\n    this.eraseElementByPos(_node);\n    return iter;\n  }\n  pushBack(element: T) {\n    this._vector.push(element);\n    this._length += 1;\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    this._length -= 1;\n    return this._vector.pop();\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    this._vector[pos] = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    this._vector.splice(pos, 0, ...new Array<T>(num).fill(element));\n    this._length += num;\n    return this._length;\n  }\n  find(element: T) {\n    for (let i = 0; i < this._length; ++i) {\n      if (this._vector[i] === element) {\n        return new VectorIterator<T>(i, this);\n      }\n    }\n    return this.end();\n  }\n  reverse() {\n    this._vector.reverse();\n  }\n  unique() {\n    let index = 1;\n    for (let i = 1; i < this._length; ++i) {\n      if (this._vector[i] !== this._vector[i - 1]) {\n        this._vector[index++] = this._vector[i];\n      }\n    }\n    this._length = this._vector.length = index;\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    this._vector.sort(cmp);\n  }\n  forEach(callback: (element: T, index: number, vector: Vector<T>) => void) {\n    for (let i = 0; i < this._length; ++i) {\n      callback(this._vector[i], i, this);\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: Vector<T>) {\n      yield * this._vector;\n    }.bind(this)();\n  }\n}\n\nexport default Vector;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__read","o","m","i","r","ar","error","__spreadArray","to","from","pack","arguments","l","slice","concat","__values","s","SequentialContainer","RandomIterator","VectorIterator","_super","node","container","iteratorType","_this","copy","_node","Vector","isArray","_vector","_length","self_1","forEach","el","pushBack","clear","begin","end","rBegin","rEnd","front","back","getElementByPos","pos","RangeError","eraseElementByPos","splice","eraseElementByValue","index","eraseElementByIterator","iter","element","popBack","setElementByPos","insert","num","_a","apply","fill","find","reverse","unique","sort","cmp","callback","bind"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"file":"LinkList.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/SequentialContainer/container/SequentialContainer/LinkList.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/SequentialContainer/LinkList.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport SequentialContainer from './Base';\nimport { ContainerIterator } from \"../ContainerBase\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar LinkListIterator = /** @class */ (function (_super) {\n    __extends(LinkListIterator, _super);\n    /**\n     * @internal\n     */\n    function LinkListIterator(_node, _header, container, iteratorType) {\n        var _this = _super.call(this, iteratorType) || this;\n        _this._node = _node;\n        _this._header = _header;\n        _this.container = container;\n        if (_this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            _this.pre = function () {\n                if (this._node._pre === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n        }\n        else {\n            _this.pre = function () {\n                if (this._node._next === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n        }\n        return _this;\n    }\n    Object.defineProperty(LinkListIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._value;\n        },\n        set: function (newValue) {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            this._node._value = newValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LinkListIterator.prototype.copy = function () {\n        return new LinkListIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return LinkListIterator;\n}(ContainerIterator));\nvar LinkList = /** @class */ (function (_super) {\n    __extends(LinkList, _super);\n    function LinkList(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        _this._header = {};\n        _this._head = _this._tail = _this._header._pre = _this._header._next = _this._header;\n        var self = _this;\n        container.forEach(function (el) {\n            self.pushBack(el);\n        });\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    LinkList.prototype._eraseNode = function (node) {\n        var _pre = node._pre, _next = node._next;\n        _pre._next = _next;\n        _next._pre = _pre;\n        if (node === this._head) {\n            this._head = _next;\n        }\n        if (node === this._tail) {\n            this._tail = _pre;\n        }\n        this._length -= 1;\n    };\n    /**\n     * @internal\n     */\n    LinkList.prototype._insertNode = function (value, pre) {\n        var next = pre._next;\n        var node = {\n            _value: value,\n            _pre: pre,\n            _next: next\n        };\n        pre._next = node;\n        next._pre = node;\n        if (pre === this._header) {\n            this._head = node;\n        }\n        if (next === this._header) {\n            this._tail = node;\n        }\n        this._length += 1;\n    };\n    LinkList.prototype.clear = function () {\n        this._length = 0;\n        this._head = this._tail = this._header._pre = this._header._next = this._header;\n    };\n    LinkList.prototype.begin = function () {\n        return new LinkListIterator(this._head, this._header, this);\n    };\n    LinkList.prototype.end = function () {\n        return new LinkListIterator(this._header, this._header, this);\n    };\n    LinkList.prototype.rBegin = function () {\n        return new LinkListIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    LinkList.prototype.rEnd = function () {\n        return new LinkListIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    LinkList.prototype.front = function () {\n        return this._head._value;\n    };\n    LinkList.prototype.back = function () {\n        return this._tail._value;\n    };\n    LinkList.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        return curNode._value;\n    };\n    LinkList.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        this._eraseNode(curNode);\n        return this._length;\n    };\n    LinkList.prototype.eraseElementByValue = function (_value) {\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === _value) {\n                this._eraseNode(curNode);\n            }\n            curNode = curNode._next;\n        }\n        return this._length;\n    };\n    LinkList.prototype.eraseElementByIterator = function (iter) {\n        var node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        iter = iter.next();\n        this._eraseNode(node);\n        return iter;\n    };\n    LinkList.prototype.pushBack = function (element) {\n        this._insertNode(element, this._tail);\n        return this._length;\n    };\n    LinkList.prototype.popBack = function () {\n        if (this._length === 0)\n            return;\n        var value = this._tail._value;\n        this._eraseNode(this._tail);\n        return value;\n    };\n    /**\n     * @description Push an element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    LinkList.prototype.pushFront = function (element) {\n        this._insertNode(element, this._header);\n        return this._length;\n    };\n    /**\n     * @description Removes the first element.\n     * @returns The element you popped.\n     */\n    LinkList.prototype.popFront = function () {\n        if (this._length === 0)\n            return;\n        var value = this._head._value;\n        this._eraseNode(this._head);\n        return value;\n    };\n    LinkList.prototype.setElementByPos = function (pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var curNode = this._head;\n        while (pos--) {\n            curNode = curNode._next;\n        }\n        curNode._value = element;\n    };\n    LinkList.prototype.insert = function (pos, element, num) {\n        if (num === void 0) { num = 1; }\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        if (num <= 0)\n            return this._length;\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            var curNode = this._head;\n            for (var i = 1; i < pos; ++i) {\n                curNode = curNode._next;\n            }\n            var next = curNode._next;\n            this._length += num;\n            while (num--) {\n                curNode._next = {\n                    _value: element,\n                    _pre: curNode\n                };\n                curNode._next._pre = curNode;\n                curNode = curNode._next;\n            }\n            curNode._next = next;\n            next._pre = curNode;\n        }\n        return this._length;\n    };\n    LinkList.prototype.find = function (element) {\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            if (curNode._value === element) {\n                return new LinkListIterator(curNode, this._header, this);\n            }\n            curNode = curNode._next;\n        }\n        return this.end();\n    };\n    LinkList.prototype.reverse = function () {\n        if (this._length <= 1)\n            return;\n        var pHead = this._head;\n        var pTail = this._tail;\n        var cnt = 0;\n        while ((cnt << 1) < this._length) {\n            var tmp = pHead._value;\n            pHead._value = pTail._value;\n            pTail._value = tmp;\n            pHead = pHead._next;\n            pTail = pTail._pre;\n            cnt += 1;\n        }\n    };\n    LinkList.prototype.unique = function () {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        var curNode = this._head;\n        while (curNode !== this._header) {\n            var tmpNode = curNode;\n            while (tmpNode._next !== this._header &&\n                tmpNode._value === tmpNode._next._value) {\n                tmpNode = tmpNode._next;\n                this._length -= 1;\n            }\n            curNode._next = tmpNode._next;\n            curNode._next._pre = curNode;\n            curNode = curNode._next;\n        }\n        return this._length;\n    };\n    LinkList.prototype.sort = function (cmp) {\n        if (this._length <= 1)\n            return;\n        var arr = [];\n        this.forEach(function (el) {\n            arr.push(el);\n        });\n        arr.sort(cmp);\n        var curNode = this._head;\n        arr.forEach(function (element) {\n            curNode._value = element;\n            curNode = curNode._next;\n        });\n    };\n    /**\n     * @description Merges two sorted lists.\n     * @param list - The other list you want to merge (must be sorted).\n     * @returns The size of list after merging.\n     * @example\n     * const linkA = new LinkList([1, 3, 5]);\n     * const linkB = new LinkList([2, 4, 6]);\n     * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n     */\n    LinkList.prototype.merge = function (list) {\n        var self = this;\n        if (this._length === 0) {\n            list.forEach(function (el) {\n                self.pushBack(el);\n            });\n        }\n        else {\n            var curNode_1 = this._head;\n            list.forEach(function (el) {\n                while (curNode_1 !== self._header &&\n                    curNode_1._value <= el) {\n                    curNode_1 = curNode_1._next;\n                }\n                self._insertNode(el, curNode_1._pre);\n            });\n        }\n        return this._length;\n    };\n    LinkList.prototype.forEach = function (callback) {\n        var curNode = this._head;\n        var index = 0;\n        while (curNode !== this._header) {\n            callback(curNode._value, index++, this);\n            curNode = curNode._next;\n        }\n    };\n    LinkList.prototype[Symbol.iterator] = function () {\n        return function () {\n            var curNode;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._length === 0)\n                            return [2 /*return*/];\n                        curNode = this._head;\n                        _a.label = 1;\n                    case 1:\n                        if (!(curNode !== this._header)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, curNode._value];\n                    case 2:\n                        _a.sent();\n                        curNode = curNode._next;\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return LinkList;\n}(SequentialContainer));\nexport default LinkList;\n","import SequentialContainer from './Base';\nimport { ContainerIterator, initContainer, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\ntype LinkNode<T> = {\n  _value: T;\n  _pre: LinkNode<T>;\n  _next: LinkNode<T>;\n}\n\nclass LinkListIterator<T> extends ContainerIterator<T> {\n  readonly container: LinkList<T>;\n  /**\n   * @internal\n   */\n  _node: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  /**\n   * @internal\n   */\n  constructor(\n    _node: LinkNode<T>,\n    _header: LinkNode<T>,\n    container: LinkList<T>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = _node;\n    this._header = _header;\n    this.container = container;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node._pre === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node._next === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n    }\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._value;\n  }\n  set pointer(newValue: T) {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    this._node._value = newValue;\n  }\n  copy() {\n    return new LinkListIterator<T>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: LinkListIterator<T>): boolean;\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport type { LinkListIterator };\n\nclass LinkList<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _head: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private _tail: LinkNode<T>;\n  /**\n   * @internal\n   */\n  private readonly _header: LinkNode<T>;\n  constructor(container: initContainer<T> = []) {\n    super();\n    this._header = <LinkNode<T>>{};\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n    const self = this;\n    container.forEach(function (el) {\n      self.pushBack(el);\n    });\n  }\n  /**\n   * @internal\n   */\n  private _eraseNode(node: LinkNode<T>) {\n    const { _pre, _next } = node;\n    _pre._next = _next;\n    _next._pre = _pre;\n    if (node === this._head) {\n      this._head = _next;\n    }\n    if (node === this._tail) {\n      this._tail = _pre;\n    }\n    this._length -= 1;\n  }\n  /**\n   * @internal\n   */\n  private _insertNode(value: T, pre: LinkNode<T>) {\n    const next = pre._next;\n    const node = {\n      _value: value,\n      _pre: pre,\n      _next: next\n    };\n    pre._next = node;\n    next._pre = node;\n    if (pre === this._header) {\n      this._head = node;\n    }\n    if (next === this._header) {\n      this._tail = node;\n    }\n    this._length += 1;\n  }\n  clear() {\n    this._length = 0;\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n  }\n  begin() {\n    return new LinkListIterator<T>(this._head, this._header, this);\n  }\n  end() {\n    return new LinkListIterator<T>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new LinkListIterator<T>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new LinkListIterator<T>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    return this._head._value;\n  }\n  back(): T | undefined {\n    return this._tail._value;\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    return curNode._value;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    this._eraseNode(curNode);\n    return this._length;\n  }\n  eraseElementByValue(_value: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === _value) {\n        this._eraseNode(curNode);\n      }\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  eraseElementByIterator(iter: LinkListIterator<T>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    iter = iter.next();\n    this._eraseNode(node);\n    return iter;\n  }\n  pushBack(element: T) {\n    this._insertNode(element, this._tail);\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._tail._value;\n    this._eraseNode(this._tail);\n    return value;\n  }\n  /**\n   * @description Push an element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    this._insertNode(element, this._header);\n    return this._length;\n  }\n  /**\n   * @description Removes the first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._head._value;\n    this._eraseNode(this._head);\n    return value;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let curNode = this._head;\n    while (pos--) {\n      curNode = curNode._next;\n    }\n    curNode._value = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    if (num <= 0) return this._length;\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      let curNode = this._head;\n      for (let i = 1; i < pos; ++i) {\n        curNode = curNode._next;\n      }\n      const next = curNode._next;\n      this._length += num;\n      while (num--) {\n        curNode._next = <LinkNode<T>>{\n          _value: element,\n          _pre: curNode\n        };\n        curNode._next._pre = curNode;\n        curNode = curNode._next;\n      }\n      curNode._next = next;\n      next._pre = curNode;\n    }\n    return this._length;\n  }\n  find(element: T) {\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      if (curNode._value === element) {\n        return new LinkListIterator<T>(curNode, this._header, this);\n      }\n      curNode = curNode._next;\n    }\n    return this.end();\n  }\n  reverse() {\n    if (this._length <= 1) return;\n    let pHead = this._head;\n    let pTail = this._tail;\n    let cnt = 0;\n    while ((cnt << 1) < this._length) {\n      const tmp = pHead._value;\n      pHead._value = pTail._value;\n      pTail._value = tmp;\n      pHead = pHead._next;\n      pTail = pTail._pre;\n      cnt += 1;\n    }\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let curNode = this._head;\n    while (curNode !== this._header) {\n      let tmpNode = curNode;\n      while (\n        tmpNode._next !== this._header &&\n        tmpNode._value === tmpNode._next._value\n      ) {\n        tmpNode = tmpNode._next;\n        this._length -= 1;\n      }\n      curNode._next = tmpNode._next;\n      curNode._next._pre = curNode;\n      curNode = curNode._next;\n    }\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    if (this._length <= 1) return;\n    const arr: T[] = [];\n    this.forEach(function (el) {\n      arr.push(el);\n    });\n    arr.sort(cmp);\n    let curNode: LinkNode<T> = this._head;\n    arr.forEach(function (element) {\n      curNode._value = element;\n      curNode = curNode._next;\n    });\n  }\n  /**\n   * @description Merges two sorted lists.\n   * @param list - The other list you want to merge (must be sorted).\n   * @returns The size of list after merging.\n   * @example\n   * const linkA = new LinkList([1, 3, 5]);\n   * const linkB = new LinkList([2, 4, 6]);\n   * linkA.merge(linkB);  // [1, 2, 3, 4, 5];\n   */\n  merge(list: LinkList<T>) {\n    const self = this;\n    if (this._length === 0) {\n      list.forEach(function (el) {\n        self.pushBack(el);\n      });\n    } else {\n      let curNode = this._head;\n      list.forEach(function (el) {\n        while (\n          curNode !== self._header &&\n          curNode._value <= el\n        ) {\n          curNode = curNode._next;\n        }\n        self._insertNode(el, curNode._pre);\n      });\n    }\n    return this._length;\n  }\n  forEach(callback: (element: T, index: number, list: LinkList<T>) => void) {\n    let curNode = this._head;\n    let index = 0;\n    while (curNode !== this._header) {\n      callback(curNode._value, index++, this);\n      curNode = curNode._next;\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: LinkList<T>) {\n      if (this._length === 0) return;\n      let curNode = this._head;\n      while (curNode !== this._header) {\n        yield curNode._value;\n        curNode = curNode._next;\n      }\n    }.bind(this)();\n  }\n}\n\nexport default LinkList;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","SequentialContainer","ContainerIterator","throwIteratorAccessError","LinkListIterator","_super","_node","_header","container","iteratorType","_this","pre","_pre","_next","defineProperty","get","_value","set","newValue","enumerable","configurable","copy","LinkList","_head","_tail","self","forEach","el","pushBack","_eraseNode","node","_length","_insertNode","clear","begin","end","rBegin","rEnd","front","back","getElementByPos","pos","RangeError","curNode","eraseElementByPos","eraseElementByValue","eraseElementByIterator","iter","element","popBack","pushFront","popFront","setElementByPos","insert","num","i","find","reverse","pHead","pTail","cnt","tmp","unique","tmpNode","sort","cmp","arr","merge","list","curNode_1","callback","index","_a","bind"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"file":"Deque.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/SequentialContainer/container/SequentialContainer/Deque.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/SequentialContainer/Deque.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport SequentialContainer from './Base';\nimport { RandomIterator } from \"./Base/RandomIterator\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport $getContainerSize from \"../../utils/getContainerSize.macro\";\nvar DequeIterator = /** @class */ (function (_super) {\n    __extends(DequeIterator, _super);\n    function DequeIterator(node, container, iteratorType) {\n        var _this = _super.call(this, node, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    DequeIterator.prototype.copy = function () {\n        return new DequeIterator(this._node, this.container, this.iteratorType);\n    };\n    return DequeIterator;\n}(RandomIterator));\nvar Deque = /** @class */ (function (_super) {\n    __extends(Deque, _super);\n    function Deque(container, _bucketSize) {\n        if (container === void 0) { container = []; }\n        if (_bucketSize === void 0) { _bucketSize = (1 << 12); }\n        var _this = _super.call(this) || this;\n        /**\n         * @internal\n         */\n        _this._first = 0;\n        /**\n         * @internal\n         */\n        _this._curFirst = 0;\n        /**\n         * @internal\n         */\n        _this._last = 0;\n        /**\n         * @internal\n         */\n        _this._curLast = 0;\n        /**\n         * @internal\n         */\n        _this._bucketNum = 0;\n        /**\n         * @internal\n         */\n        _this._map = [];\n        var _length = (function () {\n            if (typeof container.length === \"number\")\n                return container.length;\n            if (typeof container.size === \"number\")\n                return container.size;\n            if (typeof container.size === \"function\")\n                return container.size();\n            throw new TypeError(\"Cannot get the length or size of the container\");\n        })();\n        _this._bucketSize = _bucketSize;\n        _this._bucketNum = Math.max(Math.ceil(_length / _this._bucketSize), 1);\n        for (var i = 0; i < _this._bucketNum; ++i) {\n            _this._map.push(new Array(_this._bucketSize));\n        }\n        var needBucketNum = Math.ceil(_length / _this._bucketSize);\n        _this._first = _this._last = (_this._bucketNum >> 1) - (needBucketNum >> 1);\n        _this._curFirst = _this._curLast = (_this._bucketSize - _length % _this._bucketSize) >> 1;\n        var self = _this;\n        container.forEach(function (element) {\n            self.pushBack(element);\n        });\n        return _this;\n    }\n    /**\n     * @description Growth the Deque.\n     * @internal\n     */\n    Deque.prototype._reAllocate = function () {\n        var newMap = [];\n        var addBucketNum = Math.max(this._bucketNum >> 1, 1);\n        for (var i = 0; i < addBucketNum; ++i) {\n            newMap[i] = new Array(this._bucketSize);\n        }\n        for (var i = this._first; i < this._bucketNum; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        for (var i = 0; i < this._last; ++i) {\n            newMap[newMap.length] = this._map[i];\n        }\n        newMap[newMap.length] = __spreadArray([], __read(this._map[this._last]), false);\n        this._first = addBucketNum;\n        this._last = newMap.length - 1;\n        for (var i = 0; i < addBucketNum; ++i) {\n            newMap[newMap.length] = new Array(this._bucketSize);\n        }\n        this._map = newMap;\n        this._bucketNum = newMap.length;\n    };\n    /**\n     * @description Get the bucket position of the element and the pointer position by index.\n     * @param pos - The element's index.\n     * @internal\n     */\n    Deque.prototype._getElementIndex = function (pos) {\n        var offset = this._curFirst + pos + 1;\n        var offsetRemainder = offset % this._bucketSize;\n        var curNodePointerIndex = offsetRemainder - 1;\n        var curNodeBucketIndex = this._first + (offset - offsetRemainder) / this._bucketSize;\n        if (offsetRemainder === 0)\n            curNodeBucketIndex -= 1;\n        curNodeBucketIndex %= this._bucketNum;\n        if (curNodePointerIndex < 0)\n            curNodePointerIndex += this._bucketSize;\n        return { curNodeBucketIndex: curNodeBucketIndex, curNodePointerIndex: curNodePointerIndex };\n    };\n    Deque.prototype.clear = function () {\n        this._map = [new Array(this._bucketSize)];\n        this._bucketNum = 1;\n        this._first = this._last = this._length = 0;\n        this._curFirst = this._curLast = this._bucketSize >> 1;\n    };\n    Deque.prototype.begin = function () {\n        return new DequeIterator(0, this);\n    };\n    Deque.prototype.end = function () {\n        return new DequeIterator(this._length, this);\n    };\n    Deque.prototype.rBegin = function () {\n        return new DequeIterator(this._length - 1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Deque.prototype.rEnd = function () {\n        return new DequeIterator(-1, this, 1 /* IteratorType.REVERSE */);\n    };\n    Deque.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        return this._map[this._first][this._curFirst];\n    };\n    Deque.prototype.back = function () {\n        if (this._length === 0)\n            return;\n        return this._map[this._last][this._curLast];\n    };\n    Deque.prototype.pushBack = function (element) {\n        if (this._length) {\n            if (this._curLast < this._bucketSize - 1) {\n                this._curLast += 1;\n            }\n            else if (this._last < this._bucketNum - 1) {\n                this._last += 1;\n                this._curLast = 0;\n            }\n            else {\n                this._last = 0;\n                this._curLast = 0;\n            }\n            if (this._last === this._first &&\n                this._curLast === this._curFirst)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._last][this._curLast] = element;\n        return this._length;\n    };\n    Deque.prototype.popBack = function () {\n        if (this._length === 0)\n            return;\n        var value = this._map[this._last][this._curLast];\n        if (this._length !== 1) {\n            if (this._curLast > 0) {\n                this._curLast -= 1;\n            }\n            else if (this._last > 0) {\n                this._last -= 1;\n                this._curLast = this._bucketSize - 1;\n            }\n            else {\n                this._last = this._bucketNum - 1;\n                this._curLast = this._bucketSize - 1;\n            }\n        }\n        this._length -= 1;\n        return value;\n    };\n    /**\n     * @description Push the element to the front.\n     * @param element - The element you want to push.\n     * @returns The size of queue after pushing.\n     */\n    Deque.prototype.pushFront = function (element) {\n        if (this._length) {\n            if (this._curFirst > 0) {\n                this._curFirst -= 1;\n            }\n            else if (this._first > 0) {\n                this._first -= 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            else {\n                this._first = this._bucketNum - 1;\n                this._curFirst = this._bucketSize - 1;\n            }\n            if (this._first === this._last &&\n                this._curFirst === this._curLast)\n                this._reAllocate();\n        }\n        this._length += 1;\n        this._map[this._first][this._curFirst] = element;\n        return this._length;\n    };\n    /**\n     * @description Remove the _first element.\n     * @returns The element you popped.\n     */\n    Deque.prototype.popFront = function () {\n        if (this._length === 0)\n            return;\n        var value = this._map[this._first][this._curFirst];\n        if (this._length !== 1) {\n            if (this._curFirst < this._bucketSize - 1) {\n                this._curFirst += 1;\n            }\n            else if (this._first < this._bucketNum - 1) {\n                this._first += 1;\n                this._curFirst = 0;\n            }\n            else {\n                this._first = 0;\n                this._curFirst = 0;\n            }\n        }\n        this._length -= 1;\n        return value;\n    };\n    Deque.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        return this._map[curNodeBucketIndex][curNodePointerIndex];\n    };\n    Deque.prototype.setElementByPos = function (pos, element) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n    };\n    Deque.prototype.insert = function (pos, element, num) {\n        if (num === void 0) { num = 1; }\n        if (pos < 0 || pos > this._length) {\n            throw new RangeError();\n        }\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this._length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            var arr = [];\n            for (var i = pos; i < this._length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos - 1);\n            for (var i = 0; i < num; ++i)\n                this.pushBack(element);\n            for (var i = 0; i < arr.length; ++i)\n                this.pushBack(arr[i]);\n        }\n        return this._length;\n    };\n    /**\n     * @description Remove all elements after the specified position (excluding the specified position).\n     * @param pos - The previous position of the first removed element.\n     * @returns The size of the container after cutting.\n     * @example\n     * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n     */\n    Deque.prototype.cut = function (pos) {\n        if (pos < 0) {\n            this.clear();\n            return 0;\n        }\n        var _a = this._getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\n        this._last = curNodeBucketIndex;\n        this._curLast = curNodePointerIndex;\n        this._length = pos + 1;\n        return this._length;\n    };\n    Deque.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        if (pos === 0)\n            this.popFront();\n        else if (pos === this._length - 1)\n            this.popBack();\n        else {\n            var arr = [];\n            for (var i = pos + 1; i < this._length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos);\n            this.popBack();\n            var self_1 = this;\n            arr.forEach(function (el) {\n                self_1.pushBack(el);\n            });\n        }\n        return this._length;\n    };\n    Deque.prototype.eraseElementByValue = function (value) {\n        if (this._length === 0)\n            return 0;\n        var arr = [];\n        for (var i = 0; i < this._length; ++i) {\n            var element = this.getElementByPos(i);\n            if (element !== value)\n                arr.push(element);\n        }\n        var _length = arr.length;\n        for (var i = 0; i < _length; ++i)\n            this.setElementByPos(i, arr[i]);\n        return this.cut(_length - 1);\n    };\n    Deque.prototype.eraseElementByIterator = function (iter) {\n        var _node = iter._node;\n        this.eraseElementByPos(_node);\n        iter = iter.next();\n        return iter;\n    };\n    Deque.prototype.find = function (element) {\n        for (var i = 0; i < this._length; ++i) {\n            if (this.getElementByPos(i) === element) {\n                return new DequeIterator(i, this);\n            }\n        }\n        return this.end();\n    };\n    Deque.prototype.reverse = function () {\n        var l = 0;\n        var r = this._length - 1;\n        while (l < r) {\n            var tmp = this.getElementByPos(l);\n            this.setElementByPos(l, this.getElementByPos(r));\n            this.setElementByPos(r, tmp);\n            l += 1;\n            r -= 1;\n        }\n    };\n    Deque.prototype.unique = function () {\n        if (this._length <= 1) {\n            return this._length;\n        }\n        var index = 1;\n        var pre = this.getElementByPos(0);\n        for (var i = 1; i < this._length; ++i) {\n            var cur = this.getElementByPos(i);\n            if (cur !== pre) {\n                pre = cur;\n                this.setElementByPos(index++, cur);\n            }\n        }\n        while (this._length > index)\n            this.popBack();\n        return this._length;\n    };\n    Deque.prototype.sort = function (cmp) {\n        var arr = [];\n        for (var i = 0; i < this._length; ++i) {\n            arr.push(this.getElementByPos(i));\n        }\n        arr.sort(cmp);\n        for (var i = 0; i < this._length; ++i)\n            this.setElementByPos(i, arr[i]);\n    };\n    /**\n     * @description Remove as much useless space as possible.\n     */\n    Deque.prototype.shrinkToFit = function () {\n        if (this._length === 0)\n            return;\n        var arr = [];\n        this.forEach(function (el) {\n            arr.push(el);\n        });\n        this._bucketNum = Math.max(Math.ceil(this._length / this._bucketSize), 1);\n        this._length = this._first = this._last = this._curFirst = this._curLast = 0;\n        this._map = [];\n        for (var i = 0; i < this._bucketNum; ++i) {\n            this._map.push(new Array(this._bucketSize));\n        }\n        for (var i = 0; i < arr.length; ++i)\n            this.pushBack(arr[i]);\n    };\n    Deque.prototype.forEach = function (callback) {\n        for (var i = 0; i < this._length; ++i) {\n            callback(this.getElementByPos(i), i, this);\n        }\n    };\n    Deque.prototype[Symbol.iterator] = function () {\n        return function () {\n            var i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < this._length)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.getElementByPos(i)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        ++i;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return Deque;\n}(SequentialContainer));\nexport default Deque;\n","import SequentialContainer from './Base';\nimport { IteratorType, initContainer } from '@/container/ContainerBase';\nimport { RandomIterator } from '@/container/SequentialContainer/Base/RandomIterator';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport $getContainerSize from '@/utils/getContainerSize.macro';\n\nclass DequeIterator<T> extends RandomIterator<T> {\n  readonly container: Deque<T>;\n  constructor(node: number, container: Deque<T>, iteratorType?: IteratorType) {\n    super(node, iteratorType);\n    this.container = container;\n  }\n  copy() {\n    return new DequeIterator<T>(this._node, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: DequeIterator<T>): boolean;\n}\n\nexport type { DequeIterator };\n\nclass Deque<T> extends SequentialContainer<T> {\n  /**\n   * @internal\n   */\n  private _first = 0;\n  /**\n   * @internal\n   */\n  private _curFirst = 0;\n  /**\n   * @internal\n   */\n  private _last = 0;\n  /**\n   * @internal\n   */\n  private _curLast = 0;\n  /**\n   * @internal\n   */\n  private _bucketNum = 0;\n  /**\n   * @internal\n   */\n  private readonly _bucketSize: number;\n  /**\n   * @internal\n   */\n  private _map: T[][] = [];\n  constructor(container: initContainer<T> = [], _bucketSize = (1 << 12)) {\n    super();\n    const _length = $getContainerSize!(container);\n    this._bucketSize = _bucketSize;\n    this._bucketNum = Math.max(Math.ceil(_length / this._bucketSize), 1);\n    for (let i = 0; i < this._bucketNum; ++i) {\n      this._map.push(new Array(this._bucketSize));\n    }\n    const needBucketNum = Math.ceil(_length / this._bucketSize);\n    this._first = this._last = (this._bucketNum >> 1) - (needBucketNum >> 1);\n    this._curFirst = this._curLast = (this._bucketSize - _length % this._bucketSize) >> 1;\n    const self = this;\n    container.forEach(function (element) {\n      self.pushBack(element);\n    });\n  }\n  /**\n   * @description Growth the Deque.\n   * @internal\n   */\n  private _reAllocate() {\n    const newMap = [];\n    const addBucketNum = Math.max(this._bucketNum >> 1, 1);\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[i] = new Array(this._bucketSize);\n    }\n    for (let i = this._first; i < this._bucketNum; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    for (let i = 0; i < this._last; ++i) {\n      newMap[newMap.length] = this._map[i];\n    }\n    newMap[newMap.length] = [...this._map[this._last]];\n    this._first = addBucketNum;\n    this._last = newMap.length - 1;\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[newMap.length] = new Array(this._bucketSize);\n    }\n    this._map = newMap;\n    this._bucketNum = newMap.length;\n  }\n  /**\n   * @description Get the bucket position of the element and the pointer position by index.\n   * @param pos - The element's index.\n   * @internal\n   */\n  private _getElementIndex(pos: number) {\n    const offset = this._curFirst + pos + 1;\n    const offsetRemainder = offset % this._bucketSize;\n    let curNodePointerIndex = offsetRemainder - 1;\n    let curNodeBucketIndex = this._first + (offset - offsetRemainder) / this._bucketSize;\n    if (offsetRemainder === 0) curNodeBucketIndex -= 1;\n    curNodeBucketIndex %= this._bucketNum;\n    if (curNodePointerIndex < 0) curNodePointerIndex += this._bucketSize;\n    return { curNodeBucketIndex, curNodePointerIndex };\n  }\n  clear() {\n    this._map = [new Array(this._bucketSize)];\n    this._bucketNum = 1;\n    this._first = this._last = this._length = 0;\n    this._curFirst = this._curLast = this._bucketSize >> 1;\n  }\n  begin() {\n    return new DequeIterator<T>(0, this);\n  }\n  end() {\n    return new DequeIterator<T>(this._length, this);\n  }\n  rBegin() {\n    return new DequeIterator<T>(this._length - 1, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new DequeIterator<T>(-1, this, IteratorType.REVERSE);\n  }\n  front(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._first][this._curFirst];\n  }\n  back(): T | undefined {\n    if (this._length === 0) return;\n    return this._map[this._last][this._curLast];\n  }\n  pushBack(element: T) {\n    if (this._length) {\n      if (this._curLast < this._bucketSize - 1) {\n        this._curLast += 1;\n      } else if (this._last < this._bucketNum - 1) {\n        this._last += 1;\n        this._curLast = 0;\n      } else {\n        this._last = 0;\n        this._curLast = 0;\n      }\n      if (\n        this._last === this._first &&\n        this._curLast === this._curFirst\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._last][this._curLast] = element;\n    return this._length;\n  }\n  popBack() {\n    if (this._length === 0) return;\n    const value = this._map[this._last][this._curLast];\n    if (this._length !== 1) {\n      if (this._curLast > 0) {\n        this._curLast -= 1;\n      } else if (this._last > 0) {\n        this._last -= 1;\n        this._curLast = this._bucketSize - 1;\n      } else {\n        this._last = this._bucketNum - 1;\n        this._curLast = this._bucketSize - 1;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  /**\n   * @description Push the element to the front.\n   * @param element - The element you want to push.\n   * @returns The size of queue after pushing.\n   */\n  pushFront(element: T) {\n    if (this._length) {\n      if (this._curFirst > 0) {\n        this._curFirst -= 1;\n      } else if (this._first > 0) {\n        this._first -= 1;\n        this._curFirst = this._bucketSize - 1;\n      } else {\n        this._first = this._bucketNum - 1;\n        this._curFirst = this._bucketSize - 1;\n      }\n      if (\n        this._first === this._last &&\n        this._curFirst === this._curLast\n      ) this._reAllocate();\n    }\n    this._length += 1;\n    this._map[this._first][this._curFirst] = element;\n    return this._length;\n  }\n  /**\n   * @description Remove the _first element.\n   * @returns The element you popped.\n   */\n  popFront() {\n    if (this._length === 0) return;\n    const value = this._map[this._first][this._curFirst];\n    if (this._length !== 1) {\n      if (this._curFirst < this._bucketSize - 1) {\n        this._curFirst += 1;\n      } else if (this._first < this._bucketNum - 1) {\n        this._first += 1;\n        this._curFirst = 0;\n      } else {\n        this._first = 0;\n        this._curFirst = 0;\n      }\n    }\n    this._length -= 1;\n    return value;\n  }\n  getElementByPos(pos: number): T {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    return this._map[curNodeBucketIndex][curNodePointerIndex]!;\n  }\n  setElementByPos(pos: number, element: T) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._map[curNodeBucketIndex][curNodePointerIndex] = element;\n  }\n  insert(pos: number, element: T, num = 1) {\n    $checkWithinAccessParams!(pos, 0, this._length);\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this._length) {\n      while (num--) this.pushBack(element);\n    } else {\n      const arr: T[] = [];\n      for (let i = pos; i < this._length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n      this.cut(pos - 1);\n      for (let i = 0; i < num; ++i) this.pushBack(element);\n      for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n    }\n    return this._length;\n  }\n  /**\n   * @description Remove all elements after the specified position (excluding the specified position).\n   * @param pos - The previous position of the first removed element.\n   * @returns The size of the container after cutting.\n   * @example\n   * deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n   */\n  cut(pos: number) {\n    if (pos < 0) {\n      this.clear();\n      return 0;\n    }\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this._getElementIndex(pos);\n    this._last = curNodeBucketIndex;\n    this._curLast = curNodePointerIndex;\n    this._length = pos + 1;\n    return this._length;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    if (pos === 0) this.popFront();\n    else if (pos === this._length - 1) this.popBack();\n    else {\n      const arr = [];\n      for (let i = pos + 1; i < this._length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n      this.cut(pos);\n      this.popBack();\n      const self = this;\n      arr.forEach(function (el) {\n        self.pushBack(el);\n      });\n    }\n    return this._length;\n  }\n  eraseElementByValue(value: T) {\n    if (this._length === 0) return 0;\n    const arr: T[] = [];\n    for (let i = 0; i < this._length; ++i) {\n      const element = this.getElementByPos(i);\n      if (element !== value) arr.push(element);\n    }\n    const _length = arr.length;\n    for (let i = 0; i < _length; ++i) this.setElementByPos(i, arr[i]);\n    return this.cut(_length - 1);\n  }\n  eraseElementByIterator(iter: DequeIterator<T>) {\n    const _node = iter._node;\n    this.eraseElementByPos(_node);\n    iter = iter.next();\n    return iter;\n  }\n  find(element: T) {\n    for (let i = 0; i < this._length; ++i) {\n      if (this.getElementByPos(i) === element) {\n        return new DequeIterator<T>(i, this);\n      }\n    }\n    return this.end();\n  }\n  reverse() {\n    let l = 0; let r = this._length - 1;\n    while (l < r) {\n      const tmp = this.getElementByPos(l);\n      this.setElementByPos(l, this.getElementByPos(r));\n      this.setElementByPos(r, tmp);\n      l += 1;\n      r -= 1;\n    }\n  }\n  unique() {\n    if (this._length <= 1) {\n      return this._length;\n    }\n    let index = 1;\n    let pre = this.getElementByPos(0);\n    for (let i = 1; i < this._length; ++i) {\n      const cur = this.getElementByPos(i);\n      if (cur !== pre) {\n        pre = cur;\n        this.setElementByPos(index++, cur);\n      }\n    }\n    while (this._length > index) this.popBack();\n    return this._length;\n  }\n  sort(cmp?: (x: T, y: T) => number) {\n    const arr: T[] = [];\n    for (let i = 0; i < this._length; ++i) {\n      arr.push(this.getElementByPos(i));\n    }\n    arr.sort(cmp);\n    for (let i = 0; i < this._length; ++i) this.setElementByPos(i, arr[i]);\n  }\n  /**\n   * @description Remove as much useless space as possible.\n   */\n  shrinkToFit() {\n    if (this._length === 0) return;\n    const arr: T[] = [];\n    this.forEach(function (el) {\n      arr.push(el);\n    });\n    this._bucketNum = Math.max(Math.ceil(this._length / this._bucketSize), 1);\n    this._length = this._first = this._last = this._curFirst = this._curLast = 0;\n    this._map = [];\n    for (let i = 0; i < this._bucketNum; ++i) {\n      this._map.push(new Array(this._bucketSize));\n    }\n    for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n  }\n  forEach(callback: (element: T, index: number, deque: Deque<T>) => void) {\n    for (let i = 0; i < this._length; ++i) {\n      callback(this.getElementByPos(i), i, this);\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: Deque<T>) {\n      for (let i = 0; i < this._length; ++i) {\n        yield this.getElementByPos(i);\n      }\n    }.bind(this)();\n  }\n}\n\nexport default Deque;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__read","o","m","i","r","ar","error","__spreadArray","to","from","pack","arguments","l","slice","concat","SequentialContainer","RandomIterator","DequeIterator","_super","node","container","iteratorType","_this","copy","_node","Deque","_bucketSize","_first","_curFirst","_last","_curLast","_bucketNum","_map","_length","size","Math","max","ceil","needBucketNum","self","forEach","element","pushBack","_reAllocate","newMap","addBucketNum","_getElementIndex","pos","offset","offsetRemainder","curNodePointerIndex","curNodeBucketIndex","clear","begin","end","rBegin","rEnd","front","back","popBack","pushFront","popFront","getElementByPos","RangeError","_a","setElementByPos","insert","num","arr","cut","eraseElementByPos","self_1","el","eraseElementByValue","eraseElementByIterator","iter","find","reverse","tmp","unique","index","pre","cur","sort","cmp","shrinkToFit","callback","bind"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 1897, "column": 0}, "map": {"version":3,"file":"TreeNode.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/TreeContainer/Base/container/TreeContainer/Base/TreeNode.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/src/container/TreeContainer/Base/TreeNode.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(key, value) {\n        this._color = 1 /* TreeNodeColor.RED */;\n        this._key = undefined;\n        this._value = undefined;\n        this._left = undefined;\n        this._right = undefined;\n        this._parent = undefined;\n        this._key = key;\n        this._value = value;\n    }\n    /**\n     * @description Get the pre node.\n     * @returns TreeNode about the pre node.\n     */\n    TreeNode.prototype._pre = function () {\n        var preNode = this;\n        if (preNode._color === 1 /* TreeNodeColor.RED */ &&\n            preNode._parent._parent === preNode) {\n            preNode = preNode._right;\n        }\n        else if (preNode._left) {\n            preNode = preNode._left;\n            while (preNode._right) {\n                preNode = preNode._right;\n            }\n        }\n        else {\n            var pre = preNode._parent;\n            while (pre._left === preNode) {\n                preNode = pre;\n                pre = preNode._parent;\n            }\n            preNode = pre;\n        }\n        return preNode;\n    };\n    /**\n     * @description Get the next node.\n     * @returns TreeNode about the next node.\n     */\n    TreeNode.prototype._next = function () {\n        var nextNode = this;\n        if (nextNode._right) {\n            nextNode = nextNode._right;\n            while (nextNode._left) {\n                nextNode = nextNode._left;\n            }\n            return nextNode;\n        }\n        else {\n            var pre = nextNode._parent;\n            while (pre._right === nextNode) {\n                nextNode = pre;\n                pre = nextNode._parent;\n            }\n            if (nextNode._right !== pre) {\n                return pre;\n            }\n            else\n                return nextNode;\n        }\n    };\n    /**\n     * @description Rotate left.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNode.prototype._rotateLeft = function () {\n        var PP = this._parent;\n        var V = this._right;\n        var R = V._left;\n        if (PP._parent === this)\n            PP._parent = V;\n        else if (PP._left === this)\n            PP._left = V;\n        else\n            PP._right = V;\n        V._parent = PP;\n        V._left = this;\n        this._parent = V;\n        this._right = R;\n        if (R)\n            R._parent = this;\n        return V;\n    };\n    /**\n     * @description Rotate right.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNode.prototype._rotateRight = function () {\n        var PP = this._parent;\n        var F = this._left;\n        var K = F._right;\n        if (PP._parent === this)\n            PP._parent = F;\n        else if (PP._left === this)\n            PP._left = F;\n        else\n            PP._right = F;\n        F._parent = PP;\n        F._right = this;\n        this._parent = F;\n        this._left = K;\n        if (K)\n            K._parent = this;\n        return F;\n    };\n    return TreeNode;\n}());\nexport { TreeNode };\nvar TreeNodeEnableIndex = /** @class */ (function (_super) {\n    __extends(TreeNodeEnableIndex, _super);\n    function TreeNodeEnableIndex() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._subTreeSize = 1;\n        return _this;\n    }\n    /**\n     * @description Rotate left and do recount.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNodeEnableIndex.prototype._rotateLeft = function () {\n        var parent = _super.prototype._rotateLeft.call(this);\n        this._recount();\n        parent._recount();\n        return parent;\n    };\n    /**\n     * @description Rotate right and do recount.\n     * @returns TreeNode about moved to original position after rotation.\n     */\n    TreeNodeEnableIndex.prototype._rotateRight = function () {\n        var parent = _super.prototype._rotateRight.call(this);\n        this._recount();\n        parent._recount();\n        return parent;\n    };\n    TreeNodeEnableIndex.prototype._recount = function () {\n        this._subTreeSize = 1;\n        if (this._left) {\n            this._subTreeSize += this._left._subTreeSize;\n        }\n        if (this._right) {\n            this._subTreeSize += this._right._subTreeSize;\n        }\n    };\n    return TreeNodeEnableIndex;\n}(TreeNode));\nexport { TreeNodeEnableIndex };\n","export const enum TreeNodeColor {\n  RED = 1,\n  BLACK = 0\n}\n\nexport class TreeNode<K, V> {\n  _color = TreeNodeColor.RED;\n  _key: K | undefined = undefined;\n  _value: V | undefined = undefined;\n  _left: TreeNode<K, V> | undefined = undefined;\n  _right: TreeNode<K, V> | undefined = undefined;\n  _parent: TreeNode<K, V> | undefined = undefined;\n  constructor(key?: K, value?: V) {\n    this._key = key;\n    this._value = value;\n  }\n  /**\n   * @description Get the pre node.\n   * @returns TreeNode about the pre node.\n   */\n  _pre() {\n    let preNode: TreeNode<K, V> = this;\n    if (\n      preNode._color === TreeNodeColor.RED &&\n      preNode._parent!._parent === preNode\n    ) {\n      preNode = preNode._right!;\n    } else if (preNode._left) {\n      preNode = preNode._left;\n      while (preNode._right) {\n        preNode = preNode._right;\n      }\n    } else {\n      let pre = preNode._parent!;\n      while (pre._left === preNode) {\n        preNode = pre;\n        pre = preNode._parent!;\n      }\n      preNode = pre;\n    }\n    return preNode;\n  }\n  /**\n   * @description Get the next node.\n   * @returns TreeNode about the next node.\n   */\n  _next() {\n    let nextNode: TreeNode<K, V> = this;\n    if (nextNode._right) {\n      nextNode = nextNode._right;\n      while (nextNode._left) {\n        nextNode = nextNode._left;\n      }\n      return nextNode;\n    } else {\n      let pre = nextNode._parent!;\n      while (pre._right === nextNode) {\n        nextNode = pre;\n        pre = nextNode._parent!;\n      }\n      if (nextNode._right !== pre) {\n        return pre;\n      } else return nextNode;\n    }\n  }\n  /**\n   * @description Rotate left.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const PP = this._parent!;\n    const V = this._right!;\n    const R = V._left;\n\n    if (PP._parent === this) PP._parent = V;\n    else if (PP._left === this) PP._left = V;\n    else PP._right = V;\n\n    V._parent = PP;\n    V._left = this;\n\n    this._parent = V;\n    this._right = R;\n\n    if (R) R._parent = this;\n\n    return V;\n  }\n  /**\n   * @description Rotate right.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const PP = this._parent!;\n    const F = this._left!;\n    const K = F._right;\n\n    if (PP._parent === this) PP._parent = F;\n    else if (PP._left === this) PP._left = F;\n    else PP._right = F;\n\n    F._parent = PP;\n    F._right = this;\n\n    this._parent = F;\n    this._left = K;\n\n    if (K) K._parent = this;\n\n    return F;\n  }\n}\n\nexport class TreeNodeEnableIndex<K, V> extends TreeNode<K, V> {\n  _subTreeSize = 1;\n  /**\n   * @description Rotate left and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateLeft() {\n    const parent = super._rotateLeft() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  /**\n   * @description Rotate right and do recount.\n   * @returns TreeNode about moved to original position after rotation.\n   */\n  _rotateRight() {\n    const parent = super._rotateRight() as TreeNodeEnableIndex<K, V>;\n    this._recount();\n    parent._recount();\n    return parent;\n  }\n  _recount() {\n    this._subTreeSize = 1;\n    if (this._left) {\n      this._subTreeSize += (this._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n    if (this._right) {\n      this._subTreeSize += (this._right as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n  }\n}\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","TreeNode","key","value","_color","_key","undefined","_value","_left","_right","_parent","_pre","preNode","pre","_next","nextNode","_rotateLeft","PP","V","R","_rotateRight","F","K","TreeNodeEnableIndex","_super","_this","apply","arguments","_subTreeSize","parent","_recount"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 2039, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/TreeContainer/Base/container/TreeContainer/Base/index.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/src/container/TreeContainer/Base/index.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport { TreeNode, TreeNodeEnableIndex } from './TreeNode';\nimport { Container } from \"../../ContainerBase\";\nimport $checkWithinAccessParams from \"../../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nvar TreeContainer = /** @class */ (function (_super) {\n    __extends(TreeContainer, _super);\n    /**\n     * @internal\n     */\n    function TreeContainer(cmp, enableIndex) {\n        if (cmp === void 0) { cmp = function (x, y) {\n            if (x < y)\n                return -1;\n            if (x > y)\n                return 1;\n            return 0;\n        }; }\n        if (enableIndex === void 0) { enableIndex = false; }\n        var _this = _super.call(this) || this;\n        /**\n         * @internal\n         */\n        _this._root = undefined;\n        _this._cmp = cmp;\n        if (enableIndex) {\n            _this._TreeNodeClass = TreeNodeEnableIndex;\n            _this._set = function (key, value, hint) {\n                var curNode = this._preSet(key, value, hint);\n                if (curNode) {\n                    var p = curNode._parent;\n                    while (p !== this._header) {\n                        p._subTreeSize += 1;\n                        p = p._parent;\n                    }\n                    var nodeList = this._insertNodeSelfBalance(curNode);\n                    if (nodeList) {\n                        var _a = nodeList, parentNode = _a.parentNode, grandParent = _a.grandParent, curNode_1 = _a.curNode;\n                        parentNode._recount();\n                        grandParent._recount();\n                        curNode_1._recount();\n                    }\n                }\n                return this._length;\n            };\n            _this._eraseNode = function (curNode) {\n                var p = this._preEraseNode(curNode);\n                while (p !== this._header) {\n                    p._subTreeSize -= 1;\n                    p = p._parent;\n                }\n            };\n        }\n        else {\n            _this._TreeNodeClass = TreeNode;\n            _this._set = function (key, value, hint) {\n                var curNode = this._preSet(key, value, hint);\n                if (curNode)\n                    this._insertNodeSelfBalance(curNode);\n                return this._length;\n            };\n            _this._eraseNode = _this._preEraseNode;\n        }\n        _this._header = new _this._TreeNodeClass();\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._lowerBound = function (curNode, key) {\n        var resNode = this._header;\n        while (curNode) {\n            var cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                curNode = curNode._right;\n            }\n            else if (cmpResult > 0) {\n                resNode = curNode;\n                curNode = curNode._left;\n            }\n            else\n                return curNode;\n        }\n        return resNode;\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._upperBound = function (curNode, key) {\n        var resNode = this._header;\n        while (curNode) {\n            var cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult <= 0) {\n                curNode = curNode._right;\n            }\n            else {\n                resNode = curNode;\n                curNode = curNode._left;\n            }\n        }\n        return resNode;\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._reverseLowerBound = function (curNode, key) {\n        var resNode = this._header;\n        while (curNode) {\n            var cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                resNode = curNode;\n                curNode = curNode._right;\n            }\n            else if (cmpResult > 0) {\n                curNode = curNode._left;\n            }\n            else\n                return curNode;\n        }\n        return resNode;\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._reverseUpperBound = function (curNode, key) {\n        var resNode = this._header;\n        while (curNode) {\n            var cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                resNode = curNode;\n                curNode = curNode._right;\n            }\n            else {\n                curNode = curNode._left;\n            }\n        }\n        return resNode;\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._eraseNodeSelfBalance = function (curNode) {\n        while (true) {\n            var parentNode = curNode._parent;\n            if (parentNode === this._header)\n                return;\n            if (curNode._color === 1 /* TreeNodeColor.RED */) {\n                curNode._color = 0 /* TreeNodeColor.BLACK */;\n                return;\n            }\n            if (curNode === parentNode._left) {\n                var brother = parentNode._right;\n                if (brother._color === 1 /* TreeNodeColor.RED */) {\n                    brother._color = 0 /* TreeNodeColor.BLACK */;\n                    parentNode._color = 1 /* TreeNodeColor.RED */;\n                    if (parentNode === this._root) {\n                        this._root = parentNode._rotateLeft();\n                    }\n                    else\n                        parentNode._rotateLeft();\n                }\n                else {\n                    if (brother._right && brother._right._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = parentNode._color;\n                        parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._right._color = 0 /* TreeNodeColor.BLACK */;\n                        if (parentNode === this._root) {\n                            this._root = parentNode._rotateLeft();\n                        }\n                        else\n                            parentNode._rotateLeft();\n                        return;\n                    }\n                    else if (brother._left && brother._left._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        brother._left._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._rotateRight();\n                    }\n                    else {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        curNode = parentNode;\n                    }\n                }\n            }\n            else {\n                var brother = parentNode._left;\n                if (brother._color === 1 /* TreeNodeColor.RED */) {\n                    brother._color = 0 /* TreeNodeColor.BLACK */;\n                    parentNode._color = 1 /* TreeNodeColor.RED */;\n                    if (parentNode === this._root) {\n                        this._root = parentNode._rotateRight();\n                    }\n                    else\n                        parentNode._rotateRight();\n                }\n                else {\n                    if (brother._left && brother._left._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = parentNode._color;\n                        parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._left._color = 0 /* TreeNodeColor.BLACK */;\n                        if (parentNode === this._root) {\n                            this._root = parentNode._rotateRight();\n                        }\n                        else\n                            parentNode._rotateRight();\n                        return;\n                    }\n                    else if (brother._right && brother._right._color === 1 /* TreeNodeColor.RED */) {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        brother._right._color = 0 /* TreeNodeColor.BLACK */;\n                        brother._rotateLeft();\n                    }\n                    else {\n                        brother._color = 1 /* TreeNodeColor.RED */;\n                        curNode = parentNode;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._preEraseNode = function (curNode) {\n        var _a, _b;\n        if (this._length === 1) {\n            this.clear();\n            return this._header;\n        }\n        var swapNode = curNode;\n        while (swapNode._left || swapNode._right) {\n            if (swapNode._right) {\n                swapNode = swapNode._right;\n                while (swapNode._left)\n                    swapNode = swapNode._left;\n            }\n            else {\n                swapNode = swapNode._left;\n            }\n            _a = __read([swapNode._key, curNode._key], 2), curNode._key = _a[0], swapNode._key = _a[1];\n            _b = __read([swapNode._value, curNode._value], 2), curNode._value = _b[0], swapNode._value = _b[1];\n            curNode = swapNode;\n        }\n        if (this._header._left === swapNode) {\n            this._header._left = swapNode._parent;\n        }\n        else if (this._header._right === swapNode) {\n            this._header._right = swapNode._parent;\n        }\n        this._eraseNodeSelfBalance(swapNode);\n        var _parent = swapNode._parent;\n        if (swapNode === _parent._left) {\n            _parent._left = undefined;\n        }\n        else\n            _parent._right = undefined;\n        this._length -= 1;\n        this._root._color = 0 /* TreeNodeColor.BLACK */;\n        return _parent;\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._inOrderTraversal = function (curNode, callback) {\n        if (curNode === undefined)\n            return false;\n        var ifReturn = this._inOrderTraversal(curNode._left, callback);\n        if (ifReturn)\n            return true;\n        if (callback(curNode))\n            return true;\n        return this._inOrderTraversal(curNode._right, callback);\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._insertNodeSelfBalance = function (curNode) {\n        while (true) {\n            var parentNode = curNode._parent;\n            if (parentNode._color === 0 /* TreeNodeColor.BLACK */)\n                return;\n            var grandParent = parentNode._parent;\n            if (parentNode === grandParent._left) {\n                var uncle = grandParent._right;\n                if (uncle && uncle._color === 1 /* TreeNodeColor.RED */) {\n                    uncle._color = parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root)\n                        return;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    curNode = grandParent;\n                    continue;\n                }\n                else if (curNode === parentNode._right) {\n                    curNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (curNode._left)\n                        curNode._left._parent = parentNode;\n                    if (curNode._right)\n                        curNode._right._parent = grandParent;\n                    parentNode._right = curNode._left;\n                    grandParent._left = curNode._right;\n                    curNode._left = parentNode;\n                    curNode._right = grandParent;\n                    if (grandParent === this._root) {\n                        this._root = curNode;\n                        this._header._parent = curNode;\n                    }\n                    else {\n                        var GP = grandParent._parent;\n                        if (GP._left === grandParent) {\n                            GP._left = curNode;\n                        }\n                        else\n                            GP._right = curNode;\n                    }\n                    curNode._parent = grandParent._parent;\n                    parentNode._parent = curNode;\n                    grandParent._parent = curNode;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    return { parentNode: parentNode, grandParent: grandParent, curNode: curNode };\n                }\n                else {\n                    parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root) {\n                        this._root = grandParent._rotateRight();\n                    }\n                    else\n                        grandParent._rotateRight();\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                }\n            }\n            else {\n                var uncle = grandParent._left;\n                if (uncle && uncle._color === 1 /* TreeNodeColor.RED */) {\n                    uncle._color = parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root)\n                        return;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    curNode = grandParent;\n                    continue;\n                }\n                else if (curNode === parentNode._left) {\n                    curNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (curNode._left)\n                        curNode._left._parent = grandParent;\n                    if (curNode._right)\n                        curNode._right._parent = parentNode;\n                    grandParent._right = curNode._left;\n                    parentNode._left = curNode._right;\n                    curNode._left = grandParent;\n                    curNode._right = parentNode;\n                    if (grandParent === this._root) {\n                        this._root = curNode;\n                        this._header._parent = curNode;\n                    }\n                    else {\n                        var GP = grandParent._parent;\n                        if (GP._left === grandParent) {\n                            GP._left = curNode;\n                        }\n                        else\n                            GP._right = curNode;\n                    }\n                    curNode._parent = grandParent._parent;\n                    parentNode._parent = curNode;\n                    grandParent._parent = curNode;\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                    return { parentNode: parentNode, grandParent: grandParent, curNode: curNode };\n                }\n                else {\n                    parentNode._color = 0 /* TreeNodeColor.BLACK */;\n                    if (grandParent === this._root) {\n                        this._root = grandParent._rotateLeft();\n                    }\n                    else\n                        grandParent._rotateLeft();\n                    grandParent._color = 1 /* TreeNodeColor.RED */;\n                }\n            }\n            return;\n        }\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._preSet = function (key, value, hint) {\n        if (this._root === undefined) {\n            this._length += 1;\n            this._root = new this._TreeNodeClass(key, value);\n            this._root._color = 0 /* TreeNodeColor.BLACK */;\n            this._root._parent = this._header;\n            this._header._parent = this._root;\n            this._header._left = this._root;\n            this._header._right = this._root;\n            return;\n        }\n        var curNode;\n        var minNode = this._header._left;\n        var compareToMin = this._cmp(minNode._key, key);\n        if (compareToMin === 0) {\n            minNode._value = value;\n            return;\n        }\n        else if (compareToMin > 0) {\n            minNode._left = new this._TreeNodeClass(key, value);\n            minNode._left._parent = minNode;\n            curNode = minNode._left;\n            this._header._left = curNode;\n        }\n        else {\n            var maxNode = this._header._right;\n            var compareToMax = this._cmp(maxNode._key, key);\n            if (compareToMax === 0) {\n                maxNode._value = value;\n                return;\n            }\n            else if (compareToMax < 0) {\n                maxNode._right = new this._TreeNodeClass(key, value);\n                maxNode._right._parent = maxNode;\n                curNode = maxNode._right;\n                this._header._right = curNode;\n            }\n            else {\n                if (hint !== undefined) {\n                    var iterNode = hint._node;\n                    if (iterNode !== this._header) {\n                        var iterCmpRes = this._cmp(iterNode._key, key);\n                        if (iterCmpRes === 0) {\n                            iterNode._value = value;\n                            return;\n                        }\n                        else /* istanbul ignore else */ if (iterCmpRes > 0) {\n                            var preNode = iterNode._pre();\n                            var preCmpRes = this._cmp(preNode._key, key);\n                            if (preCmpRes === 0) {\n                                preNode._value = value;\n                                return;\n                            }\n                            else if (preCmpRes < 0) {\n                                curNode = new this._TreeNodeClass(key, value);\n                                if (preNode._right === undefined) {\n                                    preNode._right = curNode;\n                                    curNode._parent = preNode;\n                                }\n                                else {\n                                    iterNode._left = curNode;\n                                    curNode._parent = iterNode;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (curNode === undefined) {\n                    curNode = this._root;\n                    while (true) {\n                        var cmpResult = this._cmp(curNode._key, key);\n                        if (cmpResult > 0) {\n                            if (curNode._left === undefined) {\n                                curNode._left = new this._TreeNodeClass(key, value);\n                                curNode._left._parent = curNode;\n                                curNode = curNode._left;\n                                break;\n                            }\n                            curNode = curNode._left;\n                        }\n                        else if (cmpResult < 0) {\n                            if (curNode._right === undefined) {\n                                curNode._right = new this._TreeNodeClass(key, value);\n                                curNode._right._parent = curNode;\n                                curNode = curNode._right;\n                                break;\n                            }\n                            curNode = curNode._right;\n                        }\n                        else {\n                            curNode._value = value;\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n        this._length += 1;\n        return curNode;\n    };\n    /**\n     * @internal\n     */\n    TreeContainer.prototype._findElementNode = function (curNode, key) {\n        while (curNode) {\n            var cmpResult = this._cmp(curNode._key, key);\n            if (cmpResult < 0) {\n                curNode = curNode._right;\n            }\n            else if (cmpResult > 0) {\n                curNode = curNode._left;\n            }\n            else\n                return curNode;\n        }\n        return curNode || this._header;\n    };\n    TreeContainer.prototype.clear = function () {\n        this._length = 0;\n        this._root = undefined;\n        this._header._parent = undefined;\n        this._header._left = this._header._right = undefined;\n    };\n    /**\n     * @description Update node's key by iterator.\n     * @param iter - The iterator you want to change.\n     * @param key - The key you want to update.\n     * @returns Whether the modification is successful.\n     * @example\n     * const st = new orderedSet([1, 2, 5]);\n     * const iter = st.find(2);\n     * st.updateKeyByIterator(iter, 3); // then st will become [1, 3, 5]\n     */\n    TreeContainer.prototype.updateKeyByIterator = function (iter, key) {\n        var node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        if (this._length === 1) {\n            node._key = key;\n            return true;\n        }\n        if (node === this._header._left) {\n            if (this._cmp(node._next()._key, key) > 0) {\n                node._key = key;\n                return true;\n            }\n            return false;\n        }\n        if (node === this._header._right) {\n            if (this._cmp(node._pre()._key, key) < 0) {\n                node._key = key;\n                return true;\n            }\n            return false;\n        }\n        var preKey = node._pre()._key;\n        if (this._cmp(preKey, key) >= 0)\n            return false;\n        var nextKey = node._next()._key;\n        if (this._cmp(nextKey, key) <= 0)\n            return false;\n        node._key = key;\n        return true;\n    };\n    TreeContainer.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var index = 0;\n        var self = this;\n        this._inOrderTraversal(this._root, function (curNode) {\n            if (pos === index) {\n                self._eraseNode(curNode);\n                return true;\n            }\n            index += 1;\n            return false;\n        });\n        return this._length;\n    };\n    /**\n     * @description Remove the element of the specified key.\n     * @param key - The key you want to remove.\n     * @returns Whether erase successfully.\n     */\n    TreeContainer.prototype.eraseElementByKey = function (key) {\n        if (this._length === 0)\n            return false;\n        var curNode = this._findElementNode(this._root, key);\n        if (curNode === this._header)\n            return false;\n        this._eraseNode(curNode);\n        return true;\n    };\n    TreeContainer.prototype.eraseElementByIterator = function (iter) {\n        var node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        var hasNoRight = node._right === undefined;\n        var isNormal = iter.iteratorType === 0 /* IteratorType.NORMAL */;\n        // For the normal iterator, the `next` node will be swapped to `this` node when has right.\n        if (isNormal) {\n            // So we should move it to next when it's right is null.\n            if (hasNoRight)\n                iter.next();\n        }\n        else {\n            // For the reverse iterator, only when it doesn't have right and has left the `next` node will be swapped.\n            // So when it has right, or it is a leaf node we should move it to `next`.\n            if (!hasNoRight || node._left === undefined)\n                iter.next();\n        }\n        this._eraseNode(node);\n        return iter;\n    };\n    TreeContainer.prototype.forEach = function (callback) {\n        var e_1, _a;\n        var index = 0;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var element = _c.value;\n                callback(element, index++, this);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    TreeContainer.prototype.getElementByPos = function (pos) {\n        var e_2, _a;\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var res;\n        var index = 0;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var element = _c.value;\n                if (index === pos) {\n                    res = element;\n                    break;\n                }\n                index += 1;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    };\n    /**\n     * @description Get the height of the tree.\n     * @returns Number about the height of the RB-tree.\n     */\n    TreeContainer.prototype.getHeight = function () {\n        if (this._length === 0)\n            return 0;\n        var traversal = function (curNode) {\n            if (!curNode)\n                return 0;\n            return Math.max(traversal(curNode._left), traversal(curNode._right)) + 1;\n        };\n        return traversal(this._root);\n    };\n    return TreeContainer;\n}(Container));\nexport default TreeContainer;\n","import type TreeIterator from './TreeIterator';\nimport { TreeNode, TreeNodeColor, TreeNodeEnableIndex } from './TreeNode';\nimport { Container, IteratorType } from '@/container/ContainerBase';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nabstract class TreeContainer<K, V> extends Container<K | [K, V]> {\n  /**\n   * @internal\n   */\n  protected _root: TreeNode<K, V> | undefined = undefined;\n  /**\n   * @internal\n   */\n  protected _header: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected readonly _cmp: (x: K, y: K) => number;\n  /**\n   * @internal\n   */\n  protected readonly _TreeNodeClass: typeof TreeNode | typeof TreeNodeEnableIndex;\n  /**\n   * @internal\n   */\n  protected readonly _eraseNode: (curNode: TreeNode<K, V>) => void;\n  /**\n   * @internal\n   */\n  protected _set: (key: K, value: V, hint?: TreeIterator<K, V>) => number;\n  /**\n   * @internal\n   */\n  protected constructor(\n    cmp: (x: K, y: K) => number =\n    function (x: K, y: K) {\n      if (x < y) return -1;\n      if (x > y) return 1;\n      return 0;\n    },\n    enableIndex = false\n  ) {\n    super();\n    this._cmp = cmp;\n    if (enableIndex) {\n      this._TreeNodeClass = TreeNodeEnableIndex;\n      this._set = function (key, value, hint) {\n        const curNode = this._preSet(key, value, hint);\n        if (curNode) {\n          let p = curNode._parent as TreeNodeEnableIndex<K, V>;\n          while (p !== this._header) {\n            p._subTreeSize += 1;\n            p = p._parent as TreeNodeEnableIndex<K, V>;\n          }\n          const nodeList = this._insertNodeSelfBalance(curNode);\n          if (nodeList) {\n            const {\n              parentNode,\n              grandParent,\n              curNode\n            } = nodeList as unknown as Record<string, TreeNodeEnableIndex<K, V>>;\n            parentNode._recount();\n            grandParent._recount();\n            curNode._recount();\n          }\n        }\n        return this._length;\n      };\n      this._eraseNode = function (curNode) {\n        let p = this._preEraseNode(curNode) as TreeNodeEnableIndex<K, V>;\n        while (p !== this._header) {\n          p._subTreeSize -= 1;\n          p = p._parent as TreeNodeEnableIndex<K, V>;\n        }\n      };\n    } else {\n      this._TreeNodeClass = TreeNode;\n      this._set = function (key, value, hint) {\n        const curNode = this._preSet(key, value, hint);\n        if (curNode) this._insertNodeSelfBalance(curNode);\n        return this._length;\n      };\n      this._eraseNode = this._preEraseNode;\n    }\n    this._header = new this._TreeNodeClass();\n  }\n  /**\n   * @internal\n   */\n  protected _lowerBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        resNode = curNode;\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _upperBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult <= 0) {\n        curNode = curNode._right;\n      } else {\n        resNode = curNode;\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _reverseLowerBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _reverseUpperBound(curNode: TreeNode<K, V> | undefined, key: K) {\n    let resNode = this._header;\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        resNode = curNode;\n        curNode = curNode._right;\n      } else {\n        curNode = curNode._left;\n      }\n    }\n    return resNode;\n  }\n  /**\n   * @internal\n   */\n  protected _eraseNodeSelfBalance(curNode: TreeNode<K, V>) {\n    while (true) {\n      const parentNode = curNode._parent!;\n      if (parentNode === this._header) return;\n      if (curNode._color === TreeNodeColor.RED) {\n        curNode._color = TreeNodeColor.BLACK;\n        return;\n      }\n      if (curNode === parentNode._left) {\n        const brother = parentNode._right!;\n        if (brother._color === TreeNodeColor.RED) {\n          brother._color = TreeNodeColor.BLACK;\n          parentNode._color = TreeNodeColor.RED;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateLeft();\n          } else parentNode._rotateLeft();\n        } else {\n          if (brother._right && brother._right._color === TreeNodeColor.RED) {\n            brother._color = parentNode._color;\n            parentNode._color = TreeNodeColor.BLACK;\n            brother._right._color = TreeNodeColor.BLACK;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateLeft();\n            } else parentNode._rotateLeft();\n            return;\n          } else if (brother._left && brother._left._color === TreeNodeColor.RED) {\n            brother._color = TreeNodeColor.RED;\n            brother._left._color = TreeNodeColor.BLACK;\n            brother._rotateRight();\n          } else {\n            brother._color = TreeNodeColor.RED;\n            curNode = parentNode;\n          }\n        }\n      } else {\n        const brother = parentNode._left!;\n        if (brother._color === TreeNodeColor.RED) {\n          brother._color = TreeNodeColor.BLACK;\n          parentNode._color = TreeNodeColor.RED;\n          if (parentNode === this._root) {\n            this._root = parentNode._rotateRight();\n          } else parentNode._rotateRight();\n        } else {\n          if (brother._left && brother._left._color === TreeNodeColor.RED) {\n            brother._color = parentNode._color;\n            parentNode._color = TreeNodeColor.BLACK;\n            brother._left._color = TreeNodeColor.BLACK;\n            if (parentNode === this._root) {\n              this._root = parentNode._rotateRight();\n            } else parentNode._rotateRight();\n            return;\n          } else if (brother._right && brother._right._color === TreeNodeColor.RED) {\n            brother._color = TreeNodeColor.RED;\n            brother._right._color = TreeNodeColor.BLACK;\n            brother._rotateLeft();\n          } else {\n            brother._color = TreeNodeColor.RED;\n            curNode = parentNode;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  protected _preEraseNode(curNode: TreeNode<K, V>) {\n    if (this._length === 1) {\n      this.clear();\n      return this._header;\n    }\n    let swapNode = curNode;\n    while (swapNode._left || swapNode._right) {\n      if (swapNode._right) {\n        swapNode = swapNode._right;\n        while (swapNode._left) swapNode = swapNode._left;\n      } else {\n        swapNode = swapNode._left!;\n      }\n      [curNode._key, swapNode._key] = [swapNode._key, curNode._key];\n      [curNode._value, swapNode._value] = [swapNode._value, curNode._value];\n      curNode = swapNode;\n    }\n    if (this._header._left === swapNode) {\n      this._header._left = swapNode._parent;\n    } else if (this._header._right === swapNode) {\n      this._header._right = swapNode._parent;\n    }\n    this._eraseNodeSelfBalance(swapNode);\n    const _parent = swapNode._parent!;\n    if (swapNode === _parent._left) {\n      _parent._left = undefined;\n    } else _parent._right = undefined;\n    this._length -= 1;\n    this._root!._color = TreeNodeColor.BLACK;\n    return _parent;\n  }\n  /**\n   * @internal\n   */\n  protected _inOrderTraversal(\n    curNode: TreeNode<K, V> | undefined,\n    callback: (curNode: TreeNode<K, V>) => boolean\n  ): boolean {\n    if (curNode === undefined) return false;\n    const ifReturn = this._inOrderTraversal(curNode._left, callback);\n    if (ifReturn) return true;\n    if (callback(curNode)) return true;\n    return this._inOrderTraversal(curNode._right, callback);\n  }\n  /**\n   * @internal\n   */\n  protected _insertNodeSelfBalance(curNode: TreeNode<K, V>) {\n    while (true) {\n      const parentNode = curNode._parent!;\n      if (parentNode._color === TreeNodeColor.BLACK) return;\n      const grandParent = parentNode._parent!;\n      if (parentNode === grandParent._left) {\n        const uncle = grandParent._right;\n        if (uncle && uncle._color === TreeNodeColor.RED) {\n          uncle._color = parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) return;\n          grandParent._color = TreeNodeColor.RED;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._right) {\n          curNode._color = TreeNodeColor.BLACK;\n          if (curNode._left) curNode._left._parent = parentNode;\n          if (curNode._right) curNode._right._parent = grandParent;\n          parentNode._right = curNode._left;\n          grandParent._left = curNode._right;\n          curNode._left = parentNode;\n          curNode._right = grandParent;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent!;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = TreeNodeColor.RED;\n          return { parentNode, grandParent, curNode };\n        } else {\n          parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateRight();\n          } else grandParent._rotateRight();\n          grandParent._color = TreeNodeColor.RED;\n        }\n      } else {\n        const uncle = grandParent._left;\n        if (uncle && uncle._color === TreeNodeColor.RED) {\n          uncle._color = parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) return;\n          grandParent._color = TreeNodeColor.RED;\n          curNode = grandParent;\n          continue;\n        } else if (curNode === parentNode._left) {\n          curNode._color = TreeNodeColor.BLACK;\n          if (curNode._left) curNode._left._parent = grandParent;\n          if (curNode._right) curNode._right._parent = parentNode;\n          grandParent._right = curNode._left;\n          parentNode._left = curNode._right;\n          curNode._left = grandParent;\n          curNode._right = parentNode;\n          if (grandParent === this._root) {\n            this._root = curNode;\n            this._header._parent = curNode;\n          } else {\n            const GP = grandParent._parent!;\n            if (GP._left === grandParent) {\n              GP._left = curNode;\n            } else GP._right = curNode;\n          }\n          curNode._parent = grandParent._parent;\n          parentNode._parent = curNode;\n          grandParent._parent = curNode;\n          grandParent._color = TreeNodeColor.RED;\n          return { parentNode, grandParent, curNode };\n        } else {\n          parentNode._color = TreeNodeColor.BLACK;\n          if (grandParent === this._root) {\n            this._root = grandParent._rotateLeft();\n          } else grandParent._rotateLeft();\n          grandParent._color = TreeNodeColor.RED;\n        }\n      }\n      return;\n    }\n  }\n  /**\n   * @internal\n   */\n  protected _preSet(key: K, value?: V, hint?: TreeIterator<K, V>) {\n    if (this._root === undefined) {\n      this._length += 1;\n      this._root = new this._TreeNodeClass(key, value);\n      this._root._color = TreeNodeColor.BLACK;\n      this._root._parent = this._header;\n      this._header._parent = this._root;\n      this._header._left = this._root;\n      this._header._right = this._root;\n      return;\n    }\n    let curNode;\n    const minNode = this._header._left!;\n    const compareToMin = this._cmp(minNode._key!, key);\n    if (compareToMin === 0) {\n      minNode._value = value;\n      return;\n    } else if (compareToMin > 0) {\n      minNode._left = new this._TreeNodeClass(key, value);\n      minNode._left._parent = minNode;\n      curNode = minNode._left;\n      this._header._left = curNode;\n    } else {\n      const maxNode = this._header._right!;\n      const compareToMax = this._cmp(maxNode._key!, key);\n      if (compareToMax === 0) {\n        maxNode._value = value;\n        return;\n      } else if (compareToMax < 0) {\n        maxNode._right = new this._TreeNodeClass(key, value);\n        maxNode._right._parent = maxNode;\n        curNode = maxNode._right;\n        this._header._right = curNode;\n      } else {\n        if (hint !== undefined) {\n          const iterNode = hint._node;\n          if (iterNode !== this._header) {\n            const iterCmpRes = this._cmp(iterNode._key!, key);\n            if (iterCmpRes === 0) {\n              iterNode._value = value;\n              return;\n            } else /* istanbul ignore else */ if (iterCmpRes > 0) {\n              const preNode = iterNode._pre();\n              const preCmpRes = this._cmp(preNode._key!, key);\n              if (preCmpRes === 0) {\n                preNode._value = value;\n                return;\n              } else if (preCmpRes < 0) {\n                curNode = new this._TreeNodeClass(key, value);\n                if (preNode._right === undefined) {\n                  preNode._right = curNode;\n                  curNode._parent = preNode;\n                } else {\n                  iterNode._left = curNode;\n                  curNode._parent = iterNode;\n                }\n              }\n            }\n          }\n        }\n        if (curNode === undefined) {\n          curNode = this._root;\n          while (true) {\n            const cmpResult = this._cmp(curNode._key!, key);\n            if (cmpResult > 0) {\n              if (curNode._left === undefined) {\n                curNode._left = new this._TreeNodeClass(key, value);\n                curNode._left._parent = curNode;\n                curNode = curNode._left;\n                break;\n              }\n              curNode = curNode._left;\n            } else if (cmpResult < 0) {\n              if (curNode._right === undefined) {\n                curNode._right = new this._TreeNodeClass(key, value);\n                curNode._right._parent = curNode;\n                curNode = curNode._right;\n                break;\n              }\n              curNode = curNode._right;\n            } else {\n              curNode._value = value;\n              return;\n            }\n          }\n        }\n      }\n    }\n    this._length += 1;\n    return curNode;\n  }\n  /**\n   * @internal\n   */\n  protected _findElementNode(curNode: TreeNode<K, V> | undefined, key: K) {\n    while (curNode) {\n      const cmpResult = this._cmp(curNode._key!, key);\n      if (cmpResult < 0) {\n        curNode = curNode._right;\n      } else if (cmpResult > 0) {\n        curNode = curNode._left;\n      } else return curNode;\n    }\n    return curNode || this._header;\n  }\n  clear() {\n    this._length = 0;\n    this._root = undefined;\n    this._header._parent = undefined;\n    this._header._left = this._header._right = undefined;\n  }\n  /**\n   * @description Update node's key by iterator.\n   * @param iter - The iterator you want to change.\n   * @param key - The key you want to update.\n   * @returns Whether the modification is successful.\n   * @example\n   * const st = new orderedSet([1, 2, 5]);\n   * const iter = st.find(2);\n   * st.updateKeyByIterator(iter, 3); // then st will become [1, 3, 5]\n   */\n  updateKeyByIterator(iter: TreeIterator<K, V>, key: K): boolean {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    if (this._length === 1) {\n      node._key = key;\n      return true;\n    }\n    if (node === this._header._left) {\n      if (this._cmp(node._next()._key!, key) > 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    if (node === this._header._right) {\n      if (this._cmp(node._pre()._key!, key) < 0) {\n        node._key = key;\n        return true;\n      }\n      return false;\n    }\n    const preKey = node._pre()._key!;\n    if (this._cmp(preKey, key) >= 0) return false;\n    const nextKey = node._next()._key!;\n    if (this._cmp(nextKey, key) <= 0) return false;\n    node._key = key;\n    return true;\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let index = 0;\n    const self = this;\n    this._inOrderTraversal(\n      this._root,\n      function (curNode) {\n        if (pos === index) {\n          self._eraseNode(curNode);\n          return true;\n        }\n        index += 1;\n        return false;\n      });\n    return this._length;\n  }\n  /**\n   * @description Remove the element of the specified key.\n   * @param key - The key you want to remove.\n   * @returns Whether erase successfully.\n   */\n  eraseElementByKey(key: K) {\n    if (this._length === 0) return false;\n    const curNode = this._findElementNode(this._root, key);\n    if (curNode === this._header) return false;\n    this._eraseNode(curNode);\n    return true;\n  }\n  eraseElementByIterator(iter: TreeIterator<K, V>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    const hasNoRight = node._right === undefined;\n    const isNormal = iter.iteratorType === IteratorType.NORMAL;\n    // For the normal iterator, the `next` node will be swapped to `this` node when has right.\n    if (isNormal) {\n      // So we should move it to next when it's right is null.\n      if (hasNoRight) iter.next();\n    } else {\n      // For the reverse iterator, only when it doesn't have right and has left the `next` node will be swapped.\n      // So when it has right, or it is a leaf node we should move it to `next`.\n      if (!hasNoRight || node._left === undefined) iter.next();\n    }\n    this._eraseNode(node);\n    return iter;\n  }\n  forEach(callback: (element: K | [K, V], index: number, tree: TreeContainer<K, V>) => void) {\n    let index = 0;\n    for (const element of this) callback(element, index++, this);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let res;\n    let index = 0;\n    for (const element of this) {\n      if (index === pos) {\n        res = element;\n        break;\n      }\n      index += 1;\n    }\n    return <K | [K, V]>res;\n  }\n  /**\n   * @description Get the height of the tree.\n   * @returns Number about the height of the RB-tree.\n   */\n  getHeight() {\n    if (this._length === 0) return 0;\n    const traversal =\n      function (curNode: TreeNode<K, V> | undefined): number {\n        if (!curNode) return 0;\n        return Math.max(traversal(curNode._left), traversal(curNode._right)) + 1;\n      };\n    return traversal(this._root);\n  }\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element less than the given key.\n   */\n  abstract reverseUpperBound(key: K): TreeIterator<K, V>;\n  /**\n   * @description Union the other tree to self.\n   * @param other - The other tree container you want to merge.\n   * @returns The size of the tree after union.\n   */\n  abstract union(other: TreeContainer<K, V>): number;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element not greater than the given key.\n   */\n  abstract reverseLowerBound(key: K): TreeIterator<K, V>;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element not less than the given key.\n   */\n  abstract lowerBound(key: K): TreeIterator<K, V>;\n  /**\n   * @param key - The given key you want to compare.\n   * @returns An iterator to the first element greater than the given key.\n   */\n  abstract upperBound(key: K): TreeIterator<K, V>;\n}\n\nexport default TreeContainer;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__read","o","n","m","Symbol","iterator","i","r","ar","e","next","done","push","value","error","__values","s","length","TreeNode","TreeNodeEnableIndex","Container","throwIteratorAccessError","TreeContainer","_super","cmp","enableIndex","x","y","_this","_root","undefined","_cmp","_TreeNodeClass","_set","key","hint","curNode","_preSet","_parent","_header","_subTreeSize","nodeList","_insertNodeSelfBalance","_a","parentNode","grandParent","curNode_1","_recount","_length","_eraseNode","_preEraseNode","_lowerBound","resNode","cmpResult","_key","_right","_left","_upperBound","_reverseLowerBound","_reverseUpperBound","_eraseNodeSelfBalance","_color","brother","_rotateLeft","_rotateRight","_b","clear","swapNode","_value","_inOrderTraversal","callback","ifReturn","uncle","GP","minNode","compareToMin","maxNode","compareToMax","iterNode","_node","iterCmpRes","preNode","_pre","preCmpRes","_findElementNode","updateKeyByIterator","iter","node","_next","preKey","nextKey","eraseElementByPos","pos","RangeError","index","self","eraseElementByKey","eraseElementByIterator","hasNoRight","isNormal","iteratorType","forEach","e_1","_c","element","e_1_1","return","getElementByPos","e_2","res","e_2_1","getHeight","traversal","Math","max"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 2650, "column": 0}, "map": {"version":3,"file":"TreeIterator.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/TreeContainer/Base/container/TreeContainer/Base/TreeIterator.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/src/container/TreeContainer/Base/TreeIterator.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ContainerIterator } from \"../../ContainerBase\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nvar TreeIterator = /** @class */ (function (_super) {\n    __extends(TreeIterator, _super);\n    /**\n     * @internal\n     */\n    function TreeIterator(node, header, iteratorType) {\n        var _this = _super.call(this, iteratorType) || this;\n        _this._node = node;\n        _this._header = header;\n        if (_this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            _this.pre = function () {\n                if (this._node === this._header._left) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre();\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next();\n                return this;\n            };\n        }\n        else {\n            _this.pre = function () {\n                if (this._node === this._header._right) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next();\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre();\n                return this;\n            };\n        }\n        return _this;\n    }\n    Object.defineProperty(TreeIterator.prototype, \"index\", {\n        /**\n         * @description Get the sequential index of the iterator in the tree container.<br/>\n         *              <strong>Note:</strong>\n         *              This function only takes effect when the specified tree container `enableIndex = true`.\n         * @returns The index subscript of the node in the tree.\n         * @example\n         * const st = new OrderedSet([1, 2, 3], true);\n         * console.log(st.begin().next().index);  // 1\n         */\n        get: function () {\n            var _node = this._node;\n            var root = this._header._parent;\n            if (_node === this._header) {\n                if (root) {\n                    return root._subTreeSize - 1;\n                }\n                return 0;\n            }\n            var index = 0;\n            if (_node._left) {\n                index += _node._left._subTreeSize;\n            }\n            while (_node !== root) {\n                var _parent = _node._parent;\n                if (_node === _parent._right) {\n                    index += 1;\n                    if (_parent._left) {\n                        index += _parent._left._subTreeSize;\n                    }\n                }\n                _node = _parent;\n            }\n            return index;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TreeIterator;\n}(ContainerIterator));\nexport default TreeIterator;\n","import { TreeNode } from './TreeNode';\nimport type { TreeNodeEnableIndex } from './TreeNode';\nimport { ContainerIterator, IteratorType } from '@/container/ContainerBase';\nimport TreeContainer from '@/container/TreeContainer/Base/index';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nabstract class TreeIterator<K, V> extends ContainerIterator<K | [K, V]> {\n  abstract readonly container: TreeContainer<K, V>;\n  /**\n   * @internal\n   */\n  _node: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _header: TreeNode<K, V>;\n  /**\n   * @internal\n   */\n  protected constructor(\n    node: TreeNode<K, V>,\n    header: TreeNode<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = node;\n    this._header = header;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node === this._header._left) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node === this._header._right) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next();\n        return this;\n      };\n\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre();\n        return this;\n      };\n    }\n  }\n  /**\n   * @description Get the sequential index of the iterator in the tree container.<br/>\n   *              <strong>Note:</strong>\n   *              This function only takes effect when the specified tree container `enableIndex = true`.\n   * @returns The index subscript of the node in the tree.\n   * @example\n   * const st = new OrderedSet([1, 2, 3], true);\n   * console.log(st.begin().next().index);  // 1\n   */\n  get index() {\n    let _node = this._node as TreeNodeEnableIndex<K, V>;\n    const root = this._header._parent as TreeNodeEnableIndex<K, V>;\n    if (_node === this._header) {\n      if (root) {\n        return root._subTreeSize - 1;\n      }\n      return 0;\n    }\n    let index = 0;\n    if (_node._left) {\n      index += (_node._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n    }\n    while (_node !== root) {\n      const _parent = _node._parent as TreeNodeEnableIndex<K, V>;\n      if (_node === _parent._right) {\n        index += 1;\n        if (_parent._left) {\n          index += (_parent._left as TreeNodeEnableIndex<K, V>)._subTreeSize;\n        }\n      }\n      _node = _parent;\n    }\n    return index;\n  }\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport default TreeIterator;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","ContainerIterator","throwIteratorAccessError","TreeIterator","_super","node","header","iteratorType","_this","_node","_header","pre","_left","_pre","next","_next","_right","defineProperty","get","root","_parent","_subTreeSize","index","enumerable","configurable"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 2755, "column": 0}, "map": {"version":3,"file":"OrderedSet.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/TreeContainer/container/TreeContainer/OrderedSet.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/TreeContainer/OrderedSet.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar OrderedSetIterator = /** @class */ (function (_super) {\n    __extends(OrderedSetIterator, _super);\n    function OrderedSetIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(OrderedSetIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._key;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OrderedSetIterator.prototype.copy = function () {\n        return new OrderedSetIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return OrderedSetIterator;\n}(TreeIterator));\nvar OrderedSet = /** @class */ (function (_super) {\n    __extends(OrderedSet, _super);\n    /**\n     * @param container - The initialization container.\n     * @param cmp - The compare function.\n     * @param enableIndex - Whether to enable iterator indexing function.\n     * @example\n     * new OrderedSet();\n     * new OrderedSet([0, 1, 2]);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y);\n     * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n     */\n    function OrderedSet(container, cmp, enableIndex) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this, cmp, enableIndex) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.insert(el);\n        });\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    OrderedSet.prototype._iterationFunc = function (curNode) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (curNode === undefined)\n                        return [2 /*return*/];\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._left))];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, curNode._key];\n                case 2:\n                    _a.sent();\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._right))];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    };\n    OrderedSet.prototype.begin = function () {\n        return new OrderedSetIterator(this._header._left || this._header, this._header, this);\n    };\n    OrderedSet.prototype.end = function () {\n        return new OrderedSetIterator(this._header, this._header, this);\n    };\n    OrderedSet.prototype.rBegin = function () {\n        return new OrderedSetIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedSet.prototype.rEnd = function () {\n        return new OrderedSetIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedSet.prototype.front = function () {\n        return this._header._left ? this._header._left._key : undefined;\n    };\n    OrderedSet.prototype.back = function () {\n        return this._header._right ? this._header._right._key : undefined;\n    };\n    /**\n     * @description Insert element to set.\n     * @param key - The key want to insert.\n     * @param hint - You can give an iterator hint to improve insertion efficiency.\n     * @return The size of container after setting.\n     * @example\n     * const st = new OrderedSet([2, 4, 5]);\n     * const iter = st.begin();\n     * st.insert(1);\n     * st.insert(3, iter);  // give a hint will be faster.\n     */\n    OrderedSet.prototype.insert = function (key, hint) {\n        return this._set(key, undefined, hint);\n    };\n    OrderedSet.prototype.find = function (element) {\n        var resNode = this._findElementNode(this._root, element);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.lowerBound = function (key) {\n        var resNode = this._lowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.upperBound = function (key) {\n        var resNode = this._upperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.reverseLowerBound = function (key) {\n        var resNode = this._reverseLowerBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.reverseUpperBound = function (key) {\n        var resNode = this._reverseUpperBound(this._root, key);\n        return new OrderedSetIterator(resNode, this._header, this);\n    };\n    OrderedSet.prototype.union = function (other) {\n        var self = this;\n        other.forEach(function (el) {\n            self.insert(el);\n        });\n        return this._length;\n    };\n    OrderedSet.prototype[Symbol.iterator] = function () {\n        return this._iterationFunc(this._root);\n    };\n    return OrderedSet;\n}(TreeContainer));\nexport default OrderedSet;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedSetIterator<K> extends TreeIterator<K, undefined> {\n  container: OrderedSet<K>;\n  constructor(\n    node: TreeNode<K, undefined>,\n    header: TreeNode<K, undefined>,\n    container: OrderedSet<K>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._key!;\n  }\n  copy() {\n    return new OrderedSetIterator<K>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedSetIterator<K>): boolean;\n}\n\nexport type { OrderedSetIterator };\n\nclass OrderedSet<K> extends TreeContainer<K, undefined> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedSet();\n   * new OrderedSet([0, 1, 2]);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y);\n   * new OrderedSet([0, 1, 2], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<K> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.insert(el);\n    });\n  }\n  /**\n   * @internal\n   */\n  private * _iterationFunc(\n    curNode: TreeNode<K, undefined> | undefined\n  ): Generator<K, void> {\n    if (curNode === undefined) return;\n    yield * this._iterationFunc(curNode._left);\n    yield curNode._key!;\n    yield * this._iterationFunc(curNode._right);\n  }\n  begin() {\n    return new OrderedSetIterator<K>(\n      this._header._left || this._header,\n      this._header,\n      this\n    );\n  }\n  end() {\n    return new OrderedSetIterator<K>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedSetIterator<K>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedSetIterator<K>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    return this._header._left ? this._header._left._key : undefined;\n  }\n  back() {\n    return this._header._right ? this._header._right._key : undefined;\n  }\n  /**\n   * @description Insert element to set.\n   * @param key - The key want to insert.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const st = new OrderedSet([2, 4, 5]);\n   * const iter = st.begin();\n   * st.insert(1);\n   * st.insert(3, iter);  // give a hint will be faster.\n   */\n  insert(key: K, hint?: OrderedSetIterator<K>) {\n    return this._set(key, undefined, hint);\n  }\n  find(element: K) {\n    const resNode = this._findElementNode(this._root, element);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedSetIterator<K>(resNode, this._header, this);\n  }\n  union(other: OrderedSet<K>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.insert(el);\n    });\n    return this._length;\n  }\n  [Symbol.iterator]() {\n    return this._iterationFunc(this._root);\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedSetIterator<K>): OrderedSetIterator<K>;\n  // @ts-ignore\n  forEach(callback: (element: K, index: number, tree: OrderedSet<K>) => void): void;\n  // @ts-ignore\n  getElementByPos(pos: number): K;\n}\n\nexport default OrderedSet;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__values","o","s","m","i","TreeContainer","TreeIterator","throwIteratorAccessError","OrderedSetIterator","_super","node","header","container","iteratorType","_this","defineProperty","get","_node","_header","_key","enumerable","configurable","copy","OrderedSet","cmp","enableIndex","self","forEach","el","insert","_iterationFunc","curNode","_a","undefined","_left","_right","begin","end","rBegin","rEnd","front","back","key","hint","_set","find","element","resNode","_findElementNode","_root","lowerBound","_lowerBound","upperBound","_upperBound","reverseLowerBound","_reverseLowerBound","reverseUpperBound","_reverseUpperBound","union","other","_length"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 3021, "column": 0}, "map": {"version":3,"file":"OrderedMap.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/TreeContainer/container/TreeContainer/OrderedMap.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/TreeContainer/OrderedMap.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar OrderedMapIterator = /** @class */ (function (_super) {\n    __extends(OrderedMapIterator, _super);\n    function OrderedMapIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(OrderedMapIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            var self = this;\n            return new Proxy([], {\n                get: function (_, props) {\n                    if (props === '0')\n                        return self._node._key;\n                    else if (props === '1')\n                        return self._node._value;\n                },\n                set: function (_, props, newValue) {\n                    if (props !== '1') {\n                        throw new TypeError('props must be 1');\n                    }\n                    self._node._value = newValue;\n                    return true;\n                }\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OrderedMapIterator.prototype.copy = function () {\n        return new OrderedMapIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return OrderedMapIterator;\n}(TreeIterator));\nvar OrderedMap = /** @class */ (function (_super) {\n    __extends(OrderedMap, _super);\n    /**\n     * @param container - The initialization container.\n     * @param cmp - The compare function.\n     * @param enableIndex - Whether to enable iterator indexing function.\n     * @example\n     * new OrderedMap();\n     * new OrderedMap([[0, 1], [2, 1]]);\n     * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n     * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n     */\n    function OrderedMap(container, cmp, enableIndex) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this, cmp, enableIndex) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    OrderedMap.prototype._iterationFunc = function (curNode) {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (curNode === undefined)\n                        return [2 /*return*/];\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._left))];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, [curNode._key, curNode._value]];\n                case 2:\n                    _a.sent();\n                    return [5 /*yield**/, __values(this._iterationFunc(curNode._right))];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    };\n    OrderedMap.prototype.begin = function () {\n        return new OrderedMapIterator(this._header._left || this._header, this._header, this);\n    };\n    OrderedMap.prototype.end = function () {\n        return new OrderedMapIterator(this._header, this._header, this);\n    };\n    OrderedMap.prototype.rBegin = function () {\n        return new OrderedMapIterator(this._header._right || this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedMap.prototype.rEnd = function () {\n        return new OrderedMapIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    OrderedMap.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        var minNode = this._header._left;\n        return [minNode._key, minNode._value];\n    };\n    OrderedMap.prototype.back = function () {\n        if (this._length === 0)\n            return;\n        var maxNode = this._header._right;\n        return [maxNode._key, maxNode._value];\n    };\n    OrderedMap.prototype.lowerBound = function (key) {\n        var resNode = this._lowerBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    OrderedMap.prototype.upperBound = function (key) {\n        var resNode = this._upperBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    OrderedMap.prototype.reverseLowerBound = function (key) {\n        var resNode = this._reverseLowerBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    OrderedMap.prototype.reverseUpperBound = function (key) {\n        var resNode = this._reverseUpperBound(this._root, key);\n        return new OrderedMapIterator(resNode, this._header, this);\n    };\n    /**\n     * @description Insert a key-value pair or set value by the given key.\n     * @param key - The key want to insert.\n     * @param value - The value want to set.\n     * @param hint - You can give an iterator hint to improve insertion efficiency.\n     * @return The size of container after setting.\n     * @example\n     * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n     * const iter = mp.begin();\n     * mp.setElement(1, 0);\n     * mp.setElement(3, 0, iter);  // give a hint will be faster.\n     */\n    OrderedMap.prototype.setElement = function (key, value, hint) {\n        return this._set(key, value, hint);\n    };\n    OrderedMap.prototype.find = function (key) {\n        var curNode = this._findElementNode(this._root, key);\n        return new OrderedMapIterator(curNode, this._header, this);\n    };\n    /**\n     * @description Get the value of the element of the specified key.\n     * @param key - The specified key you want to get.\n     * @example\n     * const val = container.getElementByKey(1);\n     */\n    OrderedMap.prototype.getElementByKey = function (key) {\n        var curNode = this._findElementNode(this._root, key);\n        return curNode._value;\n    };\n    OrderedMap.prototype.union = function (other) {\n        var self = this;\n        other.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n        return this._length;\n    };\n    OrderedMap.prototype[Symbol.iterator] = function () {\n        return this._iterationFunc(this._root);\n    };\n    return OrderedMap;\n}(TreeContainer));\nexport default OrderedMap;\n","import TreeContainer from './Base';\nimport TreeIterator from './Base/TreeIterator';\nimport { TreeNode } from './Base/TreeNode';\nimport { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass OrderedMapIterator<K, V> extends TreeIterator<K, V> {\n  container: OrderedMap<K, V>;\n  constructor(\n    node: TreeNode<K, V>,\n    header: TreeNode<K, V>,\n    container: OrderedMap<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy(<[K, V]><unknown>[], {\n      get(_, props: '0' | '1') {\n        if (props === '0') return self._node._key;\n        else if (props === '1') return self._node._value;\n      },\n      set(_, props: '1', newValue: V) {\n        if (props !== '1') {\n          throw new TypeError('props must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new OrderedMapIterator<K, V>(\n      this._node,\n      this._header,\n      this.container,\n      this.iteratorType\n    );\n  }\n  // @ts-ignore\n  equals(iter: OrderedMapIterator<K, V>): boolean;\n}\n\nexport type { OrderedMapIterator };\n\nclass OrderedMap<K, V> extends TreeContainer<K, V> {\n  /**\n   * @param container - The initialization container.\n   * @param cmp - The compare function.\n   * @param enableIndex - Whether to enable iterator indexing function.\n   * @example\n   * new OrderedMap();\n   * new OrderedMap([[0, 1], [2, 1]]);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y);\n   * new OrderedMap([[0, 1], [2, 1]], (x, y) => x - y, true);\n   */\n  constructor(\n    container: initContainer<[K, V]> = [],\n    cmp?: (x: K, y: K) => number,\n    enableIndex?: boolean\n  ) {\n    super(cmp, enableIndex);\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  /**\n   * @internal\n   */\n  private * _iterationFunc(\n    curNode: TreeNode<K, V> | undefined\n  ): Generator<[K, V], void> {\n    if (curNode === undefined) return;\n    yield * this._iterationFunc(curNode._left);\n    yield <[K, V]>[curNode._key, curNode._value];\n    yield * this._iterationFunc(curNode._right);\n  }\n  begin() {\n    return new OrderedMapIterator<K, V>(this._header._left || this._header, this._header, this);\n  }\n  end() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new OrderedMapIterator<K, V>(\n      this._header._right || this._header,\n      this._header,\n      this,\n      IteratorType.REVERSE\n    );\n  }\n  rEnd() {\n    return new OrderedMapIterator<K, V>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    if (this._length === 0) return;\n    const minNode = this._header._left!;\n    return <[K, V]>[minNode._key, minNode._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    const maxNode = this._header._right!;\n    return <[K, V]>[maxNode._key, maxNode._value];\n  }\n  lowerBound(key: K) {\n    const resNode = this._lowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  upperBound(key: K) {\n    const resNode = this._upperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseLowerBound(key: K) {\n    const resNode = this._reverseLowerBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  reverseUpperBound(key: K) {\n    const resNode = this._reverseUpperBound(this._root, key);\n    return new OrderedMapIterator<K, V>(resNode, this._header, this);\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param hint - You can give an iterator hint to improve insertion efficiency.\n   * @return The size of container after setting.\n   * @example\n   * const mp = new OrderedMap([[2, 0], [4, 0], [5, 0]]);\n   * const iter = mp.begin();\n   * mp.setElement(1, 0);\n   * mp.setElement(3, 0, iter);  // give a hint will be faster.\n   */\n  setElement(key: K, value: V, hint?: OrderedMapIterator<K, V>) {\n    return this._set(key, value, hint);\n  }\n  find(key: K) {\n    const curNode = this._findElementNode(this._root, key);\n    return new OrderedMapIterator<K, V>(curNode, this._header, this);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The specified key you want to get.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key: K) {\n    const curNode = this._findElementNode(this._root, key);\n    return curNode._value;\n  }\n  union(other: OrderedMap<K, V>) {\n    const self = this;\n    other.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n    return this._length;\n  }\n  [Symbol.iterator]() {\n    return this._iterationFunc(this._root);\n  }\n  // @ts-ignore\n  eraseElementByIterator(iter: OrderedMapIterator<K, V>): OrderedMapIterator<K, V>;\n  // @ts-ignore\n  forEach(callback: (element: [K, V], index: number, map: OrderedMap<K, V>) => void): void;\n  // @ts-ignore\n  getElementByPos(pos: number): [K, V];\n}\n\nexport default OrderedMap;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__values","o","s","m","i","TreeContainer","TreeIterator","throwIteratorAccessError","OrderedMapIterator","_super","node","header","container","iteratorType","_this","defineProperty","get","_node","_header","self","Proxy","props","_key","_value","set","newValue","enumerable","configurable","copy","OrderedMap","cmp","enableIndex","forEach","el","setElement","_iterationFunc","curNode","_a","undefined","_left","_right","begin","end","rBegin","rEnd","front","_length","minNode","back","maxNode","lowerBound","key","resNode","_lowerBound","_root","upperBound","_upperBound","reverseLowerBound","_reverseLowerBound","reverseUpperBound","_reverseUpperBound","hint","_set","find","_findElementNode","getElementByKey","union","other"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 3317, "column": 0}, "map": {"version":3,"file":"checkObject.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/src/utils/checkObject.ts","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/utils/utils/checkObject.js"],"sourcesContent":["/**\n * @description Determine whether the type of key is `object`.\n * @param key - The key want to check.\n * @returns Whether the type of key is `object`.\n * @internal\n */\nexport default function checkObject<T>(key: T) {\n  const t = typeof key;\n  return (t === 'object' && key !== null) || t === 'function';\n}\n","/**\n * @description Determine whether the type of key is `object`.\n * @param key - The key want to check.\n * @returns Whether the type of key is `object`.\n * @internal\n */\nexport default function checkObject(key) {\n    var t = typeof key;\n    return (t === 'object' && key !== null) || t === 'function';\n}\n"],"names":["checkObject","key","t"],"mappings":";;;AAMc,SAAUA,YAAeC,CAAAA;IACrC,IAAMC,IAAAA,OAAWD;IACjB,OAAQC,MAAM,YAAYD,MAAQ,QAASC,MAAM;ACCnD","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 3330, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/HashContainer/Base/container/HashContainer/Base/index.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/src/container/HashContainer/Base/index.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container, ContainerIterator } from \"../../ContainerBase\";\nimport checkObject from \"../../../utils/checkObject\";\nimport $checkWithinAccessParams from \"../../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../../utils/throwError\";\nvar HashContainerIterator = /** @class */ (function (_super) {\n    __extends(HashContainerIterator, _super);\n    /**\n     * @internal\n     */\n    function HashContainerIterator(node, header, iteratorType) {\n        var _this = _super.call(this, iteratorType) || this;\n        _this._node = node;\n        _this._header = header;\n        if (_this.iteratorType === 0 /* IteratorType.NORMAL */) {\n            _this.pre = function () {\n                if (this._node._pre === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n        }\n        else {\n            _this.pre = function () {\n                if (this._node._next === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._next;\n                return this;\n            };\n            _this.next = function () {\n                if (this._node === this._header) {\n                    throwIteratorAccessError();\n                }\n                this._node = this._node._pre;\n                return this;\n            };\n        }\n        return _this;\n    }\n    return HashContainerIterator;\n}(ContainerIterator));\nexport { HashContainerIterator };\nvar HashContainer = /** @class */ (function (_super) {\n    __extends(HashContainer, _super);\n    /**\n     * @internal\n     */\n    function HashContainer() {\n        var _this = _super.call(this) || this;\n        /**\n         * @internal\n         */\n        _this._objMap = [];\n        /**\n         * @internal\n         */\n        _this._originMap = {};\n        /**\n         * @description Unique symbol used to tag object.\n         */\n        _this.HASH_TAG = Symbol('@@HASH_TAG');\n        Object.setPrototypeOf(_this._originMap, null);\n        _this._header = {};\n        _this._header._pre = _this._header._next = _this._head = _this._tail = _this._header;\n        return _this;\n    }\n    /**\n     * @internal\n     */\n    HashContainer.prototype._eraseNode = function (node) {\n        var _pre = node._pre, _next = node._next;\n        _pre._next = _next;\n        _next._pre = _pre;\n        if (node === this._head) {\n            this._head = _next;\n        }\n        if (node === this._tail) {\n            this._tail = _pre;\n        }\n        this._length -= 1;\n    };\n    /**\n     * @internal\n     */\n    HashContainer.prototype._set = function (key, value, isObject) {\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        var newTail;\n        if (isObject) {\n            var index = key[this.HASH_TAG];\n            if (index !== undefined) {\n                this._objMap[index]._value = value;\n                return this._length;\n            }\n            Object.defineProperty(key, this.HASH_TAG, {\n                value: this._objMap.length,\n                configurable: true\n            });\n            newTail = {\n                _key: key,\n                _value: value,\n                _pre: this._tail,\n                _next: this._header\n            };\n            this._objMap.push(newTail);\n        }\n        else {\n            var node = this._originMap[key];\n            if (node) {\n                node._value = value;\n                return this._length;\n            }\n            newTail = {\n                _key: key,\n                _value: value,\n                _pre: this._tail,\n                _next: this._header\n            };\n            this._originMap[key] = newTail;\n        }\n        if (this._length === 0) {\n            this._head = newTail;\n            this._header._next = newTail;\n        }\n        else {\n            this._tail._next = newTail;\n        }\n        this._tail = newTail;\n        this._header._pre = newTail;\n        return ++this._length;\n    };\n    /**\n     * @internal\n     */\n    HashContainer.prototype._findElementNode = function (key, isObject) {\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        if (isObject) {\n            var index = key[this.HASH_TAG];\n            if (index === undefined)\n                return this._header;\n            return this._objMap[index];\n        }\n        else {\n            return this._originMap[key] || this._header;\n        }\n    };\n    HashContainer.prototype.clear = function () {\n        var HASH_TAG = this.HASH_TAG;\n        this._objMap.forEach(function (el) {\n            delete el._key[HASH_TAG];\n        });\n        this._objMap = [];\n        this._originMap = {};\n        Object.setPrototypeOf(this._originMap, null);\n        this._length = 0;\n        this._head = this._tail = this._header._pre = this._header._next = this._header;\n    };\n    /**\n     * @description Remove the element of the specified key.\n     * @param key - The key you want to remove.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns Whether erase successfully.\n     */\n    HashContainer.prototype.eraseElementByKey = function (key, isObject) {\n        var node;\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        if (isObject) {\n            var index = key[this.HASH_TAG];\n            if (index === undefined)\n                return false;\n            delete key[this.HASH_TAG];\n            node = this._objMap[index];\n            delete this._objMap[index];\n        }\n        else {\n            node = this._originMap[key];\n            if (node === undefined)\n                return false;\n            delete this._originMap[key];\n        }\n        this._eraseNode(node);\n        return true;\n    };\n    HashContainer.prototype.eraseElementByIterator = function (iter) {\n        var node = iter._node;\n        if (node === this._header) {\n            throwIteratorAccessError();\n        }\n        this._eraseNode(node);\n        return iter.next();\n    };\n    HashContainer.prototype.eraseElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        this._eraseNode(node);\n        return this._length;\n    };\n    return HashContainer;\n}(Container));\nexport { HashContainer };\n","import { Container, ContainerIterator, IteratorType } from '@/container/ContainerBase';\nimport checkObject from '@/utils/checkObject';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nexport type HashLinkNode<K, V> = {\n  _key: K,\n  _value: V,\n  _pre: HashLinkNode<K, V>,\n  _next: HashLinkNode<K, V>\n}\n\nexport abstract class HashContainerIterator<K, V> extends ContainerIterator<K | [K, V]> {\n  abstract readonly container: HashContainer<K, V>;\n  /**\n   * @internal\n   */\n  _node: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected readonly _header: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected constructor(\n    node: HashLinkNode<K, V>,\n    header: HashLinkNode<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(iteratorType);\n    this._node = node;\n    this._header = header;\n    if (this.iteratorType === IteratorType.NORMAL) {\n      this.pre = function () {\n        if (this._node._pre === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this._node._next === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._next;\n        return this;\n      };\n      this.next = function () {\n        if (this._node === this._header) {\n          throwIteratorAccessError();\n        }\n        this._node = this._node._pre;\n        return this;\n      };\n    }\n  }\n  // @ts-ignore\n  pre(): this;\n  // @ts-ignore\n  next(): this;\n}\n\nexport abstract class HashContainer<K, V> extends Container<K | [K, V]> {\n  /**\n   * @internal\n   */\n  protected _objMap: HashLinkNode<K, V>[] = [];\n  /**\n   * @internal\n   */\n  protected _originMap: Record<string, HashLinkNode<K, V>> = {};\n  /**\n   * @internal\n   */\n  protected _head: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected _tail: HashLinkNode<K, V>;\n  /**\n   * @internal\n   */\n  protected readonly _header: HashLinkNode<K, V>;\n  /**\n   * @description Unique symbol used to tag object.\n   */\n  readonly HASH_TAG = Symbol('@@HASH_TAG');\n  /**\n   * @internal\n   */\n  protected constructor() {\n    super();\n    Object.setPrototypeOf(this._originMap, null);\n    this._header = <HashLinkNode<K, V>>{};\n    this._header._pre = this._header._next = this._head = this._tail = this._header;\n  }\n  /**\n   * @internal\n   */\n  protected _eraseNode(node: HashLinkNode<K, V>) {\n    const { _pre, _next } = node;\n    _pre._next = _next;\n    _next._pre = _pre;\n    if (node === this._head) {\n      this._head = _next;\n    }\n    if (node === this._tail) {\n      this._tail = _pre;\n    }\n    this._length -= 1;\n  }\n  /**\n   * @internal\n   */\n  protected _set(key: K, value?: V, isObject?: boolean) {\n    if (isObject === undefined) isObject = checkObject(key);\n    let newTail;\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      if (index !== undefined) {\n        this._objMap[<number>index]._value = <V>value;\n        return this._length;\n      }\n      Object.defineProperty(key, this.HASH_TAG, {\n        value: this._objMap.length,\n        configurable: true\n      });\n      newTail = {\n        _key: key,\n        _value: <V>value,\n        _pre: this._tail,\n        _next: this._header\n      };\n      this._objMap.push(newTail);\n    } else {\n      const node = this._originMap[<string><unknown>key];\n      if (node) {\n        node._value = <V>value;\n        return this._length;\n      }\n      newTail = {\n        _key: key,\n        _value: <V>value,\n        _pre: this._tail,\n        _next: this._header\n      };\n      this._originMap[<string><unknown>key] = newTail;\n    }\n    if (this._length === 0) {\n      this._head = newTail;\n      this._header._next = newTail;\n    } else {\n      this._tail._next = newTail;\n    }\n    this._tail = newTail;\n    this._header._pre = newTail;\n    return ++this._length;\n  }\n  /**\n   * @internal\n   */\n  protected _findElementNode(key: K, isObject?: boolean) {\n    if (isObject === undefined) isObject = checkObject(key);\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      if (index === undefined) return this._header;\n      return this._objMap[index];\n    } else {\n      return this._originMap[<string><unknown>key] || this._header;\n    }\n  }\n  clear() {\n    const HASH_TAG = this.HASH_TAG;\n    this._objMap.forEach(function (el) {\n      delete (<Record<symbol, number>><unknown>el._key)[HASH_TAG];\n    });\n    this._objMap = [];\n    this._originMap = {};\n    Object.setPrototypeOf(this._originMap, null);\n    this._length = 0;\n    this._head = this._tail = this._header._pre = this._header._next = this._header;\n  }\n  /**\n   * @description Remove the element of the specified key.\n   * @param key - The key you want to remove.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns Whether erase successfully.\n   */\n  eraseElementByKey(key: K, isObject?: boolean) {\n    let node;\n    if (isObject === undefined) isObject = checkObject(key);\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      if (index === undefined) return false;\n      delete (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      node = this._objMap[index];\n      delete this._objMap[index];\n    } else {\n      node = this._originMap[<string><unknown>key];\n      if (node === undefined) return false;\n      delete this._originMap[<string><unknown>key];\n    }\n    this._eraseNode(node);\n    return true;\n  }\n  eraseElementByIterator(iter: HashContainerIterator<K, V>) {\n    const node = iter._node;\n    if (node === this._header) {\n      throwIteratorAccessError();\n    }\n    this._eraseNode(node);\n    return iter.next();\n  }\n  eraseElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    this._eraseNode(node);\n    return this._length;\n  }\n}\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","Container","ContainerIterator","checkObject","throwIteratorAccessError","HashContainerIterator","_super","node","header","iteratorType","_this","_node","_header","pre","_pre","next","_next","HashContainer","_objMap","_originMap","HASH_TAG","Symbol","_head","_tail","_eraseNode","_length","_set","key","value","isObject","undefined","newTail","index","_value","defineProperty","length","configurable","_key","push","_findElementNode","clear","forEach","el","eraseElementByKey","eraseElementByIterator","iter","eraseElementByPos","pos","RangeError"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 3537, "column": 0}, "map": {"version":3,"file":"HashSet.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/HashContainer/container/HashContainer/HashSet.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/HashContainer/HashSet.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { HashContainer, HashContainerIterator } from \"./Base\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar HashSetIterator = /** @class */ (function (_super) {\n    __extends(HashSetIterator, _super);\n    function HashSetIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(HashSetIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            return this._node._key;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HashSetIterator.prototype.copy = function () {\n        return new HashSetIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return HashSetIterator;\n}(HashContainerIterator));\nvar HashSet = /** @class */ (function (_super) {\n    __extends(HashSet, _super);\n    function HashSet(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.insert(el);\n        });\n        return _this;\n    }\n    HashSet.prototype.begin = function () {\n        return new HashSetIterator(this._head, this._header, this);\n    };\n    HashSet.prototype.end = function () {\n        return new HashSetIterator(this._header, this._header, this);\n    };\n    HashSet.prototype.rBegin = function () {\n        return new HashSetIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashSet.prototype.rEnd = function () {\n        return new HashSetIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashSet.prototype.front = function () {\n        return this._head._key;\n    };\n    HashSet.prototype.back = function () {\n        return this._tail._key;\n    };\n    /**\n     * @description Insert element to set.\n     * @param key - The key want to insert.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns The size of container after inserting.\n     */\n    HashSet.prototype.insert = function (key, isObject) {\n        return this._set(key, undefined, isObject);\n    };\n    HashSet.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        return node._key;\n    };\n    /**\n     * @description Check key if exist in container.\n     * @param key - The element you want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns An iterator pointing to the element if found, or super end if not found.\n     */\n    HashSet.prototype.find = function (key, isObject) {\n        var node = this._findElementNode(key, isObject);\n        return new HashSetIterator(node, this._header, this);\n    };\n    HashSet.prototype.forEach = function (callback) {\n        var index = 0;\n        var node = this._head;\n        while (node !== this._header) {\n            callback(node._key, index++, this);\n            node = node._next;\n        }\n    };\n    HashSet.prototype[Symbol.iterator] = function () {\n        return function () {\n            var node;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        node = this._head;\n                        _a.label = 1;\n                    case 1:\n                        if (!(node !== this._header)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, node._key];\n                    case 2:\n                        _a.sent();\n                        node = node._next;\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return HashSet;\n}(HashContainer));\nexport default HashSet;\n","import { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { HashContainer, HashContainerIterator, HashLinkNode } from '@/container/HashContainer/Base';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass HashSetIterator<K> extends HashContainerIterator<K, undefined> {\n  readonly container: HashSet<K>;\n  constructor(\n    node: HashLinkNode<K, undefined>,\n    header: HashLinkNode<K, undefined>,\n    container: HashSet<K>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    return this._node._key;\n  }\n  copy() {\n    return new HashSetIterator<K>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: HashSetIterator<K>): boolean;\n}\n\nexport type { HashSetIterator };\n\nclass HashSet<K> extends HashContainer<K, undefined> {\n  constructor(container: initContainer<K> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.insert(el);\n    });\n  }\n  begin() {\n    return new HashSetIterator<K>(this._head, this._header, this);\n  }\n  end() {\n    return new HashSetIterator<K>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new HashSetIterator<K>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new HashSetIterator<K>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front(): K | undefined {\n    return this._head._key;\n  }\n  back(): K | undefined {\n    return this._tail._key;\n  }\n  /**\n   * @description Insert element to set.\n   * @param key - The key want to insert.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns The size of container after inserting.\n   */\n  insert(key: K, isObject?: boolean) {\n    return this._set(key, undefined, isObject);\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    return node._key;\n  }\n  /**\n   * @description Check key if exist in container.\n   * @param key - The element you want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   */\n  find(key: K, isObject?: boolean) {\n    const node = this._findElementNode(key, isObject);\n    return new HashSetIterator<K>(node, this._header, this);\n  }\n  forEach(callback: (element: K, index: number, container: HashSet<K>) => void) {\n    let index = 0;\n    let node = this._head;\n    while (node !== this._header) {\n      callback(node._key, index++, this);\n      node = node._next;\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: HashSet<K>) {\n      let node = this._head;\n      while (node !== this._header) {\n        yield node._key;\n        node = node._next;\n      }\n    }.bind(this)();\n  }\n}\n\nexport default HashSet;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","HashContainer","HashContainerIterator","throwIteratorAccessError","HashSetIterator","_super","node","header","container","iteratorType","_this","defineProperty","get","_node","_header","_key","enumerable","configurable","copy","HashSet","self","forEach","el","insert","begin","_head","end","rBegin","_tail","rEnd","front","back","key","isObject","_set","undefined","getElementByPos","pos","_length","RangeError","_next","find","_findElementNode","callback","index","_a","bind"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 3780, "column": 0}, "map": {"version":3,"file":"HashMap.js","sources":["file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/container/HashContainer/container/HashContainer/HashMap.js","file:///D:/113-2/Breakfast-final-project/node_modules/js-sdsl/dist/esm/src/container/HashContainer/HashMap.ts"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { HashContainer, HashContainerIterator } from \"./Base\";\nimport checkObject from \"../../utils/checkObject\";\nimport $checkWithinAccessParams from \"../../utils/checkParams.macro\";\nimport { throwIteratorAccessError } from \"../../utils/throwError\";\nvar HashMapIterator = /** @class */ (function (_super) {\n    __extends(HashMapIterator, _super);\n    function HashMapIterator(node, header, container, iteratorType) {\n        var _this = _super.call(this, node, header, iteratorType) || this;\n        _this.container = container;\n        return _this;\n    }\n    Object.defineProperty(HashMapIterator.prototype, \"pointer\", {\n        get: function () {\n            if (this._node === this._header) {\n                throwIteratorAccessError();\n            }\n            var self = this;\n            return new Proxy([], {\n                get: function (_, props) {\n                    if (props === '0')\n                        return self._node._key;\n                    else if (props === '1')\n                        return self._node._value;\n                },\n                set: function (_, props, newValue) {\n                    if (props !== '1') {\n                        throw new TypeError('props must be 1');\n                    }\n                    self._node._value = newValue;\n                    return true;\n                }\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HashMapIterator.prototype.copy = function () {\n        return new HashMapIterator(this._node, this._header, this.container, this.iteratorType);\n    };\n    return HashMapIterator;\n}(HashContainerIterator));\nvar HashMap = /** @class */ (function (_super) {\n    __extends(HashMap, _super);\n    function HashMap(container) {\n        if (container === void 0) { container = []; }\n        var _this = _super.call(this) || this;\n        var self = _this;\n        container.forEach(function (el) {\n            self.setElement(el[0], el[1]);\n        });\n        return _this;\n    }\n    HashMap.prototype.begin = function () {\n        return new HashMapIterator(this._head, this._header, this);\n    };\n    HashMap.prototype.end = function () {\n        return new HashMapIterator(this._header, this._header, this);\n    };\n    HashMap.prototype.rBegin = function () {\n        return new HashMapIterator(this._tail, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashMap.prototype.rEnd = function () {\n        return new HashMapIterator(this._header, this._header, this, 1 /* IteratorType.REVERSE */);\n    };\n    HashMap.prototype.front = function () {\n        if (this._length === 0)\n            return;\n        return [this._head._key, this._head._value];\n    };\n    HashMap.prototype.back = function () {\n        if (this._length === 0)\n            return;\n        return [this._tail._key, this._tail._value];\n    };\n    /**\n     * @description Insert a key-value pair or set value by the given key.\n     * @param key - The key want to insert.\n     * @param value - The value want to set.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns The size of container after setting.\n     */\n    HashMap.prototype.setElement = function (key, value, isObject) {\n        return this._set(key, value, isObject);\n    };\n    /**\n     * @description Get the value of the element of the specified key.\n     * @param key - The key want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @example\n     * const val = container.getElementByKey(1);\n     */\n    HashMap.prototype.getElementByKey = function (key, isObject) {\n        if (isObject === undefined)\n            isObject = checkObject(key);\n        if (isObject) {\n            var index = key[this.HASH_TAG];\n            return index !== undefined ? this._objMap[index]._value : undefined;\n        }\n        var node = this._originMap[key];\n        return node ? node._value : undefined;\n    };\n    HashMap.prototype.getElementByPos = function (pos) {\n        if (pos < 0 || pos > this._length - 1) {\n            throw new RangeError();\n        }\n        var node = this._head;\n        while (pos--) {\n            node = node._next;\n        }\n        return [node._key, node._value];\n    };\n    /**\n     * @description Check key if exist in container.\n     * @param key - The element you want to search.\n     * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n     *                   If a `undefined` value is passed in, the type will be automatically judged.\n     * @returns An iterator pointing to the element if found, or super end if not found.\n     */\n    HashMap.prototype.find = function (key, isObject) {\n        var node = this._findElementNode(key, isObject);\n        return new HashMapIterator(node, this._header, this);\n    };\n    HashMap.prototype.forEach = function (callback) {\n        var index = 0;\n        var node = this._head;\n        while (node !== this._header) {\n            callback([node._key, node._value], index++, this);\n            node = node._next;\n        }\n    };\n    HashMap.prototype[Symbol.iterator] = function () {\n        return function () {\n            var node;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        node = this._head;\n                        _a.label = 1;\n                    case 1:\n                        if (!(node !== this._header)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, [node._key, node._value]];\n                    case 2:\n                        _a.sent();\n                        node = node._next;\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }.bind(this)();\n    };\n    return HashMap;\n}(HashContainer));\nexport default HashMap;\n","import { initContainer, IteratorType } from '@/container/ContainerBase';\nimport { HashContainer, HashContainerIterator, HashLinkNode } from '@/container/HashContainer/Base';\nimport checkObject from '@/utils/checkObject';\nimport $checkWithinAccessParams from '@/utils/checkParams.macro';\nimport { throwIteratorAccessError } from '@/utils/throwError';\n\nclass HashMapIterator<K, V> extends HashContainerIterator<K, V> {\n  readonly container: HashMap<K, V>;\n  constructor(\n    node: HashLinkNode<K, V>,\n    header: HashLinkNode<K, V>,\n    container: HashMap<K, V>,\n    iteratorType?: IteratorType\n  ) {\n    super(node, header, iteratorType);\n    this.container = container;\n  }\n  get pointer() {\n    if (this._node === this._header) {\n      throwIteratorAccessError();\n    }\n    const self = this;\n    return new Proxy(<[K, V]><unknown>[], {\n      get(_, props: '0' | '1') {\n        if (props === '0') return self._node._key;\n        else if (props === '1') return self._node._value;\n      },\n      set(_, props: '1', newValue: V) {\n        if (props !== '1') {\n          throw new TypeError('props must be 1');\n        }\n        self._node._value = newValue;\n        return true;\n      }\n    });\n  }\n  copy() {\n    return new HashMapIterator<K, V>(this._node, this._header, this.container, this.iteratorType);\n  }\n  // @ts-ignore\n  equals(iter: HashMapIterator<K, V>): boolean;\n}\n\nexport type { HashMapIterator };\n\nclass HashMap<K, V> extends HashContainer<K, V> {\n  constructor(container: initContainer<[K, V]> = []) {\n    super();\n    const self = this;\n    container.forEach(function (el) {\n      self.setElement(el[0], el[1]);\n    });\n  }\n  begin() {\n    return new HashMapIterator<K, V>(this._head, this._header, this);\n  }\n  end() {\n    return new HashMapIterator<K, V>(this._header, this._header, this);\n  }\n  rBegin() {\n    return new HashMapIterator<K, V>(this._tail, this._header, this, IteratorType.REVERSE);\n  }\n  rEnd() {\n    return new HashMapIterator<K, V>(this._header, this._header, this, IteratorType.REVERSE);\n  }\n  front() {\n    if (this._length === 0) return;\n    return <[K, V]>[this._head._key, this._head._value];\n  }\n  back() {\n    if (this._length === 0) return;\n    return <[K, V]>[this._tail._key, this._tail._value];\n  }\n  /**\n   * @description Insert a key-value pair or set value by the given key.\n   * @param key - The key want to insert.\n   * @param value - The value want to set.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns The size of container after setting.\n   */\n  setElement(key: K, value: V, isObject?: boolean) {\n    return this._set(key, value, isObject);\n  }\n  /**\n   * @description Get the value of the element of the specified key.\n   * @param key - The key want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @example\n   * const val = container.getElementByKey(1);\n   */\n  getElementByKey(key: K, isObject?: boolean) {\n    if (isObject === undefined) isObject = checkObject(key);\n    if (isObject) {\n      const index = (<Record<symbol, number>><unknown>key)[this.HASH_TAG];\n      return index !== undefined ? this._objMap[index]._value : undefined;\n    }\n    const node = this._originMap[<string><unknown>key];\n    return node ? node._value : undefined;\n  }\n  getElementByPos(pos: number) {\n    $checkWithinAccessParams!(pos, 0, this._length - 1);\n    let node = this._head;\n    while (pos--) {\n      node = node._next;\n    }\n    return <[K, V]>[node._key, node._value];\n  }\n  /**\n   * @description Check key if exist in container.\n   * @param key - The element you want to search.\n   * @param isObject - Tell us if the type of inserted key is `object` to improve efficiency.<br/>\n   *                   If a `undefined` value is passed in, the type will be automatically judged.\n   * @returns An iterator pointing to the element if found, or super end if not found.\n   */\n  find(key: K, isObject?: boolean) {\n    const node = this._findElementNode(key, isObject);\n    return new HashMapIterator<K, V>(node, this._header, this);\n  }\n  forEach(callback: (element: [K, V], index: number, hashMap: HashMap<K, V>) => void) {\n    let index = 0;\n    let node = this._head;\n    while (node !== this._header) {\n      callback(<[K, V]>[node._key, node._value], index++, this);\n      node = node._next;\n    }\n  }\n  [Symbol.iterator]() {\n    return function * (this: HashMap<K, V>) {\n      let node = this._head;\n      while (node !== this._header) {\n        yield <[K, V]>[node._key, node._value];\n        node = node._next;\n      }\n    }.bind(this)();\n  }\n}\n\nexport default HashMap;\n"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","throw","return","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","HashContainer","HashContainerIterator","checkObject","throwIteratorAccessError","HashMapIterator","_super","node","header","container","iteratorType","_this","defineProperty","get","_node","_header","self","Proxy","props","_key","_value","set","newValue","enumerable","configurable","copy","HashMap","forEach","el","setElement","begin","_head","end","rBegin","_tail","rEnd","front","_length","back","key","isObject","_set","getElementByKey","undefined","index","HASH_TAG","_objMap","_originMap","getElementByPos","pos","RangeError","_next","find","_findElementNode","callback","_a","bind"],"mappings":"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","ignoreList":[0,1],"debugId":null}}]
}