{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/api/orders/%5Bid%5D/route.js"],"sourcesContent":["export async function DELETE(req, { params }) {\r\n  const orderId = params.id;\r\n\r\n  try {\r\n    // 先檢查訂單是否存在\r\n    const existingOrder = await prisma.order.findUnique({\r\n      where: { id: orderId },\r\n    });\r\n\r\n    if (!existingOrder) {\r\n      return NextResponse.json({ error: '找不到該訂單' }, { status: 404 });\r\n    }\r\n\r\n    // 先刪除關聯的 OrderItem\r\n    await prisma.orderItem.deleteMany({\r\n      where: { orderId },\r\n    });\r\n\r\n    // 再刪除關聯的 Notification\r\n    await prisma.notification.deleteMany({\r\n      where: { orderId },\r\n    });\r\n\r\n    // 最後刪除 Order 本身\r\n    const deletedOrder = await prisma.order.delete({\r\n      where: { id: orderId },\r\n    });\r\n\r\n    return NextResponse.json({ success: true, deletedOrder });\r\n  } catch (error) {\r\n    console.error('刪除失敗:', error);\r\n    return NextResponse.json({ error: '伺服器錯誤，刪除失敗' }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAO,eAAe,OAAO,GAAG,EAAE,EAAE,MAAM,EAAE;IAC1C,MAAM,UAAU,OAAO,EAAE;IAEzB,IAAI;QACF,YAAY;QACZ,MAAM,gBAAgB,MAAM,OAAO,KAAK,CAAC,UAAU,CAAC;YAClD,OAAO;gBAAE,IAAI;YAAQ;QACvB;QAEA,IAAI,CAAC,eAAe;YAClB,OAAO,aAAa,IAAI,CAAC;gBAAE,OAAO;YAAS,GAAG;gBAAE,QAAQ;YAAI;QAC9D;QAEA,mBAAmB;QACnB,MAAM,OAAO,SAAS,CAAC,UAAU,CAAC;YAChC,OAAO;gBAAE;YAAQ;QACnB;QAEA,sBAAsB;QACtB,MAAM,OAAO,YAAY,CAAC,UAAU,CAAC;YACnC,OAAO;gBAAE;YAAQ;QACnB;QAEA,gBAAgB;QAChB,MAAM,eAAe,MAAM,OAAO,KAAK,CAAC,MAAM,CAAC;YAC7C,OAAO;gBAAE,IAAI;YAAQ;QACvB;QAEA,OAAO,aAAa,IAAI,CAAC;YAAE,SAAS;YAAM;QAAa;IACzD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,SAAS;QACvB,OAAO,aAAa,IAAI,CAAC;YAAE,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IAClE;AACF","debugId":null}}]
}