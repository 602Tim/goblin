{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\r\nimport { PrismaClient } from \"@prisma/client\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\n// --- Prisma: Singleton ---\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma?: PrismaClient;\r\n};\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ?? new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  globalForPrisma.prisma = prisma;\r\n}\r\n\r\n// --- Supabase ---\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error(\"❌ Supabase 環境變數未設定\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AACA;;;AAEA,4BAA4B;AAC5B,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C;IACzC,gBAAgB,MAAM,GAAG;AAC3B;AAEA,mBAAmB;AACnB,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/pages/api/auth/%5B...nextauth%5D.ts"],"sourcesContent":["import NextAuth from \"next-auth/next\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport GitHubProvider from \"next-auth/providers/github\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { prisma } from \"../../../lib/prisma\";\r\n\r\nexport const authOptions = {\r\n  providers: [\r\n    GoogleProvider({\r\n      clientId: process.env.GOOGLE_CLIENT_ID!,\r\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\r\n    }),\r\n    GitHubProvider({\r\n      clientId: process.env.GITHUB_CLIENT_ID!,\r\n      clientSecret: process.env.GITHUB_CLIENT_SECRET!,\r\n    }),\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        email: { label: \"Email\", type: \"text\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials) {\r\n        const { email, password } = credentials ?? {};\r\n\r\n        if (!email || !password) {\r\n          return null;\r\n        }\r\n\r\n        const user = await prisma.user.findUnique({ where: { email } });\r\n\r\n        if (!user || user.password !== password) {\r\n          throw new Error(\"帳號或密碼錯誤\");\r\n        }\r\n\r\n        if (user.isBanned) {\r\n          throw new Error(\"AccessDenied\");\r\n        }\r\n\r\n        return user;\r\n      },\r\n    }),\r\n  ],\r\n\r\n  callbacks: {\r\n    async signIn({ user }) {\r\n      try {\r\n        if (!user?.email) return false;\r\n\r\n        const existingUser = await prisma.user.findUnique({\r\n          where: { email: user.email },\r\n        });\r\n\r\n        if (!existingUser) {\r\n          await prisma.user.create({\r\n            data: {\r\n              email: user.email,\r\n              name: user.name || \"未命名\",\r\n              password: \"\", // OAuth 無密碼\r\n              role: \"CUSTOMER\",\r\n              isBanned: false,\r\n            },\r\n          });\r\n          return true;\r\n        }\r\n\r\n        if (existingUser.isBanned) {\r\n          console.log(\"❌ 此帳號已被停權\");\r\n          throw new Error(\"AccessDenied\");\r\n        }\r\n\r\n        return true;\r\n      } catch (error) {\r\n        console.error(\"signIn error:\", error);\r\n        return false;\r\n      }\r\n    },\r\n\r\n    async session({ session }) {\r\n      if (!session?.user?.email) return session;\r\n\r\n      try {\r\n        const dbUser = await prisma.user.findUnique({\r\n          where: { email: session.user.email },\r\n        });\r\n\r\n        if (dbUser) {\r\n          session.user.id = dbUser.id;\r\n          session.user.role = dbUser.role;\r\n          session.user.isBanned = dbUser.isBanned;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"session callback error:\", error);\r\n      }\r\n\r\n      return session;\r\n    },\r\n\r\n    async redirect({ url, baseUrl }) {\r\n      if (!url) return baseUrl;\r\n\r\n      try {\r\n        let cleanUrl = url.replace(/[\\n\\r\\t\\s]/g, \"\");\r\n        cleanUrl = encodeURI(cleanUrl);\r\n\r\n        if (cleanUrl.includes(\"/api/auth/error\")) {\r\n          return `${baseUrl}/login?error=AccessDenied`;\r\n        }\r\n\r\n        if (cleanUrl.startsWith(\"/\")) {\r\n          return new URL(cleanUrl, baseUrl).toString();\r\n        }\r\n\r\n        return new URL(cleanUrl).toString();\r\n      } catch {\r\n        return baseUrl;\r\n      }\r\n    },\r\n  },\r\n\r\n  pages: {\r\n    signIn: \"/login\",\r\n    error: \"/login\",\r\n  },\r\n\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n};\r\n\r\nexport default NextAuth(authOptions);\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/api/order/checkout/route.js"],"sourcesContent":["import { prisma } from \"@/lib/prisma\";\r\nimport { getServerSession } from \"next-auth/next\";\r\nimport { authOptions } from \"@/pages/api/auth/[...nextauth]\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    // NextAuth 最新版用法，getServerSession 傳入 req\r\n    const session = await getServerSession({ req }, authOptions);\r\n    if (!session?.user?.id) {\r\n      return new Response(\"請先登入\", { status: 401 });\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const { searchParams } = new URL(req.url);\r\n    const status = searchParams.get(\"status\");\r\n    const startDate = searchParams.get(\"startDate\");\r\n    const endDate = searchParams.get(\"endDate\");\r\n\r\n    const where = { customerId: userId };\r\n\r\n    if (status && status !== \"ALL\") {\r\n      where.status = status;\r\n    }\r\n\r\n    if (startDate || endDate) {\r\n      where.createdAt = {};\r\n      if (startDate) where.createdAt.gte = new Date(startDate);\r\n      if (endDate) where.createdAt.lte = new Date(endDate);\r\n    }\r\n\r\n    const orders = await prisma.order.findMany({\r\n      where,\r\n      orderBy: { createdAt: \"desc\" },\r\n      include: {\r\n        items: {\r\n          include: {\r\n            menuItem: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return NextResponse.json(orders);\r\n  } catch (error) {\r\n    console.error(\"取得訂單錯誤:\", error);\r\n    return new Response(\"伺服器錯誤\", { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,yCAAyC;QACzC,MAAM,UAAU,MAAM,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD,EAAE;YAAE;QAAI,GAAG,4IAAA,CAAA,cAAW;QAC3D,IAAI,CAAC,SAAS,MAAM,IAAI;YACtB,OAAO,IAAI,SAAS,QAAQ;gBAAE,QAAQ;YAAI;QAC5C;QAEA,MAAM,SAAS,QAAQ,IAAI,CAAC,EAAE;QAC9B,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,SAAS,aAAa,GAAG,CAAC;QAChC,MAAM,YAAY,aAAa,GAAG,CAAC;QACnC,MAAM,UAAU,aAAa,GAAG,CAAC;QAEjC,MAAM,QAAQ;YAAE,YAAY;QAAO;QAEnC,IAAI,UAAU,WAAW,OAAO;YAC9B,MAAM,MAAM,GAAG;QACjB;QAEA,IAAI,aAAa,SAAS;YACxB,MAAM,SAAS,GAAG,CAAC;YACnB,IAAI,WAAW,MAAM,SAAS,CAAC,GAAG,GAAG,IAAI,KAAK;YAC9C,IAAI,SAAS,MAAM,SAAS,CAAC,GAAG,GAAG,IAAI,KAAK;QAC9C;QAEA,MAAM,SAAS,MAAM,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;YACzC;YACA,SAAS;gBAAE,WAAW;YAAO;YAC7B,SAAS;gBACP,OAAO;oBACL,SAAS;wBACP,UAAU;oBACZ;gBACF;YACF;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,WAAW;QACzB,OAAO,IAAI,SAAS,SAAS;YAAE,QAAQ;QAAI;IAC7C;AACF","debugId":null}}]
}