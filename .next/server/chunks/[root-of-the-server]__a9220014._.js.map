{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/api/order/route.js"],"sourcesContent":["import { getToken } from \"next-auth/jwt\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { prisma } from \"../../../../lib/prisma\";\r\n\r\nconst secret = process.env.NEXTAUTH_SECRET;\r\n\r\nexport async function GET(req) {\r\n  const token = await getToken({ req, secret });\r\n\r\n  // 驗證登入\r\n  if (!token?.id) {\r\n    return new Response(\"請先登入\", { status: 401 });\r\n  }\r\n\r\n  try {\r\n    // 查詢所有「尚未處理」的訂單（status: \"PENDING\"）\r\n    const orders = await prisma.order.findMany({\r\n      where: {\r\n        status: \"PENDING\",\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n      select: {\r\n        id: true,\r\n        createdAt: true,\r\n        status: true,\r\n        totalAmount: true,\r\n        paymentStatus: true,\r\n        completedAt: true,\r\n        customer: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n          },\r\n        },\r\n        items: {\r\n          select: {\r\n            id: true,\r\n            quantity: true,\r\n            specialRequest: true,\r\n            menuItem: {\r\n              select: {\r\n                name: true,\r\n                price: true,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return NextResponse.json(orders);\r\n  } catch (error) {\r\n    console.error(\"獲取訂單錯誤:\", error);\r\n    return new Response(\"伺服器錯誤\", { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;;AAGA,MAAM,SAAS,QAAQ,GAAG,CAAC,eAAe;AAEnC,eAAe,IAAI,GAAG;IAC3B,MAAM,QAAQ,MAAM,CAAA,GAAA,8IAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;QAAK;IAAO;IAE3C,OAAO;IACP,IAAI,CAAC,OAAO,IAAI;QACd,OAAO,IAAI,SAAS,QAAQ;YAAE,QAAQ;QAAI;IAC5C;IAEA,IAAI;QACF,mCAAmC;QACnC,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,QAAQ,CAAC;YACzC,OAAO;gBACL,QAAQ;YACV;YACA,SAAS;gBACP,WAAW;YACb;YACA,QAAQ;gBACN,IAAI;gBACJ,WAAW;gBACX,QAAQ;gBACR,aAAa;gBACb,eAAe;gBACf,aAAa;gBACb,UAAU;oBACR,QAAQ;wBACN,IAAI;wBACJ,MAAM;wBACN,OAAO;oBACT;gBACF;gBACA,OAAO;oBACL,QAAQ;wBACN,IAAI;wBACJ,UAAU;wBACV,gBAAgB;wBAChB,UAAU;4BACR,QAAQ;gCACN,MAAM;gCACN,OAAO;4BACT;wBACF;oBACF;gBACF;YACF;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,WAAW;QACzB,OAAO,IAAI,SAAS,SAAS;YAAE,QAAQ;QAAI;IAC7C;AACF","debugId":null}}]
}