{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/lib/mqttClient.js"],"sourcesContent":["// lib/mqttClient.js\r\nimport mqtt from \"mqtt\";\r\n\r\nlet client = null;\r\n\r\nexport function getMqttClient() {\r\n  if (!client) {\r\n    client = mqtt.connect(\"wss://broker.emqx.io:8084/mqtt\", {\r\n      clientId: \"kitchen-client-\" + Math.random().toString(16).substr(2, 8),\r\n      clean: true,\r\n      will: {\r\n        topic: \"nuu/shisa/beigo/notify/orderstatus\",\r\n        payload: \"kitchen-client disconnected unexpectedly\",\r\n        qos: 1,\r\n        retain: false,\r\n      },\r\n    });\r\n\r\n    client.on(\"connect\", () => {\r\n      console.log(\"‚úÖ MQTT connected\");\r\n    });\r\n\r\n    client.on(\"reconnect\", () => {\r\n      console.log(\"üîÑ Reconnecting to MQTT...\");\r\n    });\r\n\r\n    client.on(\"close\", () => {\r\n      console.log(\"üì¥ MQTT connection closed\");\r\n    });\r\n\r\n    client.on(\"error\", (err) => {\r\n      console.error(\"‚ùå MQTT error:\", err);\r\n    });\r\n  }\r\n\r\n  return client;\r\n}\r\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;AACpB;;AAEA,IAAI,SAAS;AAEN,SAAS;IACd,IAAI,CAAC,QAAQ;QACX,SAAS,wIAAA,CAAA,UAAI,CAAC,OAAO,CAAC,kCAAkC;YACtD,UAAU,oBAAoB,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;YACnE,OAAO;YACP,MAAM;gBACJ,OAAO;gBACP,SAAS;gBACT,KAAK;gBACL,QAAQ;YACV;QACF;QAEA,OAAO,EAAE,CAAC,WAAW;YACnB,QAAQ,GAAG,CAAC;QACd;QAEA,OAAO,EAAE,CAAC,aAAa;YACrB,QAAQ,GAAG,CAAC;QACd;QAEA,OAAO,EAAE,CAAC,SAAS;YACjB,QAAQ,GAAG,CAAC;QACd;QAEA,OAAO,EAAE,CAAC,SAAS,CAAC;YAClB,QAAQ,KAAK,CAAC,iBAAiB;QACjC;IACF;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/utils/mqttTopic.ts"],"sourcesContent":["const TOPIC_ROOT = process.env.NEXT_PUBLIC_MQTT_TOPIC_ROOT;\r\n\r\nconst getTopicRoot = () => {\r\n    if (!TOPIC_ROOT) {\r\n        throw new Error(\"Êú™Â°´ÂØ´ .env ÁöÑ NEXT_PUBLIC_MQTT_TOPIC_ROOT\");\r\n    }\r\n    return `nuu/shisa/${TOPIC_ROOT}`;\r\n};\r\n\r\nexport const getOrderCheckoutTopic = () => {\r\n    const topicRoot = getTopicRoot();\r\n    return `${topicRoot}/notify/order/checkout`;\r\n};\r\nexport const getAcceptCustomerOrderTopic = (customerId: number | string) => {\r\n    const topicRoot = getTopicRoot();\r\n    return `${topicRoot}/notify/order/accept/${customerId}`;\r\n};\r\nexport const getKitchenOrderTopic = () => {\r\n    const topicRoot = getTopicRoot();\r\n    return `${topicRoot}/notify/order/kitchen`;\r\n};\r\nexport const getKitchenReadyOrderTopic = (customerId: number | string) => {\r\n    const topicRoot = getTopicRoot();\r\n    return `${topicRoot}/notify/order/ready/${customerId}`;\r\n};\r\nexport const getStaffCompletedOrderTopic = (customerId: number | string) => {\r\n    const topicRoot = getTopicRoot();\r\n    return `${topicRoot}/notify/order/completed/${customerId}`;\r\n};\r\nexport const getCustomerCancelOrderTopic = (customerId: number | string) => {\r\n    const topicRoot = getTopicRoot();\r\n    return `${topicRoot}/notify/order/cancel/${customerId}`;\r\n};\r\n\r\nexport const getOrderStatusWildcardTopic = (customerId: number | string) => {\r\n    const topicRoot = getTopicRoot();\r\n    return `${topicRoot}/notify/order/+/${customerId}`;\r\n}\r\nexport function getOrderToKitchenTopic() {\r\n  return `nuu/shisa/orders/to-kitchen`;\r\n}\r\n\r\nexport function getNotificationTopicByUserId(userId: string) {\r\n  return `nuu/shisa/notifications/${userId}`;\r\n}\r\nexport function getCustomerOrderUpdateTopic(customerId: string) {\r\n  return `nuu/shisa/customer/${customerId}/orders/updated`;\r\n}"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAM;AAEN,MAAM,eAAe;IACjB,uCAAiB;;IAEjB;IACA,OAAO,CAAC,UAAU,EAAE,YAAY;AACpC;AAEO,MAAM,wBAAwB;IACjC,MAAM,YAAY;IAClB,OAAO,GAAG,UAAU,sBAAsB,CAAC;AAC/C;AACO,MAAM,8BAA8B,CAAC;IACxC,MAAM,YAAY;IAClB,OAAO,GAAG,UAAU,qBAAqB,EAAE,YAAY;AAC3D;AACO,MAAM,uBAAuB;IAChC,MAAM,YAAY;IAClB,OAAO,GAAG,UAAU,qBAAqB,CAAC;AAC9C;AACO,MAAM,4BAA4B,CAAC;IACtC,MAAM,YAAY;IAClB,OAAO,GAAG,UAAU,oBAAoB,EAAE,YAAY;AAC1D;AACO,MAAM,8BAA8B,CAAC;IACxC,MAAM,YAAY;IAClB,OAAO,GAAG,UAAU,wBAAwB,EAAE,YAAY;AAC9D;AACO,MAAM,8BAA8B,CAAC;IACxC,MAAM,YAAY;IAClB,OAAO,GAAG,UAAU,qBAAqB,EAAE,YAAY;AAC3D;AAEO,MAAM,8BAA8B,CAAC;IACxC,MAAM,YAAY;IAClB,OAAO,GAAG,UAAU,gBAAgB,EAAE,YAAY;AACtD;AACO,SAAS;IACd,OAAO,CAAC,2BAA2B,CAAC;AACtC;AAEO,SAAS,6BAA6B,MAAc;IACzD,OAAO,CAAC,wBAAwB,EAAE,QAAQ;AAC5C;AACO,SAAS,4BAA4B,UAAkB;IAC5D,OAAO,CAAC,mBAAmB,EAAE,WAAW,eAAe,CAAC;AAC1D","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\r\nimport { PrismaClient } from \"@prisma/client\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\n// --- Prisma: Singleton ---\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma?: PrismaClient;\r\n};\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ?? new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  globalForPrisma.prisma = prisma;\r\n}\r\n\r\n// --- Supabase ---\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error(\"‚ùå Supabase Áí∞Â¢ÉËÆäÊï∏Êú™Ë®≠ÂÆö\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AACA;;;AAEA,4BAA4B;AAC5B,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C;IACzC,gBAAgB,MAAM,GAAG;AAC3B;AAEA,mBAAmB;AACnB,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/api/order/%5BorderId%5D/status/route.js"],"sourcesContent":["// app/api/order/[orderId]/status/route.js\r\nimport { getMqttClient } from \"../../../../../lib/mqttClient\";\r\nimport {\r\n  getKitchenReadyOrderTopic,\r\n  getStaffCompletedOrderTopic\r\n} from \"../../../../../utils/mqttTopic\";\r\nimport { prisma } from \"../../../../../lib/prisma\";\r\nimport { getToken } from \"next-auth/jwt\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst secret = process.env.NEXTAUTH_SECRET;\r\n\r\nexport async function PATCH(req, { params }) {\r\n  const token = await getToken({ req, secret });\r\n\r\n  if (!token || ![\"STAFF\", \"CHEF\"].includes(token.role)) {\r\n    return new Response(\"Ê≤íÊúâÊ¨äÈôê\", { status: 403 });\r\n  }\r\n\r\n  const { orderId } = params;\r\n  const { status } = await req.json();\r\n\r\n  if (!orderId || !status) {\r\n    return new Response(\"Áº∫Â∞ëÂøÖË¶ÅË≥áÊñô\", { status: 400 });\r\n  }\r\n\r\n  try {\r\n    const updated = await prisma.order.update({\r\n      where: { id: orderId },\r\n      data: {\r\n        status,\r\n        ...(status === \"COMPLETED\" && { completedAt: new Date() }),\r\n      },\r\n    });\r\n\r\n    return NextResponse.json(updated);\r\n  } catch (err) {\r\n    console.error(\"‚ùå Êõ¥Êñ∞Ë®ÇÂñÆÁãÄÊÖãÂ§±Êïó:\", err);\r\n    return new Response(\"‰º∫ÊúçÂô®ÈåØË™§\", { status: 500 });\r\n  }\r\n}\r\ntry {\r\n  const updated = await prisma.order.update({\r\n    where: { id: orderId },\r\n    data: {\r\n      status,\r\n      ...(status === \"COMPLETED\" && { completedAt: new Date() }),\r\n    },\r\n  });\r\n\r\n  if (status === \"READY\" || status === \"COMPLETED\") {\r\n    const order = await prisma.order.findUnique({\r\n      where: { id: orderId },\r\n      select: { customerId: true },\r\n    });\r\n\r\n    const topic = status === \"READY\"\r\n      ? getKitchenReadyOrderTopic(order.customerId)\r\n      : getStaffCompletedOrderTopic(order.customerId);\r\n\r\n    mqtt.publish(topic, JSON.stringify({ orderId, status }), { qos: 1 }, (err) => {\r\n      if (err) {\r\n        console.error(\"‚ùå ÁôºÈÄÅÁãÄÊÖãÈÄöÁü•Â§±Êïó:\", err);\r\n      } else {\r\n        console.log(`üì¢ Â∑≤ÈÄöÁü•È°ßÂÆ¢Ë®ÇÂñÆÁãÄÊÖã: ${status}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  return NextResponse.json(updated);\r\n} catch (err) {\r\n  console.error(\"‚ùå Êõ¥Êñ∞Ë®ÇÂñÆÁãÄÊÖãÂ§±Êïó:\", err);\r\n  return new Response(\"‰º∫ÊúçÂô®ÈåØË™§\", { status: 500 });\r\n}"],"names":[],"mappings":"AAAA,0CAA0C;;;;AAC1C;AACA;AAIA;AACA;AACA;;;;;;AAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,eAAe;AAEnC,eAAe,MAAM,GAAG,EAAE,EAAE,MAAM,EAAE;IACzC,MAAM,QAAQ,MAAM,CAAA,GAAA,8IAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;QAAK;IAAO;IAE3C,IAAI,CAAC,SAAS,CAAC;QAAC;QAAS;KAAO,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG;QACrD,OAAO,IAAI,SAAS,QAAQ;YAAE,QAAQ;QAAI;IAC5C;IAEA,MAAM,EAAE,SAAA,QAAO,EAAE,GAAG;IACpB,MAAM,EAAE,QAAA,OAAM,EAAE,GAAG,MAAM,IAAI,IAAI;IAEjC,IAAI,CAAC,YAAW,CAAC,SAAQ;QACvB,OAAO,IAAI,SAAS,UAAU;YAAE,QAAQ;QAAI;IAC9C;IAEA,IAAI;QACF,MAAM,UAAU,MAAM,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YACxC,OAAO;gBAAE,IAAI;YAAQ;YACrB,MAAM;gBACJ,QAAA;gBACA,GAAI,YAAW,eAAe;oBAAE,aAAa,IAAI;gBAAO,CAAC;YAC3D;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO,IAAI,SAAS,SAAS;YAAE,QAAQ;QAAI;IAC7C;AACF;AACA,IAAI;IACF,MAAM,UAAU,MAAM,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,MAAM,CAAC;QACxC,OAAO;YAAE,IAAI;QAAQ;QACrB,MAAM;YACJ;YACA,GAAI,WAAW,eAAe;gBAAE,aAAa,IAAI;YAAO,CAAC;QAC3D;IACF;IAEA,IAAI,WAAW,WAAW,WAAW,aAAa;QAChD,MAAM,QAAQ,MAAM,+GAAA,CAAA,SAAM,CAAC,KAAK,CAAC,UAAU,CAAC;YAC1C,OAAO;gBAAE,IAAI;YAAQ;YACrB,QAAQ;gBAAE,YAAY;YAAK;QAC7B;QAEA,MAAM,QAAQ,WAAW,UACrB,CAAA,GAAA,oHAAA,CAAA,4BAAyB,AAAD,EAAE,MAAM,UAAU,IAC1C,CAAA,GAAA,oHAAA,CAAA,8BAA2B,AAAD,EAAE,MAAM,UAAU;QAEhD,KAAK,OAAO,CAAC,OAAO,KAAK,SAAS,CAAC;YAAE;YAAS;QAAO,IAAI;YAAE,KAAK;QAAE,GAAG,CAAC;YACpE,IAAI,KAAK;gBACP,QAAQ,KAAK,CAAC,eAAe;YAC/B,OAAO;gBACL,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,QAAQ;YACvC;QACF;IACF;IAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B,EAAE,OAAO,KAAK;IACZ,QAAQ,KAAK,CAAC,eAAe;IAC7B,OAAO,IAAI,SAAS,SAAS;QAAE,QAAQ;IAAI;AAC7C","debugId":null}}]
}