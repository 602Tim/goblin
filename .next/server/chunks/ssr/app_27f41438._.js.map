{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/menu.js"],"sourcesContent":["// app/actions/menu.js\r\n'use server'; // 標記為 Server Action\r\n\r\nimport { prisma } from '@/lib/prisma'; // 引入 Prisma 客戶端\r\nimport { promises as fs } from 'fs'; // 引入 Node.js 的檔案系統模組\r\nimport path from 'path'; // 引入 Node.js 的路徑模組\r\n\r\n// 如果未來有單獨上傳圖片的需求，可以填充這個函數\r\n// 目前，圖片處理會整合到 addMenuItem 中\r\nexport const uploadMenuImage = async (body) => {\r\n    console.warn(\"uploadMenuImage 函數目前未實作，圖片處理已整合到 addMenuItem。\");\r\n    return null;\r\n};\r\n\r\n/**\r\n * 管理員新增菜單項目\r\n * 接收 FormData 物件，處理圖片上傳並將菜單資訊存入資料庫。\r\n * @param {FormData} formData - 包含菜單名稱、價格和圖片檔案的 FormData 物件。\r\n * @returns {Promise<{ success: boolean, message: string, data?: any }>}\r\n */\r\nexport const addMenuItem = async (formData) => {\r\n  const name = formData.get('name');\r\n  const price = formData.get('price');\r\n  const imageFile = formData.get('image'); // 獲取 File 物件\r\n\r\n  // 1. 數據驗證\r\n  if (!name || typeof name !== 'string' || name.trim() === '') {\r\n    return { success: false, message: '菜單名稱是必填項。' };\r\n  }\r\n  if (!price || isNaN(parseFloat(price)) || parseFloat(price) <= 0) {\r\n    return { success: false, message: '價格必須是有效的正數。' };\r\n  }\r\n  if (!(imageFile instanceof File) || imageFile.size === 0) {\r\n    return { success: false, message: '圖片檔案是必填項。' };\r\n  }\r\n\r\n  try {\r\n    // 2. 處理圖片儲存到 public 資料夾\r\n    // 為了避免檔名衝突，給圖片生成一個唯一檔名\r\n    const fileExtension = path.extname(imageFile.name); // 獲取原始副檔名\r\n    const uniqueFileName = `${Date.now()}-${Math.random().toString(36).substring(2, 8)}${fileExtension}`;\r\n    \r\n    // 定義圖片上傳的目標目錄：/public/uploads\r\n    // process.cwd() 返回 Node.js 進程的當前工作目錄（即專案根目錄）\r\n    const uploadDir = path.join(process.cwd(), 'public', 'uploads');\r\n    const filePath = path.join(uploadDir, uniqueFileName); // 完整檔案路徑\r\n\r\n    // 檢查並創建上傳目錄 (如果 'public/uploads' 不存在)\r\n    await fs.mkdir(uploadDir, { recursive: true });\r\n\r\n    // 將圖片檔案的緩衝區寫入磁碟\r\n    const bytes = await imageFile.arrayBuffer(); // 將 File 物件轉換為 ArrayBuffer\r\n    const buffer = Buffer.from(bytes); // 將 ArrayBuffer 轉換為 Node.js Buffer\r\n    await fs.writeFile(filePath, buffer);\r\n\r\n    // 圖片的公開 URL 路徑，這是 Next.js 會提供的路徑\r\n    const imageUrl = `/uploads/${uniqueFileName}`;\r\n\r\n    // 3. 將菜單資訊存入資料庫\r\n    const newMenuItem = await prisma.MenuItem.create({ // 注意：這裡應該是 MenuItem 模型\r\n      data: {\r\n        name: name.trim(), // 清除名稱前後空白\r\n        price: parseFloat(price), // 確保價格是數字類型\r\n        imageUrl, // 存儲圖片的相對路徑\r\n      },\r\n    });\r\n\r\n    // 4. 返回成功訊息\r\n    return { success: true, message: '菜單新增成功！', data: newMenuItem };\r\n\r\n  } catch (error) {\r\n    console.error('新增菜單失敗:', error);\r\n\r\n    // 處理 Prisma 特定的錯誤，例如名稱重複 (P2002)\r\n    if (error.code === 'P2002' && error.meta?.target?.includes('name')) {\r\n      return { success: false, message: '菜單名稱已存在，請使用不同的名稱。' };\r\n    }\r\n    // 其他一般錯誤\r\n    return { success: false, message: `新增菜單時發生錯誤: ${error.message || '未知錯誤'}` };\r\n  }\r\n};\r\n\r\nexport const getMenuItems = async () => {\r\n    // TODO: 這裡未來會實作取得所有菜單的邏輯 (使用 Prisma)\r\n    return null;\r\n};\r\n\r\nexport const editMenuItem = async (body, menuId) => {\r\n    // TODO: 這裡未來會實作編輯菜單的邏輯 (使用 Prisma)\r\n    return null;\r\n};"],"names":[],"mappings":";;;;;;IAkFa,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/order.js"],"sourcesContent":["// app/actions/order.js\r\n\r\nexport const addOrder = async (body) => {\r\n  const response = await fetch(\"/api/order/checkout\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(body),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"送出訂單失敗\");\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// 其他函式目前先保留 null，未來可以實作\r\nexport const getCustomerOrder = async (customerId) => {\r\n  return null;\r\n};\r\nexport async function editOrderStatus({ status, paymentStatus }, orderId) {\r\n  console.log(\"➡️ 呼叫 editOrderStatus\", { status, paymentStatus, orderId });\r\n  try {\r\n    // 獲取目前訂單資料\r\n    const orderRes = await fetch(`/api/order/${orderId}`);\r\n    if (!orderRes.ok) return null;\r\n    const order = await orderRes.json();\r\n\r\n    // 根據條件判斷是否可以更新為 READY 狀態\r\n    if (status === \"READY\") {\r\n      if (!(order.paymentStatus === true && order.completedAt)) {\r\n        console.warn(\"❌ 無法更新為 READY：尚未完成付款或尚未標記完成\");\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const body = {};\r\n    if (status !== undefined) body.status = status;\r\n    if (paymentStatus !== undefined) body.paymentStatus = paymentStatus;\r\n\r\n    const res = await fetch(`/api/order/${orderId}/status`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!res.ok) {\r\n    const errorText = await res.text();\r\n    console.error(\"❌ 更新失敗：\", res.status, errorText);\r\n    return null;\r\n  }\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error(\"❌ 修改訂單狀態失敗:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getPendingOrders = async () => {\r\n  const response = await fetch(`/api/order?status=PENDING,PREPARING`);\r\n  if (!response.ok) {\r\n    console.error(\"❌ 無法取得訂單\", response.status);\r\n    return null;\r\n  }\r\n  return await response.json();\r\n};\r\nexport const getKitchenOrders = async () => {\r\n  const response = await fetch(\"/api/kitchen\");\r\n  if (!response.ok) {\r\n    console.error(\"❌ 無法取得廚房訂單\", response.status);\r\n    return null;\r\n  }\r\n  return await response.json();\r\n};\r\nexport const getReadyOrders = async () => {\r\n  return null;\r\n};\r\nexport const getOrderById = async () => {\r\n  return null;\r\n};\r\n\r\nexport async function editOrderCompletion(orderId) {\r\n  try {\r\n    const res = await fetch(`/api/order/${orderId}/status`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({}), // ⚠️ 不傳 status，只是為了觸發 completedAt 設定\r\n    });\r\n\r\n    if (!res.ok) return null;\r\n    return await res.json();\r\n  } catch (err) {\r\n    console.error(\"❌ 完成訂單失敗:\", err);\r\n    return null;\r\n  }\r\n}\r\n\r\n// app/actions/order.js\r\nexport async function deleteOrder(orderId) {\r\n  const res = await fetch(`/api/order/${orderId}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  if (!res.ok) return null;\r\n  return await res.json();\r\n}\r\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;;;;;;;AAEhB,MAAM,WAAW,OAAO;IAC7B,MAAM,WAAW,MAAM,MAAM,uBAAuB;QAClD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,mBAAmB,OAAO;IACrC,OAAO;AACT;AACO,eAAe,gBAAgB,EAAE,MAAM,EAAE,aAAa,EAAE,EAAE,OAAO;IACtE,QAAQ,GAAG,CAAC,yBAAyB;QAAE;QAAQ;QAAe;IAAQ;IACtE,IAAI;QACF,WAAW;QACX,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,EAAE,SAAS;QACpD,IAAI,CAAC,SAAS,EAAE,EAAE,OAAO;QACzB,MAAM,QAAQ,MAAM,SAAS,IAAI;QAEjC,yBAAyB;QACzB,IAAI,WAAW,SAAS;YACtB,IAAI,CAAC,CAAC,MAAM,aAAa,KAAK,QAAQ,MAAM,WAAW,GAAG;gBACxD,QAAQ,IAAI,CAAC;gBACb,OAAO;YACT;QACF;QAEA,MAAM,OAAO,CAAC;QACd,IAAI,WAAW,WAAW,KAAK,MAAM,GAAG;QACxC,IAAI,kBAAkB,WAAW,KAAK,aAAa,GAAG;QAEtD,MAAM,MAAM,MAAM,MAAM,CAAC,WAAW,EAAE,QAAQ,OAAO,CAAC,EAAE;YACtD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,IAAI,CAAC,IAAI,EAAE,EAAE;YACb,MAAM,YAAY,MAAM,IAAI,IAAI;YAChC,QAAQ,KAAK,CAAC,WAAW,IAAI,MAAM,EAAE;YACrC,OAAO;QACT;QACE,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO;IACT;AACF;;AAEO,MAAM,mBAAmB;IAC9B,MAAM,WAAW,MAAM,MAAM,CAAC,mCAAmC,CAAC;IAClE,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,QAAQ,KAAK,CAAC,YAAY,SAAS,MAAM;QACzC,OAAO;IACT;IACA,OAAO,MAAM,SAAS,IAAI;AAC5B;AACO,MAAM,mBAAmB;IAC9B,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,QAAQ,KAAK,CAAC,cAAc,SAAS,MAAM;QAC3C,OAAO;IACT;IACA,OAAO,MAAM,SAAS,IAAI;AAC5B;AACO,MAAM,iBAAiB;IAC5B,OAAO;AACT;AACO,MAAM,eAAe;IAC1B,OAAO;AACT;AAEO,eAAe,oBAAoB,OAAO;IAC/C,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,CAAC,WAAW,EAAE,QAAQ,OAAO,CAAC,EAAE;YACtD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC,CAAC;QACxB;QAEA,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO;QACpB,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,aAAa;QAC3B,OAAO;IACT;AACF;AAGO,eAAe,YAAY,OAAO;IACvC,MAAM,MAAM,MAAM,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE;QAC/C,QAAQ;IACV;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO;IACpB,OAAO,MAAM,IAAI,IAAI;AACvB","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/checkout/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { useMqttClient } from \"@/hooks/useMqttClient\";\r\nimport { getMenuItems } from \"@/app/actions/menu\";\r\nimport { addOrder } from \"@/app/actions/order\";\r\nimport { getOrderCheckoutTopic } from \"@/utils/mqttTopic\";\r\n\r\nexport default function CheckoutPage() {\r\n    const { data: session, status } = useSession();\r\n    const [cart, setCart] = useState([]);\r\n    const [menuItems, setMenuItems] = useState([]);\r\n    const [specialRequests, setSpecialRequests] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [topic, setTopic] = useState(\"\");\r\n\r\n    const { publishMessage } = useMqttClient({});\r\n\r\n    useEffect(() => {\r\n        if (status === \"loading\") return; // 還在判斷登入狀態，先不做事\r\n\r\n        if (status === \"unauthenticated\") {\r\n            alert(\"請先登入\");\r\n            window.location.href = \"/login\";\r\n            return;\r\n        }\r\n\r\n        const savedCart = sessionStorage.getItem(\"cart\");\r\n        if (savedCart) {\r\n            setCart(JSON.parse(savedCart));\r\n        } else {\r\n            window.location.href = \"/\";\r\n            return;\r\n        }\r\n\r\n        const fetchMenu = async () => {\r\n            try {\r\n                let data = await getMenuItems();\r\n                if (!data) {\r\n                    const response = await fetch(\"/api/menu\");\r\n                    data = await response.json();\r\n                }\r\n                setMenuItems(data);\r\n            } catch (err) {\r\n                alert(\"取得菜單失敗\");\r\n            }\r\n        };\r\n\r\n        setTopic(getOrderCheckoutTopic());\r\n        fetchMenu();\r\n    }, [status]);\r\n\r\n    const getTotalPrice = () => {\r\n        return cart.reduce((total, cartItem) => {\r\n            const menuItem = menuItems.find((item) => item.id === cartItem.id);\r\n            return total + (menuItem?.price || 0) * cartItem.quantity;\r\n        }, 0);\r\n    };\r\n\r\n    const handleSubmitOrder = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            const orderItems = cart.map((item) => ({\r\n                menuItemId: item.id,\r\n                quantity: item.quantity,\r\n                specialRequest: specialRequests[item.id] || \"\",\r\n            }));\r\n\r\n            const customerId = session?.user?.id;\r\n\r\n            let orderData = await addOrder({ orderItems, customerId });\r\n\r\n            if (!orderData) {\r\n                const response = await fetch(`/api/order/checkout`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ orderItems, customerId }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    alert(\"送出訂單失敗\");\r\n                    return;\r\n                }\r\n                orderData = await response.json();\r\n            }\r\n\r\n            publishMessage(topic, JSON.stringify(orderData));\r\n            sessionStorage.removeItem(\"cart\");\r\n            window.location.href = \"/orders\";\r\n        } catch (err) {\r\n            alert(\"送出訂單失敗\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-6\">\r\n            <h1 className=\"text-3xl font-bold text-gray-800 mb-8 text-center\">確認訂單</h1>\r\n\r\n            {cart.length === 0 ? (\r\n                <div className=\"text-center text-gray-500 text-lg mt-20\">\r\n                    購物車目前是空的，請先選擇餐點。\r\n                </div>\r\n            ) : (\r\n                <form\r\n                    onSubmit={handleSubmitOrder}\r\n                    className=\"max-w-2xl mx-auto bg-white shadow-lg rounded-xl p-6 space-y-6\"\r\n                >\r\n                    <h2 className=\"text-xl font-semibold text-gray-700\">訂單明細</h2>\r\n                    <ul className=\"divide-y\">\r\n                        {cart.map((cartItem) => {\r\n                            const menuItem = menuItems.find((item) => item.id === cartItem.id);\r\n                            if (!menuItem) return null;\r\n                            return (\r\n                                <li key={cartItem.id} className=\"py-4 space-y-2\">\r\n                                    <div className=\"flex justify-between items-center\">\r\n                                        <span className=\"text-gray-800 font-medium\">\r\n                                            {menuItem.name} × {cartItem.quantity}\r\n                                        </span>\r\n                                        <span className=\"text-right font-semibold text-gray-700\">\r\n                                            ${ (menuItem.price * cartItem.quantity).toFixed(2) }\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label\r\n                                            htmlFor={`special-request-${cartItem.id}`}\r\n                                            className=\"block text-sm text-gray-500 mb-1\"\r\n                                        >\r\n                                            備註（可選）\r\n                                        </label>\r\n                                        <textarea\r\n                                            id={`special-request-${cartItem.id}`}\r\n                                            className=\"w-full border rounded-md p-2 text-sm text-gray-700 focus:ring-2 focus:ring-blue-300 resize-none\"\r\n                                            rows={2}\r\n                                            placeholder=\"例如：去冰、少糖...\"\r\n                                            value={specialRequests[cartItem.id] || \"\"}\r\n                                            onChange={(e) =>\r\n                                                setSpecialRequests((prev) => ({\r\n                                                    ...prev,\r\n                                                    [cartItem.id]: e.target.value,\r\n                                                }))\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n\r\n                    <div className=\"border-t pt-4 text-lg font-bold flex justify-between\">\r\n                        <span>總金額：</span>\r\n                        <span>${getTotalPrice().toFixed(2)}</span>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting || cart.length === 0}\r\n                        className=\"w-full bg-gradient-to-r from-pink-500 to-red-500 text-white py-3 rounded-md shadow hover:opacity-90 disabled:bg-gray-400 transition duration-300\"\r\n                    >\r\n                        {isSubmitting ? \"正在送出訂單...\" : \"送出訂單\"}\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}