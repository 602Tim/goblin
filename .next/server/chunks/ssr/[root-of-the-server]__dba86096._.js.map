{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\r\nimport { PrismaClient } from \"@prisma/client\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\n// --- Prisma: Singleton ---\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma?: PrismaClient;\r\n};\r\n\r\nexport const prisma =\r\n  globalForPrisma.prisma ?? new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  globalForPrisma.prisma = prisma;\r\n}\r\n\r\n// --- Supabase ---\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error(\"❌ Supabase 環境變數未設定\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AACA;;;AAEA,4BAA4B;AAC5B,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C;IACzC,gBAAgB,MAAM,GAAG;AAC3B;AAEA,mBAAmB;AACnB,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/notification.js"],"sourcesContent":["// app/actions/notification.js (修正後)\r\n\"use server\"; // ✨ 必須有這行，將其標記為 Server Actions\r\n\r\nimport { prisma } from '@/lib/prisma'; // ✨ 導入具名導出的 prisma 客戶端\r\n\r\nexport const addNotification = async (body, userId) => {\r\n    try {\r\n        // ✨ 這裡應該是添加通知到資料庫的邏輯\r\n        if (!userId || !body || !body.message || !body.orderId || !body.title || !body.type) {\r\n            throw new Error(\"Missing notification data or userId.\");\r\n        }\r\n        const newNotification = await prisma.notification.create({\r\n            data: {\r\n                userId: userId,\r\n                orderId: body.orderId, // 假設 body 包含 orderId\r\n                message: body.message,\r\n                // 其他欄位如 isRead 會有 default 值\r\n                // title 和 type 需要在你的 Notification model 中定義或處理\r\n            }\r\n        });\r\n        return { success: true, notification: newNotification };\r\n    } catch (error) {\r\n        console.error(\"Failed to add notification (Server Action):\", error);\r\n        return { error: error.message };\r\n    }\r\n};\r\n\r\nexport const getUserNotification = async (userId) => {\r\n    try {\r\n        if (!userId) throw new Error(\"User ID is required for fetching notifications.\");\r\n\r\n        const notifications = await prisma.notification.findMany({\r\n            where: { userId },\r\n            orderBy: { createdAt: 'desc' },\r\n        });\r\n        return notifications;\r\n    } catch (error) {\r\n        console.error(\"Failed to get user notifications (Server Action):\", error);\r\n        return []; // ⚠️ 回傳空陣列，避免前端崩潰\r\n    }\r\n};\r\n\r\n\r\nexport const deleteNotification = async (notificationId) => {\r\n    try {\r\n        // ✨ 這裡應該是從資料庫刪除通知的邏輯\r\n        if (!notificationId) {\r\n            throw new Error(\"Notification ID is required for deleting.\");\r\n        }\r\n        await prisma.notification.delete({\r\n            where: { id: notificationId },\r\n        });\r\n        return { success: true };\r\n    } catch (error) {\r\n        console.error(\"Failed to delete notification (Server Action):\", error);\r\n        // 如果是找不到通知的錯誤，可以更精確地處理\r\n        if (error.code === 'P2025') {\r\n            return { error: \"Notification not found.\" };\r\n        }\r\n        return { error: error.message };\r\n    }\r\n};"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;;;AAGpC,+LAAuC,uBAAuB;;;;;AAEvD,MAAM,kBAAkB,OAAO,MAAM;IACxC,IAAI;QACA,qBAAqB;QACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,EAAE;YACjF,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,kBAAkB,MAAM,6GAAA,CAAA,SAAM,CAAC,YAAY,CAAC,MAAM,CAAC;YACrD,MAAM;gBACF,QAAQ;gBACR,SAAS,KAAK,OAAO;gBACrB,SAAS,KAAK,OAAO;YAGzB;QACJ;QACA,OAAO;YAAE,SAAS;YAAM,cAAc;QAAgB;IAC1D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+CAA+C;QAC7D,OAAO;YAAE,OAAO,MAAM,OAAO;QAAC;IAClC;AACJ;AAEO,MAAM,sBAAsB,OAAO;IACtC,IAAI;QACA,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;QAE7B,MAAM,gBAAgB,MAAM,6GAAA,CAAA,SAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;YACrD,OAAO;gBAAE;YAAO;YAChB,SAAS;gBAAE,WAAW;YAAO;QACjC;QACA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qDAAqD;QACnE,OAAO,EAAE,EAAE,kBAAkB;IACjC;AACJ;AAGO,MAAM,qBAAqB,OAAO;IACrC,IAAI;QACA,qBAAqB;QACrB,IAAI,CAAC,gBAAgB;YACjB,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,6GAAA,CAAA,SAAM,CAAC,YAAY,CAAC,MAAM,CAAC;YAC7B,OAAO;gBAAE,IAAI;YAAe;QAChC;QACA,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kDAAkD;QAChE,uBAAuB;QACvB,IAAI,MAAM,IAAI,KAAK,SAAS;YACxB,OAAO;gBAAE,OAAO;YAA0B;QAC9C;QACA,OAAO;YAAE,OAAO,MAAM,OAAO;QAAC;IAClC;AACJ;;;IAxDa;IAsBA;IAgBA;;AAtCA,+OAAA;AAsBA,+OAAA;AAgBA,+OAAA","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/menu.js"],"sourcesContent":["// app/actions/menu.js\r\n'use server'; // 標記為 Server Action\r\n\r\nimport { prisma } from '@/lib/prisma'; // 引入 Prisma 客戶端\r\nimport { promises as fs } from 'fs'; // 引入 Node.js 的檔案系統模組\r\nimport path from 'path'; // 引入 Node.js 的路徑模組\r\n\r\n// 如果未來有單獨上傳圖片的需求，可以填充這個函數\r\n// 目前，圖片處理會整合到 addMenuItem 中\r\nexport const uploadMenuImage = async (body) => {\r\n    console.warn(\"uploadMenuImage 函數目前未實作，圖片處理已整合到 addMenuItem。\");\r\n    return null;\r\n};\r\n\r\n/**\r\n * 管理員新增菜單項目\r\n * 接收 FormData 物件，處理圖片上傳並將菜單資訊存入資料庫。\r\n * @param {FormData} formData - 包含菜單名稱、價格和圖片檔案的 FormData 物件。\r\n * @returns {Promise<{ success: boolean, message: string, data?: any }>}\r\n */\r\nexport const addMenuItem = async (formData) => {\r\n  const name = formData.get('name');\r\n  const price = formData.get('price');\r\n  const imageFile = formData.get('image'); // 獲取 File 物件\r\n\r\n  // 1. 數據驗證\r\n  if (!name || typeof name !== 'string' || name.trim() === '') {\r\n    return { success: false, message: '菜單名稱是必填項。' };\r\n  }\r\n  if (!price || isNaN(parseFloat(price)) || parseFloat(price) <= 0) {\r\n    return { success: false, message: '價格必須是有效的正數。' };\r\n  }\r\n  if (!(imageFile instanceof File) || imageFile.size === 0) {\r\n    return { success: false, message: '圖片檔案是必填項。' };\r\n  }\r\n\r\n  try {\r\n    // 2. 處理圖片儲存到 public 資料夾\r\n    // 為了避免檔名衝突，給圖片生成一個唯一檔名\r\n    const fileExtension = path.extname(imageFile.name); // 獲取原始副檔名\r\n    const uniqueFileName = `${Date.now()}-${Math.random().toString(36).substring(2, 8)}${fileExtension}`;\r\n    \r\n    // 定義圖片上傳的目標目錄：/public/uploads\r\n    // process.cwd() 返回 Node.js 進程的當前工作目錄（即專案根目錄）\r\n    const uploadDir = path.join(process.cwd(), 'public', 'uploads');\r\n    const filePath = path.join(uploadDir, uniqueFileName); // 完整檔案路徑\r\n\r\n    // 檢查並創建上傳目錄 (如果 'public/uploads' 不存在)\r\n    await fs.mkdir(uploadDir, { recursive: true });\r\n\r\n    // 將圖片檔案的緩衝區寫入磁碟\r\n    const bytes = await imageFile.arrayBuffer(); // 將 File 物件轉換為 ArrayBuffer\r\n    const buffer = Buffer.from(bytes); // 將 ArrayBuffer 轉換為 Node.js Buffer\r\n    await fs.writeFile(filePath, buffer);\r\n\r\n    // 圖片的公開 URL 路徑，這是 Next.js 會提供的路徑\r\n    const imageUrl = `/uploads/${uniqueFileName}`;\r\n\r\n    // 3. 將菜單資訊存入資料庫\r\n    const newMenuItem = await prisma.MenuItem.create({ // 注意：這裡應該是 MenuItem 模型\r\n      data: {\r\n        name: name.trim(), // 清除名稱前後空白\r\n        price: parseFloat(price), // 確保價格是數字類型\r\n        imageUrl, // 存儲圖片的相對路徑\r\n      },\r\n    });\r\n\r\n    // 4. 返回成功訊息\r\n    return { success: true, message: '菜單新增成功！', data: newMenuItem };\r\n\r\n  } catch (error) {\r\n    console.error('新增菜單失敗:', error);\r\n\r\n    // 處理 Prisma 特定的錯誤，例如名稱重複 (P2002)\r\n    if (error.code === 'P2002' && error.meta?.target?.includes('name')) {\r\n      return { success: false, message: '菜單名稱已存在，請使用不同的名稱。' };\r\n    }\r\n    // 其他一般錯誤\r\n    return { success: false, message: `新增菜單時發生錯誤: ${error.message || '未知錯誤'}` };\r\n  }\r\n};\r\n\r\nexport const getMenuItems = async () => {\r\n    // TODO: 這裡未來會實作取得所有菜單的邏輯 (使用 Prisma)\r\n    return null;\r\n};\r\n\r\nexport const editMenuItem = async (body, menuId) => {\r\n    // TODO: 這裡未來會實作編輯菜單的邏輯 (使用 Prisma)\r\n    return null;\r\n};"],"names":[],"mappings":"AAAA,sBAAsB;;;;;;;;;AAGtB,+LAAuC,gBAAgB;AACvD,oKAAqC,qBAAqB;AAC1D,4KAAyB,mBAAmB;;;;;;;AAIrC,MAAM,kBAAkB,OAAO;IAClC,QAAQ,IAAI,CAAC;IACb,OAAO;AACX;AAQO,MAAM,cAAc,OAAO;IAChC,MAAM,OAAO,SAAS,GAAG,CAAC;IAC1B,MAAM,QAAQ,SAAS,GAAG,CAAC;IAC3B,MAAM,YAAY,SAAS,GAAG,CAAC,UAAU,aAAa;IAEtD,UAAU;IACV,IAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,KAAK,IAAI,OAAO,IAAI;QAC3D,OAAO;YAAE,SAAS;YAAO,SAAS;QAAY;IAChD;IACA,IAAI,CAAC,SAAS,MAAM,WAAW,WAAW,WAAW,UAAU,GAAG;QAChE,OAAO;YAAE,SAAS;YAAO,SAAS;QAAc;IAClD;IACA,IAAI,CAAC,CAAC,qBAAqB,IAAI,KAAK,UAAU,IAAI,KAAK,GAAG;QACxD,OAAO;YAAE,SAAS;YAAO,SAAS;QAAY;IAChD;IAEA,IAAI;QACF,wBAAwB;QACxB,uBAAuB;QACvB,MAAM,gBAAgB,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,UAAU,IAAI,GAAG,UAAU;QAC9D,MAAM,iBAAiB,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,KAAK,eAAe;QAEpG,8BAA8B;QAC9B,6CAA6C;QAC7C,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU;QACrD,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,WAAW,iBAAiB,SAAS;QAEhE,sCAAsC;QACtC,MAAM,6FAAA,CAAA,WAAE,CAAC,KAAK,CAAC,WAAW;YAAE,WAAW;QAAK;QAE5C,gBAAgB;QAChB,MAAM,QAAQ,MAAM,UAAU,WAAW,IAAI,2BAA2B;QACxE,MAAM,SAAS,OAAO,IAAI,CAAC,QAAQ,mCAAmC;QACtE,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,UAAU;QAE7B,iCAAiC;QACjC,MAAM,WAAW,CAAC,SAAS,EAAE,gBAAgB;QAE7C,gBAAgB;QAChB,MAAM,cAAc,MAAM,6GAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC/C,MAAM;gBACJ,MAAM,KAAK,IAAI;gBACf,OAAO,WAAW;gBAClB;YACF;QACF;QAEA,YAAY;QACZ,OAAO;YAAE,SAAS;YAAM,SAAS;YAAW,MAAM;QAAY;IAEhE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,WAAW;QAEzB,iCAAiC;QACjC,IAAI,MAAM,IAAI,KAAK,WAAW,MAAM,IAAI,EAAE,QAAQ,SAAS,SAAS;YAClE,OAAO;gBAAE,SAAS;gBAAO,SAAS;YAAoB;QACxD;QACA,SAAS;QACT,OAAO;YAAE,SAAS;YAAO,SAAS,CAAC,WAAW,EAAE,MAAM,OAAO,IAAI,QAAQ;QAAC;IAC5E;AACF;AAEO,MAAM,eAAe;IACxB,qCAAqC;IACrC,OAAO;AACX;AAEO,MAAM,eAAe,OAAO,MAAM;IACrC,mCAAmC;IACnC,OAAO;AACX;;;IAjFa;IAWA;IA8DA;IAKA;;AA9EA,+OAAA;AAWA,+OAAA;AA8DA,+OAAA;AAKA,+OAAA","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/.next-internal/server/app/checkout/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {deleteNotification as '7fd691921fda169e2dab6445c454d571f3988b3ca9'} from 'ACTIONS_MODULE0'\nexport {getUserNotification as '7f9a3f1e383f6fec2456938bc1aa06aaebb6660a83'} from 'ACTIONS_MODULE0'\nexport {getMenuItems as '7fcf98468f5917bf8f7794860eddebbc2adcf0c623'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAEA","debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/checkout/page.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/checkout/page.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/checkout/page.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/checkout/page.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/checkout/page.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/checkout/page.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}