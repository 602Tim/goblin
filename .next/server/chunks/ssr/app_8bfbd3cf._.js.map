{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/order.js"],"sourcesContent":["// app/actions/order.js\r\n\r\nexport const addOrder = async (body) => {\r\n  const response = await fetch(\"/api/order/checkout\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(body),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"送出訂單失敗\");\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// 其他函式目前先保留 null，未來可以實作\r\nexport const getCustomerOrder = async (customerId) => {\r\n  return null;\r\n};\r\nexport async function editOrderStatus({ status, paymentStatus }, orderId) {\r\n  console.log(\"➡️ 呼叫 editOrderStatus\", { status, paymentStatus, orderId });\r\n  try {\r\n    // 獲取目前訂單資料\r\n    const orderRes = await fetch(`/api/order/${orderId}`);\r\n    if (!orderRes.ok) return null;\r\n    const order = await orderRes.json();\r\n\r\n    // 根據條件判斷是否可以更新為 READY 狀態\r\n    if (status === \"READY\") {\r\n      if (!(order.paymentStatus === true && order.completedAt)) {\r\n        console.warn(\"❌ 無法更新為 READY：尚未完成付款或尚未標記完成\");\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const body = {};\r\n    if (status !== undefined) body.status = status;\r\n    if (paymentStatus !== undefined) body.paymentStatus = paymentStatus;\r\n\r\n    const res = await fetch(`/api/order/${orderId}/status`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!res.ok) {\r\n    const errorText = await res.text();\r\n    console.error(\"❌ 更新失敗：\", res.status, errorText);\r\n    return null;\r\n  }\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error(\"❌ 修改訂單狀態失敗:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getPendingOrders = async () => {\r\n  const response = await fetch(`/api/order?status=PENDING,PREPARING`);\r\n  if (!response.ok) {\r\n    console.error(\"❌ 無法取得訂單\", response.status);\r\n    return null;\r\n  }\r\n  return await response.json();\r\n};\r\nexport const getKitchenOrders = async () => {\r\n  const response = await fetch(\"/api/kitchen\");\r\n  if (!response.ok) {\r\n    console.error(\"❌ 無法取得廚房訂單\", response.status);\r\n    return null;\r\n  }\r\n  return await response.json();\r\n};\r\nexport const getReadyOrders = async () => {\r\n  return null;\r\n};\r\nexport const getOrderById = async () => {\r\n  return null;\r\n};\r\n\r\nexport async function editOrderCompletion(orderId) {\r\n  try {\r\n    const res = await fetch(`/api/order/${orderId}/status`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({}), // ⚠️ 不傳 status，只是為了觸發 completedAt 設定\r\n    });\r\n\r\n    if (!res.ok) return null;\r\n    return await res.json();\r\n  } catch (err) {\r\n    console.error(\"❌ 完成訂單失敗:\", err);\r\n    return null;\r\n  }\r\n}\r\n\r\n// app/actions/order.js\r\nexport async function deleteOrder(orderId) {\r\n  const res = await fetch(`/api/order/${orderId}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  if (!res.ok) return null;\r\n  return await res.json();\r\n}\r\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;;;;;;;;AAEhB,MAAM,WAAW,OAAO;IAC7B,MAAM,WAAW,MAAM,MAAM,uBAAuB;QAClD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,mBAAmB,OAAO;IACrC,OAAO;AACT;AACO,eAAe,gBAAgB,EAAE,MAAM,EAAE,aAAa,EAAE,EAAE,OAAO;IACtE,QAAQ,GAAG,CAAC,yBAAyB;QAAE;QAAQ;QAAe;IAAQ;IACtE,IAAI;QACF,WAAW;QACX,MAAM,WAAW,MAAM,MAAM,CAAC,WAAW,EAAE,SAAS;QACpD,IAAI,CAAC,SAAS,EAAE,EAAE,OAAO;QACzB,MAAM,QAAQ,MAAM,SAAS,IAAI;QAEjC,yBAAyB;QACzB,IAAI,WAAW,SAAS;YACtB,IAAI,CAAC,CAAC,MAAM,aAAa,KAAK,QAAQ,MAAM,WAAW,GAAG;gBACxD,QAAQ,IAAI,CAAC;gBACb,OAAO;YACT;QACF;QAEA,MAAM,OAAO,CAAC;QACd,IAAI,WAAW,WAAW,KAAK,MAAM,GAAG;QACxC,IAAI,kBAAkB,WAAW,KAAK,aAAa,GAAG;QAEtD,MAAM,MAAM,MAAM,MAAM,CAAC,WAAW,EAAE,QAAQ,OAAO,CAAC,EAAE;YACtD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,IAAI,CAAC,IAAI,EAAE,EAAE;YACb,MAAM,YAAY,MAAM,IAAI,IAAI;YAChC,QAAQ,KAAK,CAAC,WAAW,IAAI,MAAM,EAAE;YACrC,OAAO;QACT;QACE,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO;IACT;AACF;;AAEO,MAAM,mBAAmB;IAC9B,MAAM,WAAW,MAAM,MAAM,CAAC,mCAAmC,CAAC;IAClE,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,QAAQ,KAAK,CAAC,YAAY,SAAS,MAAM;QACzC,OAAO;IACT;IACA,OAAO,MAAM,SAAS,IAAI;AAC5B;AACO,MAAM,mBAAmB;IAC9B,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,QAAQ,KAAK,CAAC,cAAc,SAAS,MAAM;QAC3C,OAAO;IACT;IACA,OAAO,MAAM,SAAS,IAAI;AAC5B;AACO,MAAM,iBAAiB;IAC5B,OAAO;AACT;AACO,MAAM,eAAe;IAC1B,OAAO;AACT;AAEO,eAAe,oBAAoB,OAAO;IAC/C,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,CAAC,WAAW,EAAE,QAAQ,OAAO,CAAC,EAAE;YACtD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC,CAAC;QACxB;QAEA,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO;QACpB,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,aAAa;QAC3B,OAAO;IACT;AACF;AAGO,eAAe,YAAY,OAAO;IACvC,MAAM,MAAM,MAAM,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE;QAC/C,QAAQ;IACV;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO;IACpB,OAAO,MAAM,IAAI,IAAI;AACvB","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/actions/notification.js"],"sourcesContent":["// app/actions/notification.js (修正後)\r\n\"use server\"; // ✨ 必須有這行，將其標記為 Server Actions\r\n\r\nimport { prisma } from '@/lib/prisma'; // ✨ 導入具名導出的 prisma 客戶端\r\n\r\nexport const addNotification = async (body, userId) => {\r\n    try {\r\n        // ✨ 這裡應該是添加通知到資料庫的邏輯\r\n        if (!userId || !body || !body.message || !body.orderId || !body.title || !body.type) {\r\n            throw new Error(\"Missing notification data or userId.\");\r\n        }\r\n        const newNotification = await prisma.notification.create({\r\n            data: {\r\n                userId: userId,\r\n                orderId: body.orderId, // 假設 body 包含 orderId\r\n                message: body.message,\r\n                // 其他欄位如 isRead 會有 default 值\r\n                // title 和 type 需要在你的 Notification model 中定義或處理\r\n            }\r\n        });\r\n        return { success: true, notification: newNotification };\r\n    } catch (error) {\r\n        console.error(\"Failed to add notification (Server Action):\", error);\r\n        return { error: error.message };\r\n    }\r\n};\r\n\r\nexport const getUserNotification = async (userId) => {\r\n    try {\r\n        if (!userId) throw new Error(\"User ID is required for fetching notifications.\");\r\n\r\n        const notifications = await prisma.notification.findMany({\r\n            where: { userId },\r\n            orderBy: { createdAt: 'desc' },\r\n        });\r\n        return notifications;\r\n    } catch (error) {\r\n        console.error(\"Failed to get user notifications (Server Action):\", error);\r\n        return []; // ⚠️ 回傳空陣列，避免前端崩潰\r\n    }\r\n};\r\n\r\n\r\nexport const deleteNotification = async (notificationId) => {\r\n    try {\r\n        // ✨ 這裡應該是從資料庫刪除通知的邏輯\r\n        if (!notificationId) {\r\n            throw new Error(\"Notification ID is required for deleting.\");\r\n        }\r\n        await prisma.notification.delete({\r\n            where: { id: notificationId },\r\n        });\r\n        return { success: true };\r\n    } catch (error) {\r\n        console.error(\"Failed to delete notification (Server Action):\", error);\r\n        // 如果是找不到通知的錯誤，可以更精確地處理\r\n        if (error.code === 'P2025') {\r\n            return { error: \"Notification not found.\" };\r\n        }\r\n        return { error: error.message };\r\n    }\r\n};"],"names":[],"mappings":";;;;;;IAKa,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///D:/113-2/Breakfast-final-project/app/orders/pending/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useMqttClient } from \"@/hooks/useMqttClient\";\r\nimport { editOrderStatus, getPendingOrders, deleteOrder } from \"@/app/actions/order\";\r\nimport { addNotification } from \"@/app/actions/notification\";\r\nimport {\r\n    getOrderCheckoutTopic,\r\n    getCustomerCancelOrderTopic,\r\n    getNotificationTopicByUserId,\r\n    getOrderToKitchenTopic\r\n} from \"@/utils/mqttTopic\";\r\n\r\nexport default function PendingOrdersPage() {\r\n    const [orders, setOrders] = useState([]);\r\n    const { messages, publishMessage } = useMqttClient({\r\n        subscribeTopics: [\r\n            getOrderCheckoutTopic(),\r\n            getCustomerCancelOrderTopic(\"#\"),\r\n        ],\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getOrders = async () => {\r\n            try {\r\n                let data = await getPendingOrders();\r\n                if (!data) {\r\n                    const response = await fetch(`/api/order`);\r\n                    if (!response.ok) {\r\n                        alert(\"獲取訂單失敗\");\r\n                        return;\r\n                    }\r\n                    data = await response.json();\r\n                }\r\n                setOrders(data.map(order => ({ ...order, uiAccepted: false })));\r\n            } catch (err) {\r\n                console.error(\"獲取訂單失敗:\", err);\r\n                alert(\"獲取訂單失敗\");\r\n            }\r\n        };\r\n        getOrders();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (messages.length === 0) return;\r\n\r\n        const lastMessage = messages[messages.length - 1];\r\n        const topic = lastMessage.topic;\r\n\r\n        const isCheckoutOrder = topic === getOrderCheckoutTopic();\r\n        const isCancelOrder = topic.startsWith(getCustomerCancelOrderTopic(\"\"));\r\n\r\n        if (isCheckoutOrder) {\r\n            try {\r\n                const newOrder = JSON.parse(lastMessage.payload);\r\n                setOrders((prev) =>\r\n                    prev.some((order) => order.id === newOrder.id)\r\n                        ? prev\r\n                        : [{ ...newOrder, uiAccepted: false }, ...prev]\r\n                );\r\n            } catch (err) {\r\n                console.error(\"無法解析新訂單的 MQTT 訊息:\", err);\r\n            }\r\n        }\r\n\r\n        if (isCancelOrder) {\r\n            try {\r\n                const payload = JSON.parse(lastMessage.payload);\r\n                setOrders((prev) => prev.filter((order) => order.id !== payload.orderId));\r\n            } catch (err) {\r\n                console.error(\"無法解析取消訂單的 MQTT 訊息:\", err);\r\n            }\r\n        }\r\n    }, [messages]);\r\n\r\n    const updateOrderStatus = (orderId, updates) => {\r\n        setOrders((prev) =>\r\n            prev.map((order) =>\r\n                order.id === orderId ? { ...order, ...updates } : order\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleAcceptOrder = async (orderId) => {\r\n        const acceptedOrder = orders.find((order) => order.id === orderId);\r\n        if (!acceptedOrder) return;\r\n\r\n        if (!acceptedOrder.paymentStatus) {\r\n            alert(\"請先確認顧客已付款！\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const data = await editOrderStatus({ status: \"PREPARING\" }, orderId);\r\n            if (!data) throw new Error(\"修改訂單狀態失敗\");\r\n\r\n            updateOrderStatus(orderId, { status: \"PREPARING\" });\r\n\r\n            const message = `訂單 ${orderId.slice(0, 8)} 商家已接單，正在準備中`;\r\n            const customerId = acceptedOrder.customerId;\r\n\r\n            const notificationRes = await addNotification({ orderId, message }, customerId);\r\n            if (!notificationRes) throw new Error(\"傳送通知失敗\");\r\n\r\n            const notifyTopic = getNotificationTopicByUserId(customerId);\r\n            publishMessage(notifyTopic, JSON.stringify({\r\n                notificationId: notificationRes.id,\r\n                message,\r\n            }));\r\n\r\n            const kitchenTopic = getOrderToKitchenTopic();\r\n            const kitchenPayload = JSON.stringify({\r\n                orderId: acceptedOrder.id,\r\n                items: acceptedOrder.items.map((item) => ({\r\n                    name: item.menuItem.name,\r\n                    quantity: item.quantity,\r\n                    specialRequest: item.specialRequest,\r\n                })),\r\n                totalAmount: acceptedOrder.totalAmount,\r\n                createdAt: acceptedOrder.createdAt,\r\n            });\r\n            publishMessage(kitchenTopic, kitchenPayload);\r\n\r\n        } catch (error) {\r\n            console.error(\"接受訂單失敗:\", error);\r\n            alert(`❌ 接受訂單失敗：${error.message}`);\r\n        }\r\n    };\r\n\r\n    const handleConfirmPayment = async (orderId) => {\r\n        try {\r\n            const res = await editOrderStatus({ paymentStatus: true }, orderId);\r\n            if (!res) throw new Error(\"更新付款狀態失敗\");\r\n\r\n            updateOrderStatus(orderId, { paymentStatus: true });\r\n\r\n            const order = orders.find((o) => o.id === orderId);\r\n            if (!order) return;\r\n\r\n            const message = `訂單 ${orderId.slice(0, 8)} 已確認付款`;\r\n            const customerId = order.customerId;\r\n\r\n            const notificationRes = await addNotification({ orderId, message }, customerId);\r\n            if (!notificationRes) throw new Error(\"傳送通知失敗\");\r\n\r\n            const topic = getNotificationTopicByUserId(customerId);\r\n            publishMessage(topic, JSON.stringify({\r\n                message,\r\n                notificationId: notificationRes.id\r\n            }));\r\n\r\n        } catch (err) {\r\n            console.error(\"確認付款失敗:\", err);\r\n            alert(`❌ 確認付款失敗：${err.message}`);\r\n        }\r\n    };\r\n\r\n    const handleDeleteOrder = async (orderId, customerId) => {\r\n        try {\r\n            const res = await fetch(`/api/orders/${orderId}`, {\r\n                method: \"DELETE\",\r\n            });\r\n            if (!res.ok) throw new Error(\"✅\");\r\n\r\n            setOrders((prev) => prev.filter((order) => order.id !== orderId));\r\n            alert(\"✅ 已刪除訂單\");\r\n\r\n            const message = `訂單 ${orderId.slice(0, 8)} 已被商家取消`;\r\n            const notifyRes = await addNotification({ orderId, message }, customerId);\r\n            if (notifyRes) {\r\n                const topic = getNotificationTopicByUserId(customerId);\r\n                publishMessage(topic, JSON.stringify({\r\n                    notificationId: notifyRes.id,\r\n                    message,\r\n                }));\r\n            }\r\n\r\n            const kitchenTopic = getOrderToKitchenTopic();\r\n            publishMessage(kitchenTopic, JSON.stringify({\r\n                type: \"CANCEL_ORDER\",\r\n                orderId\r\n            }));\r\n\r\n        } catch (err) {\r\n            console.error(\"刪除訂單錯誤:\", err);\r\n            alert(\"已刪除\" + err.message);\r\n        }\r\n    };\r\n\r\n    const renderOrderActions = (order) => {\r\n        const isLocallyAccepted = order.uiAccepted;\r\n\r\n        if (order.status === \"PENDING\" && !isLocallyAccepted) {\r\n            return (\r\n                <div className=\"flex gap-3\">\r\n                    <button\r\n                        onClick={() => updateOrderStatus(order.id, { uiAccepted: true })}\r\n                        className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition\"\r\n                    >\r\n                        接受訂單\r\n                    </button>\r\n                    <button\r\n                        onClick={() => {\r\n                            if (confirm(\"確定要刪除此訂單嗎？\")) {\r\n                                handleDeleteOrder(order.id, order.customerId);\r\n                            }\r\n                        }}\r\n                        className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition\"\r\n                    >\r\n                        刪除訂單\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (order.status === \"PENDING\" && isLocallyAccepted) {\r\n            return (\r\n                <div className=\"flex gap-3\">\r\n                    <button\r\n                        onClick={() => handleConfirmPayment(order.id)}\r\n                        className=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition\"\r\n                        disabled={order.paymentStatus}\r\n                    >\r\n                        {order.paymentStatus ? \"已確認付款\" : \"確認付款\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleAcceptOrder(order.id)}\r\n                        className=\"bg-yellow-600 text-white px-4 py-2 rounded-md hover:bg-yellow-700 transition\"\r\n                    >\r\n                        標記為製作中\r\n                    </button>\r\n                    <button\r\n                        onClick={() => {\r\n                            if (confirm(\"確定要刪除此訂單嗎？\")) {\r\n                                handleDeleteOrder(order.id, order.customerId);\r\n                            }\r\n                        }}\r\n                        className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition\"\r\n                    >\r\n                        刪除訂單\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (order.status === \"READY\") {\r\n            return (\r\n                <p className=\"text-green-600 font-semibold\">餐點已完成，等待取餐</p>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-orange-100 via-pink-100 to-red-100 px-4 sm:px-6 py-8\">\r\n            <div className=\"max-w-5xl mx-auto\">\r\n                <h1 className=\"text-3xl font-bold mb-6 text-center sm:text-left text-gray-800\">\r\n                    進行中訂單\r\n                </h1>\r\n\r\n                {orders.length === 0 ? (\r\n                    <p className=\"text-gray-500 text-center sm:text-left\">\r\n                        目前沒有進行中的訂單。\r\n                    </p>\r\n                ) : (\r\n                    <div className=\"space-y-6\">\r\n                        {orders.map((order, idx) => (\r\n                            <div\r\n                                key={`${order.id}-${idx}`}\r\n                                className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition\"\r\n                            >\r\n                                <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4\">\r\n                                    <div>\r\n                                        <h3 className=\"text-lg font-bold text-gray-800\">\r\n                                            訂單 #{order.id.slice(0, 8)}\r\n                                        </h3>\r\n                                        <p className=\"text-sm text-gray-500\">\r\n                                            {new Date(order.createdAt).toLocaleString()}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"text-sm font-semibold mt-2 sm:mt-0\">\r\n                                        狀態：\r\n                                        <span className={`px-2 py-1 rounded-full text-white ${\r\n                                            order.status === 'PENDING' ? 'bg-gray-500' :\r\n                                            order.status === 'PREPARING' ? 'bg-blue-500' :\r\n                                            order.status === 'READY' ? 'bg-green-500' : 'bg-red-500'\r\n                                        }`}>\r\n                                            {order.status}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"mb-3 space-y-1\">\r\n                                    <p className=\"text-gray-700\">\r\n                                        <strong>總金額：</strong> ${order.totalAmount.toFixed(2)}\r\n                                    </p>\r\n                                    <p className=\"text-gray-700\">\r\n                                        <strong>顧客：</strong> {order.customer.name}\r\n                                    </p>\r\n                                    <p className=\"text-gray-700\">\r\n                                        <strong>付款狀態：</strong>\r\n                                        <span className={order.paymentStatus ? \"text-green-600\" : \"text-red-600\"}>\r\n                                            {order.paymentStatus ? \"已付款\" : \"未付款\"}\r\n                                        </span>\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div className=\"border-t pt-4\">\r\n                                    <h4 className=\"text-sm font-semibold mb-2 text-gray-700\">\r\n                                        餐點內容：\r\n                                    </h4>\r\n                                    <ul className=\"space-y-2\">\r\n                                        {order.items.map((item, idx) => (\r\n                                            <li\r\n                                                key={`${item.id}-${idx}`}\r\n                                                className=\"flex justify-between text-sm text-gray-600\"\r\n                                            >\r\n                                                <span>\r\n                                                    {item.menuItem.name} × {item.quantity}\r\n                                                    {item.specialRequest && (\r\n                                                        <span className=\"block text-xs text-gray-400\">\r\n                                                            備註：{item.specialRequest}\r\n                                                        </span>\r\n                                                    )}\r\n                                                </span>\r\n                                                <span>\r\n                                                    ${(item.menuItem.price * item.quantity).toFixed(2)}\r\n                                                </span>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className=\"mt-6 flex flex-col sm:flex-row justify-end items-center gap-3\">\r\n                                    {renderOrderActions(order)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}